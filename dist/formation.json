{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "BlankSSHKey": { "Fn::Equals": [ { "Ref": "SSHKey" }, "" ] }
  },
  "Outputs": {
    "SecurityGroup": {
      "Value": {
        "Ref": "SecurityGroup"
      }
    },
    "Processes": {
      "Value": "web"
    },
    "WebBalancerHost": {
      "Value": {
        "Fn::GetAtt": [
          "WebBalancer",
          "DNSName"
        ]
      }
    }
  },
  "Parameters": {
    "AMI": {
      "Default": "ami-04acbe6c",
      "Description": "Application AMI",
      "Type": "String"
    },
    "AllowSSHFrom": {
      "Default": "0.0.0.0/0",
      "Description": "Allow SSH From (CIDR notation)",
      "Type": "String"
    },
    "Environment": {
      "Default": "",
      "Description": "Environment URL",
      "Type": "String"
    },
    "GitHubToken": {
      "Default": "",
      "Description": "Token generated on https://github.com/settings/tokens",
      "Type": "String"
    },
    "HTTPPassword": {
      "Default": "",
      "Description": "Basic Auth password for the UI (required)",
      "Type": "String"
    },
    "SSHKey": {
      "Description": "Key name for SSH access",
      "Type": "String"
    },
    "WebScale": {
      "Default": "1",
      "Description": "Number of web processes to run",
      "Type": "Number"
    },
    "WebSize": {
      "Default": "t2.micro",
      "Description": "Size of instance to use for web processes",
      "Type": "String"
    }
  },
  "Resources": {
    "User": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyName": "Administrator",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ { "Effect": "Allow", "Action": "*", "Resource": "*" } ]
            }
          }
        ]
      }
    },
    "Access": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "Serial": "1",
        "Status": "Active",
        "UserName": { "Ref": "User" }
      }
    },
    "Gateway": {
      "Properties": {},
      "Type": "AWS::EC2::InternetGateway"
    },
    "GatewayAttachment": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "Gateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "LogGroup": {
      "Properties": {
        "RetentionInDays": 7
      },
      "Type": "AWS::Logs::LogGroup"
    },
    "RouteDefault": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "Gateway"
        },
        "RouteTableId": {
          "Ref": "Routes"
        }
      },
      "Type": "AWS::EC2::Route"
    },
    "Routes": {
      "Properties": {
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::RouteTable"
    },
    "SecurityGroup": {
      "Properties": {
        "GroupDescription": "Instances",
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Ref": "AllowSSHFrom"
            },
            "FromPort": "22",
            "IpProtocol": "tcp",
            "ToPort": "22"
          },
          {
            "CidrIp": "10.0.0.0/8",
            "FromPort": "0",
            "IpProtocol": "tcp",
            "ToPort": "65535"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "Settings": {
      "Properties": {
        "AccessControl": "Private",
        "Tags": [
          {
            "Key": "system",
            "Value": "convox"
          },
          {
            "Key": "type",
            "Value": "kernel"
          }
        ],
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Type": "AWS::S3::Bucket"
    },
    "Subnet0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Subnet0Routes": {
      "Properties": {
        "RouteTableId": {
          "Ref": "Routes"
        },
        "SubnetId": {
          "Ref": "Subnet0"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "Subnet1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Subnet1Routes": {
      "Properties": {
        "RouteTableId": {
          "Ref": "Routes"
        },
        "SubnetId": {
          "Ref": "Subnet1"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "Subnet2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.3.0/24",
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "Subnet2Routes": {
      "Properties": {
        "RouteTableId": {
          "Ref": "Routes"
        },
        "SubnetId": {
          "Ref": "Subnet2"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "Vpc": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      },
      "Type": "AWS::EC2::VPC"
    },
    "WebBalancer": {
      "Properties": {
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 60
        },
        "ConnectionSettings": {
          "IdleTimeout": 60
        },
        "CrossZone": true,
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": 5,
          "Target": "HTTP:3000/check",
          "Timeout": 3,
          "UnhealthyThreshold": "2"
        },
        "LBCookieStickinessPolicy": [
          {
            "PolicyName": "affinity"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "3000",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          }
        ],
        "LoadBalancerName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "web"
            ]
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "WebBalancerSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "Subnet0"
          },
          {
            "Ref": "Subnet1"
          },
          {
            "Ref": "Subnet2"
          }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "WebBalancerSecurityGroup": {
      "Properties": {
        "GroupDescription": "web Balancer",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": "80",
            "IpProtocol": "tcp",
            "ToPort": "80"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "WebIamRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:*"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ]
                },
                {
                  "Action": [
                    "kinesis:PutRecords"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:kinesis:*:*:stream/",
                          {
                            "Ref": "AWS::StackName"
                          },
                          "-*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Action": [
                    "cloudwatch:PutMetricData"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "WebRole"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "WebInstanceProfile": {
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "WebIamRole"
          }
        ]
      },
      "Type": "AWS::IAM::InstanceProfile"
    },
    "WebInstances": {
      "Properties": {
        "AvailabilityZones": [
          { "Fn::Select": [ 0, { "Fn::GetAZs": "" } ] },
          { "Fn::Select": [ 1, { "Fn::GetAZs": "" } ] },
          { "Fn::Select": [ 2, { "Fn::GetAZs": "" } ] }
        ],
        "Cooldown": 5,
        "DesiredCapacity": {
          "Ref": "WebScale"
        },
        "HealthCheckGracePeriod": 30,
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "WebLaunchConfiguration"
        },
        "LoadBalancerNames": [
          {
            "Ref": "WebBalancer"
          }
        ],
        "MaxSize": "10",
        "MetricsCollection": [
          {
            "Granularity": "1Minute"
          }
        ],
        "MinSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "web"
                ]
              ]
            }
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "Subnet0"
          },
          {
            "Ref": "Subnet1"
          },
          {
            "Ref": "Subnet2"
          }
        ]
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": 1,
          "MinInstancesInService": 1,
          "PauseTime": "PT5M",
          "WaitOnResourceSignals": "true"
        }
      }
    },
    "WebKinesis": {
      "Properties": {
        "ShardCount": 1
      },
      "Type": "AWS::Kinesis::Stream"
    },
    "WebLaunchConfiguration": {
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "10",
              "VolumeType": "standard"
            }
          }
        ],
        "EbsOptimized": false,
        "IamInstanceProfile": {
          "Ref": "WebInstanceProfile"
        },
        "ImageId": {
          "Ref": "AMI"
        },
        "InstanceMonitoring": true,
        "InstanceType": {
          "Ref": "WebSize"
        },
        "KeyName": { "Fn::If": [ "BlankSSHKey", { "Ref": "AWS::NoValue" }, { "Ref": "SSHKey" } ] },
        "SecurityGroups": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "{",
                {
                  "Fn::Join": [
                    "",
                    [
                      "  \"app\": \"",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "\","
                    ]
                  ]
                },
                "  \"process\": \"web\",",
                "  \"command\": \"\",",
                {
                  "Fn::Join": [
                    "",
                    [
                      "  \"env\": \"",
                      {
                        "Ref": "Environment"
                      },
                      "\","
                    ]
                  ]
                },
                "  \"logs\": {",
                {
                  "Fn::Join": [
                    "",
                    [
                      "    \"kinesis\": \"",
                      {
                        "Ref": "WebKinesis"
                      },
                      "\","
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "    \"cloudwatch\": \"",
                      {
                        "Ref": "LogGroup"
                      },
                      "\""
                    ]
                  ]
                },
                "  },",
                "  \"ports\": [",
                "    \"3000:3000\"",
                "  ],",
                "  \"services\": [",
                { "Fn::Join": [ "", [ "    \"AWS_REGION=", { "Ref": "AWS::Region" }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"AWS_ACCESS=", { "Ref": "Access" }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"AWS_SECRET=", { "Fn::GetAtt": [ "Access", "SecretAccessKey" ] }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"GITHUB_TOKEN=", { "Ref": "GitHubToken" }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"HTTP_PASSWORD=", { "Ref": "HTTPPassword" }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"SETTINGS_BUCKET=", { "Ref": "Settings" }, "\"," ] ] },
                { "Fn::Join": [ "", [ "    \"STACK_NAME=", { "Ref": "AWS::StackName" }, "\"," ] ] },
                "    \"RUNTIME=convox\"",
                "  ],",
                "  \"signal\": {",
                { "Fn::Join": [ "", [ "    \"stack\": \"", { "Ref": "AWS::StackName" }, "\"," ] ] },
                "    \"resource\": \"WebInstances\"",
                "  },",
                "  \"volumes\": [",
                "    \"/var/run/docker.sock:/var/run/docker.sock\"",
                "  ]",
                "}"
              ]
            ]
          }
        }
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration"
    }
  }
}
