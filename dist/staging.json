{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "BlankKey": { "Fn::Equals": [ { "Ref": "Key" }, "" ] },
    "DefaultAvailabilityZones": { "Fn::Equals": [ { "Fn::Join": [ "", { "Ref": "AvailabilityZones" } ] }, "" ] }
  },
  "Mappings": {
    "RegionConfig": {
      "us-east-1": { "Ami": "ami-d0b9acb8" },
      "us-west-2": { "Ami": "ami-6b88b95b" },
      "eu-west-1": { "Ami": "ami-ed7c149a" },
      "ap-northeast-1": { "Ami": "ami-c6c609c6" },
      "ap-southeast-2": { "Ami": "ami-39017e03" }
    }
  },
  "Outputs": {
    "BalancerHost": {
      "Value": { "Fn::GetAtt": [ "Balancer", "DNSName" ] }
    },
    "CustomTopic": {
      "Value": { "Ref": "KernelFormation" }
    },
    "RegistryHost": {
      "Value": { "Fn::Join": [ ":", [ { "Fn::GetAtt": [ "Balancer", "DNSName" ] }, "5000" ] ] }
    },
    "RegistryPassword": {
      "Value": { "Ref": "Password" }
    },
    "Settings": {
      "Value": {
        "Ref": "Settings"
      }
    }
  },
  "Parameters": {
    "AvailabilityZones": {
      "Type" : "CommaDelimitedList",
      "Default" : "",
      "Description" : "Override default availability zones"
    },
    "Bootstrap": {
      "Default": "arn:aws:sns:us-east-1:922560784203:convox-bootstrap",
      "Description": "Bootstrap topic (only experts should change this)",
      "Type": "String"
    },
    "Key": {
      "Default": "",
      "Description": "SSH key name for access to cluster instances",
      "Type": "String"
    },
    "Password": {
      "Default": "",
      "Description": "Kernel HTTP password",
      "Type": "String"
    },
    "RegistryImage": {
      "Default": "convox/registry:latest",
      "Description": "Docker image for the registry",
      "Type": "String"
    },
    "WebImage": {
      "Default": "convox/kernel:latest",
      "Description": "Docker image for the kernel",
      "Type": "String"
    }
  },
  "Resources": {
    "BootstrapUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyName": "Administrator",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ { "Effect": "Allow", "Action": "*", "Resource": "*" } ]
            }
          }
        ]
      }
    },
    "BootstrapAccess": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "Serial": "1",
        "Status": "Active",
        "UserName": { "Ref": "BootstrapUser" }
      }
    },
    "KernelFormationRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "lambda.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "Administrator",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ { "Effect": "Allow", "Action": "*", "Resource": "*" } ]
            }
          }
        ]
      }
    },
    "KernelFormation": {
      "Type": "Custom::LambdaFunction",
      "Properties": {
        "ServiceToken": { "Ref": "Bootstrap" },
        "Name": { "Fn::Join": [ "-", [ "convox-formation", { "Ref": "AWS::StackName" } ] ] },
        "ZipFile": "http://convox.s3.amazonaws.com/lambda-formation.zip",
        "Runtime": "nodejs",
        "Handler": "lambda.external",
        "Role": { "Ref": "KernelFormationRole" },
        "Timeout": "30",
        "Memory": "128",
        "Region": { "Ref": "AWS::Region" },
        "AccountId": { "Ref": "AWS::AccountId" },
        "AccessId": { "Ref": "BootstrapAccess" },
        "SecretAccessKey": { "Fn::GetAtt": [ "BootstrapAccess", "SecretAccessKey" ] }
      }
    },
    "KernelUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyName": "Administrator",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ { "Effect": "Allow", "Action": "*", "Resource": "*" } ]
            }
          }
        ]
      }
    },
    "KernelAccess": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "Serial": "1",
        "Status": "Active",
        "UserName": { "Ref": "KernelUser" }
      }
    },
    "Cluster": {
      "Properties": {
        "ServiceToken": {
          "Ref": "KernelFormation"
        },
        "Name": {
          "Ref": "AWS::StackName"
        }
      },
      "Type": "Custom::ECSCluster",
      "Version": "1.0"
    },
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "Tags": [
          { "Key": "Name", "Value": { "Ref": "AWS::StackName" } }
        ]
      }
    },
    "Gateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "GatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref": "Gateway" },
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "Subnet0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::If": [ "DefaultAvailabilityZones",
          { "Fn::Select": [ "0", { "Fn::GetAZs": "" } ] },
          { "Fn::Select": [ "0", { "Ref": "AvailabilityZones" } ] }
        ] },
        "CidrBlock": "10.0.1.0/24",
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::If": [ "DefaultAvailabilityZones",
          { "Fn::Select": [ "1", { "Fn::GetAZs": "" } ] },
          { "Fn::Select": [ "1", { "Ref": "AvailabilityZones" } ] }
        ] },
        "CidrBlock": "10.0.2.0/24",
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "Subnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::If": [ "DefaultAvailabilityZones",
          { "Fn::Select": [ "2", { "Fn::GetAZs": "" } ] },
          { "Fn::Select": [ "2", { "Ref": "AvailabilityZones" } ] }
        ] },
        "CidrBlock": "10.0.3.0/24",
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "Routes": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "RouteDefault": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "Gateway" },
        "RouteTableId": { "Ref": "Routes" }
      }
    },
    "Subnet0Routes": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet0" },
        "RouteTableId": { "Ref": "Routes" }
      }
    },
    "Subnet1Routes": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet1" },
        "RouteTableId": { "Ref": "Routes" }
      }
    },
    "Subnet2Routes": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Subnet2" },
        "RouteTableId": { "Ref": "Routes" }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Instances",
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" },
          { "IpProtocol": "tcp", "FromPort": "0", "ToPort": "65535", "CidrIp": "10.0.0.0/8" }
        ],
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "IamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "ClusterInstanceRole",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecs:CreateCluster",
                    "ecs:DeregisterContainerInstance",
                    "ecs:DiscoverPollEndpoint",
                    "ecs:Poll",
                    "ecs:RegisterContainerInstance",
                    "ecs:Submit*"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "IamRole" } ]
      }
    },
    "LaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "ImageId": { "Fn::FindInMap": [ "RegionConfig", { "Ref": "AWS::Region" }, "Ami" ] },
        "InstanceMonitoring": true,
        "InstanceType": "t2.micro",
        "KeyName": { "Fn::If": [ "BlankKey", { "Ref": "AWS::NoValue" }, { "Ref": "Key" } ] },
        "SecurityGroups": [ { "Ref": "SecurityGroup" } ],
        "UserData": { "Fn::Base64": 
          { "Fn::Join": [ "\n", [
            "#!/bin/bash",
            { "Fn::Join": [ "", [ "echo ECS_CLUSTER=", { "Ref": "AWS::StackName" }, " >> /etc/ecs/ecs.config" ] ] },
            { "Fn::Join": [ "", [ "echo OPTIONS=--insecure-registry=", { "Fn::Join": [ ":", [ { "Fn::GetAtt": [ "Balancer", "DNSName" ] }, "5000" ] ] }, " >> /etc/sysconfig/docker" ] ] },
            "service docker restart",
            { "Fn::Join": [ "", [ "docker login -u convox -p ", { "Ref": "Password" }, " ", { "Fn::GetAtt": [ "Balancer", "DNSName" ] }, ":5000" ] ] },
            "docker start ecs-agent"
          ] ] } 
        }
      }
    },
    "Instances": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "LaunchConfigurationName" : { "Ref": "LaunchConfiguration" },
        "AvailabilityZones": { "Fn::If": [ "DefaultAvailabilityZones",
          [
            { "Fn::Select": [ 0, { "Fn::GetAZs": "" } ] },
            { "Fn::Select": [ 1, { "Fn::GetAZs": "" } ] },
            { "Fn::Select": [ 2, { "Fn::GetAZs": "" } ] }
          ],
          [
            { "Fn::Select": [ 0, { "Ref": "AvailabilityZones" } ] },
            { "Fn::Select": [ 1, { "Ref": "AvailabilityZones" } ] },
            { "Fn::Select": [ 2, { "Ref": "AvailabilityZones" } ] }
          ]
        ] },
        "VPCZoneIdentifier": [ 
          { "Ref": "Subnet0" },
          { "Ref": "Subnet1" },
          { "Ref": "Subnet2" }
        ],
        "Cooldown": 5,
        "DesiredCapacity": "2",
        "HealthCheckType": "EC2",
        "HealthCheckGracePeriod": 0,
        "MinSize" : "1",
        "MaxSize" : "10",
        "MetricsCollection": [ { "Granularity": "1Minute" } ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ "cluster", { "Ref": "AWS::StackName" } ] ] },
            "PropagateAtLaunch": true
          },
          {
            "Key": "Cluster",
            "Value": { "Ref": "AWS::StackName" },
            "PropagateAtLaunch": true
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": 1,
          "MinInstancesInService": 1
        }
      }
    },
    "RegistryBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private"
      }
    },
    "RegistryUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "Path": "/convox/",
        "Policies": [
          {
            "PolicyName": "Administrator",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [ { "Effect": "Allow", "Action": "*", "Resource": "*" } ]
            }
          }
        ]
      }
    },
    "RegistryAccess": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "Serial": "1",
        "Status": "Active",
        "UserName": { "Ref": "RegistryUser" }
      }
    },
    "Balancer": {
      "Properties": {
        "ConnectionDrainingPolicy": {
          "Enabled": true,
          "Timeout": 60
        },
        "ConnectionSettings": {
          "IdleTimeout": 60
        },
        "CrossZone": true,
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": 5,
          "Target": "HTTP:5000/check",
          "Timeout": 3,
          "UnhealthyThreshold": "2"
        },
        "LBCookieStickinessPolicy": [
          {
            "PolicyName": "affinity"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "5000",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "80",
            "Protocol": "TCP"
          },
          {
            "InstancePort": "4443",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "443",
            "Protocol": "TCP"
          },
          {
            "InstancePort": "5100",
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": "5000",
            "Protocol": "TCP"
          }
        ],
        "LoadBalancerName": {
          "Ref": "AWS::StackName"
        },
        "SecurityGroups": [
          {
            "Ref": "BalancerSecurityGroup"
          }
        ],
        "Subnets": [
          { "Ref": "Subnet0" },
          { "Ref": "Subnet1" },
          { "Ref": "Subnet2" }
        ]
      },
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer"
    },
    "BalancerSecurityGroup": {
      "Properties": {
        "GroupDescription": {
          "Fn::Join": [
            " ",
            [
              {
                "Ref": "AWS::StackName"
              },
              "-balancer"
            ]
          ]
        },
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "5000",
            "ToPort": "5000"
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "Service": {
      "Properties": {
        "Cluster": {
          "Ref": "AWS::StackName"
        },
        "DesiredCount": "1",
        "LoadBalancers": [
          {
            "Fn::Join": [
              ":",
              [
                {
                  "Ref": "Balancer"
                },
                "web",
                "3000"
              ]
            ]
          },
          {
            "Fn::Join": [
              ":",
              [
                {
                  "Ref": "Balancer"
                },
                "web",
                "4443"
              ]
            ]
          },
          {
            "Fn::Join": [
              ":",
              [
                {
                  "Ref": "Balancer"
                },
                "registry",
                "443"
              ]
            ]
          }
        ],
        "Name": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "kernel" ] ] },
        "Role": {
          "Ref": "ServiceRole"
        },
        "ServiceToken": {
          "Ref": "KernelFormation"
        },
        "TaskDefinition": {
          "Ref": "TaskDefinition"
        }
      },
      "Type": "Custom::ECSService",
      "Version": "1.0"
    },
    "ServiceRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "elasticloadbalancing:Describe*",
                    "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                    "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                    "ec2:Describe*",
                    "ec2:AuthorizeSecurityGroupIngress"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*"
                  ]
                }
              ]
            },
            "PolicyName": "ServiceRole"
          }
        ]
      },
      "Type": "AWS::IAM::Role"
    },
    "Settings": {
      "Properties": {
        "AccessControl": "Private",
        "Tags": [
          {
            "Key": "system",
            "Value": "convox"
          },
          {
            "Key": "app",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      },
      "Type": "AWS::S3::Bucket"
    },
    "TaskDefinition": {
      "Properties": {
        "Name": {
          "Ref": "AWS::StackName"
        },
        "ServiceToken": {
          "Ref": "KernelFormation"
        },
        "Tasks": [
          {
            "CPU": "100",
            "Environment": {
              "AWS_REGION": { "Ref": "AWS::Region" },
              "AWS_ACCESS": { "Ref": "KernelAccess" },
              "AWS_SECRET": { "Fn::GetAtt": [ "KernelAccess", "SecretAccessKey" ] },
              "AWS_ACCOUNTID": { "Ref": "AWS::AccountId" },
              "CUSTOM_TOPIC": { "Ref": "KernelFormation" },
              "HTTP_PASSWORD": { "Ref": "Password" },
              "REGISTRY_HOST": { "Fn::Join": [ ":", [ { "Fn::GetAtt": [ "Balancer", "DNSName" ] }, "5000" ] ] },
              "REGISTRY_PASSWORD": { "Ref": "Password" }
            },
            "Image": { "Ref": "WebImage" },
            "Links": [],
            "Memory": "128",
            "Name": "web",
            "PortMappings": [
              "5000:3000",
              "4443:4443"
            ],
            "Volumes": [
              "/var/run/docker.sock:/var/run/docker.sock"
            ]
          },
          {
            "CPU": "100",
            "Environment": {
              "AWS_REGION": { "Ref": "AWS::Region" },
              "AWS_ACCESS": { "Ref": "RegistryAccess" },
              "AWS_SECRET": { "Fn::GetAtt": [ "RegistryAccess", "SecretAccessKey" ] },
              "BUCKET": { "Ref": "RegistryBucket" },
              "PASSWORD": { "Ref": "Password" },
              "SETTINGS_FLAVOR": "s3"
            },
            "Image": { "Ref": "RegistryImage" },
            "Links": [],
            "Memory": "256",
            "Name": "registry",
            "PortMappings": [
              "5100:443"
            ],
            "Volumes": []
          }
        ]
      },
      "Type": "Custom::ECSTaskDefinition",
      "Version": "1.0"
    }
  }
}
