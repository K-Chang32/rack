// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5a\x7b\x6f\xdb\xba\x15\xff\x3f\x9f\x82\x20\xfa\xc7\x56\xa4\x6e\xd2\xe2\x76\x9b\xb1\x0d\x48\x9d\xb4\xf5\x9a\xa4\x99\xed\xf6\x62\x2b\x82\x0b\x45\xa6\x6d\xcd\xb2\xa8\x4b\x52\xb9\x4d\x03\x7f\xf7\x1d\x3e\x24\xf1\x25\xdb\x79\x34\xd8\x2e\xb6\x75\xb1\x78\x48\x1e\x9e\xe7\xef\x90\xe7\xf6\x16\x4d\xc9\x2c\x2b\x08\xc2\x49\x59\x62\xb4\x5e\xef\x21\x74\x0b\xff\x43\x08\x1f\xfd\x3c\x9e\x90\x55\x99\x27\x82\xbc\xa3\x6c\x95\x88\x2f\x84\xf1\x8c\x16\x18\xf5\x11\x7e\x75\x70\x78\xf0\xe2\xe0\x2f\xf0\x5f\xbc\xaf\xc9\x07\xb4\x98\x66\x02\xc6\x39\xee\x9b\x25\x60\xa9\x5b\x24\xcc\x1a\x08\x5f\x25\x79\x52\xa4\x84\xbd\x48\x5b\x52\xd4\xd3\x7b\x06\xc4\x25\xa3\x29\xe1\xbc\x8b\x16\xbf\x85\xb5\x96\x83\xbc\xe2\x82\x30\xb9\x21\xc2\xef\x8a\x7e\xff\xe4\xd7\x2a\xc9\x25\x03\x5f\xe5\x97\x11\x99\xc1\x9f\xb8\xa6\x42\xeb\x7d\x84\x31\xba\x44\x7a\x91\xb5\x61\xfc\x22\x61\xc9\x8a\x00\x01\x97\x27\xdb\xcc\x79\x29\x69\x77\xe0\xda\xa1\xab\x59\xb6\xb8\x35\x9f\xe0\xe3\xe4\xa6\x24\x4a\xa2\x63\xc1\xb2\x62\x6e\xa4\xa9\x86\x8e\xc9\x2c\xa9\x72\xa1\x46\xdd\xef\x3c\x65\x59\x29\x6a\x5d\x60\x33\xb4\xde\x6f\x76\x2a\xab\xc8\x2e\x40\x7a\x5e\xad\xae\x80\x83\xc8\x26\x4a\xa7\x07\x5d\xdb\x48\x29\x5e\x7c\x46\x7c\x91\x30\xc2\x11\x9d\x21\x92\xa4\x0b\x64\x4e\x1b\xee\x7f\x52\x5c\x67\x8c\x16\x2b\x52\x88\x38\x1f\xdd\x87\xdd\x70\xd6\xe8\x51\x3f\x92\x9b\x1f\xbd\xc5\x88\xe4\x24\xe1\xe4\x09\xf4\x36\x22\x25\xe5\x99\xa0\x2c\x76\xa6\x87\x6d\x36\xa6\x15\x4b\x09\x4a\xe9\x94\x20\xd6\x6e\x13\xb0\x30\xae\xae\x0a\x22\x78\xc7\xfe\xa7\x19\x17\x7f\x85\xc0\x00\x9e\x36\x78\xd5\xef\x6b\xe2\x7e\x7f\x38\xfd\xfb\x7d\x78\xfa\x72\x31\x40\x5c\xef\x87\x66\x94\x21\xb1\xc8\x38\x92\x71\x28\xe0\xaa\x0e\x3d\x0e\x57\x9e\xe2\xfe\x30\x3a\xf9\xe7\xe7\xe1\xe8\xe4\xf8\x8f\xe8\x34\x59\x5d\x4d\x13\x34\x00\x7f\xa3\xab\x09\x2d\xb3\x14\x7d\x48\x8a\x69\x4e\x18\x32\xca\x44\xf5\x8a\x16\x7b\x67\x59\x71\x4a\x8a\xb9\x58\x28\xe6\x0e\xed\x21\xcf\xa8\x42\xfe\x2e\x06\x1d\x12\x6b\x85\x05\x34\x52\x52\xf7\x15\x54\x54\x40\x4e\x20\x1b\x11\xae\x94\x6c\x2b\x0f\x5b\x32\x18\xd1\x3c\x66\xc4\x35\x93\xc3\xa3\xb3\x7e\x5f\xd1\x58\x9c\x5c\x30\x5a\x12\x26\x32\xe2\x5a\x84\x4c\x0f\x9c\x57\x2b\x22\xe9\x2f\x68\x9e\xa5\x37\xc7\x34\xad\x02\x87\xf7\x94\x27\xd3\xc6\xab\x17\x90\x39\x0e\xff\x64\x6d\xa2\xed\x4e\x40\x00\x35\xf3\xbf\x3a\x43\xc8\x5b\x4f\x91\x9f\xcc\x66\x24\x55\xae\x7c\x94\xe7\xf4\x37\x6f\x35\xc3\x7a\x56\xa4\x59\x99\xe4\x3a\x3d\x8c\x09\xbb\xce\x52\xa2\x72\x03\xce\x95\x81\xf4\x92\x55\xf2\x9d\x16\xc9\x6f\xbc\x97\xd2\x95\xca\x0c\x91\x75\x8e\x52\x63\x61\x30\x8f\x0b\xde\x6f\x0f\x0e\x33\x3c\xf2\xb5\xf3\xdb\x1e\x75\x56\x86\x9c\x03\x56\x06\xcc\xbf\xc4\xee\x67\x29\x49\x2d\x6b\x57\x06\xbe\x04\x34\xe5\xcd\x39\x24\x2e\x25\x83\xe9\x2a\x2b\xc0\x35\x59\x02\x4e\x1d\xc8\x02\x6f\x51\x90\xa2\xd9\x45\x49\x8a\xd0\x51\x94\x14\x6c\xa0\x0a\x4b\x64\xf8\xb9\xfc\x59\x1b\xa6\xfe\x80\xd6\x5b\xc4\x66\xff\x6a\x29\xd7\x61\x96\x6b\x4d\x7b\x83\x59\xeb\x58\xd0\xef\xbf\xab\x0a\xcd\xd5\x4e\xd6\x3d\x80\x38\x19\x5a\xf2\xf8\xf5\xdb\x2a\x5d\x12\xd1\x02\x8e\x7f\xd0\xcc\x98\xc6\x0b\x38\x29\xfc\x1f\xe0\x95\x6b\xfa\x0d\xfe\x6e\xf1\x87\x62\x63\x44\xe6\xca\x9b\xe1\xf0\xa1\x9d\xc1\xc2\x26\x8f\xf9\xab\xea\x45\x99\x0e\x5a\x2f\x9d\x65\x1b\x38\x26\x61\xcd\xcb\x99\x82\x68\xf0\xbb\xf7\x3d\x2b\xb1\xde\xa4\xd3\xfc\x4c\x30\x94\xab\x18\x4f\x20\xdf\x00\x99\x14\xe0\x2b\x0e\xdd\x19\x59\x41\x92\x18\x67\xdf\x95\x38\x0f\x5f\xfd\xd9\x1d\xae\x03\x8a\x66\xfa\x3d\x11\x47\x42\x5b\x45\x10\x75\xa4\x4d\xb0\x22\xf0\x30\x3c\xaa\x0a\x91\x69\x1b\x2e\x40\xe2\xff\xe1\xee\x06\x13\x18\xa3\x95\xb2\xad\xd7\x07\xb8\xdb\x14\xe2\x60\x8d\x35\xf1\x70\x2b\x5e\xbb\x03\x29\xd7\x71\xc4\x03\x77\x0e\x29\x27\x69\xc5\x32\x71\x83\x3b\x96\xe2\xd2\x85\x9a\xc1\x3a\x7c\x7f\xaa\x44\x59\x89\xed\xe8\x99\x1a\xba\xad\x9c\xba\x84\x4d\x82\x27\x42\x40\x0e\xf3\x32\xfc\x97\x24\xaf\x8c\x2e\x8d\x79\x35\x74\xad\xb8\xf7\xea\x7f\xd7\x7b\xb0\x21\x29\xa6\x6a\x5d\xab\x86\x88\x81\x76\x5d\x52\xdc\x22\x96\x14\x73\x82\x9e\x2d\x51\xff\x6f\xa8\x77\x52\x08\xa6\xa2\x17\xaf\xcf\xa0\x01\x3d\xd0\x55\x25\xb8\xa4\xa4\x5b\xaf\xdb\x90\x1d\xc2\x7b\xe9\x19\xb8\x31\xa8\x96\x9d\xcd\x8c\xd5\xb8\xdc\x63\x8a\x28\xa6\x1a\x56\x5a\x2e\x48\x4f\x32\x09\x03\xda\x13\xec\xc4\xda\x01\xa9\x1d\x40\xfd\xd3\x1b\xfb\xbb\x83\x56\xce\xde\x4a\x18\x3d\x3a\x3a\x43\x82\x02\x20\x93\x56\x45\xb0\x63\x0f\x11\x2e\x60\x8d\x8c\x91\xe9\x80\x56\x4e\x18\x6f\xd1\x46\x17\x33\x2e\xa0\x09\xf0\xc5\x64\x41\x50\xa1\xa6\x4a\xa6\xb2\x02\x0c\x14\xfc\x52\x85\x13\x85\xf6\x05\x8c\x1b\x11\x4a\x76\xc1\xce\x00\x4a\x42\x0c\x41\x4b\x42\x4a\xc4\xaa\xa2\x00\x4b\x41\xb4\x40\x37\xe0\x45\x28\x35\x75\x4e\x7b\x9a\x5d\xd5\xd3\x58\xac\xd2\x04\xfe\x08\x83\x3c\x6b\x2d\x35\x62\xa5\x35\x89\x36\x4b\xb9\x17\x3e\xa5\xf3\xf7\x8c\x56\xe5\xa6\x69\x0d\x4d\x3d\x6f\x33\x5f\x56\x78\xe8\xe0\xcc\x49\x39\x66\x14\xf0\xb1\x60\x24\x59\xd5\x15\x72\x34\xdb\xe0\x31\xd4\x54\x8d\x46\x0f\x5b\x17\xeb\x38\x8b\x9b\xdb\xe8\x9c\xab\x7f\x35\xd1\x2e\x47\x69\xc3\x57\xed\x03\xcf\x56\x49\x91\xcd\x08\x17\x96\x13\xc0\xe7\x6c\x86\x7a\x1f\x12\x7e\xa1\xe7\xb5\x8e\xda\xe5\x35\x71\x8b\x3d\x19\x8c\x27\x09\x5f\x1e\x4b\x2e\x32\x11\x81\xf0\x25\xf0\xca\x3f\xa9\x6c\xe7\x24\xf4\xfd\x06\xb1\xa9\x04\x72\x19\x01\xe3\x9a\x5c\xa2\x6b\x7f\x0f\x8b\xd8\xc2\x35\x87\xbd\x83\xdd\x92\xbf\xd9\x78\x42\x97\xa4\xd8\x9a\xdf\x3a\x73\x9b\x01\x67\x1d\x40\xc1\x83\x07\x80\xaa\xd2\xa5\x9a\xa1\xd2\xb9\x54\x4b\x23\x43\x1c\x42\x06\xbb\x26\x6d\x16\xaa\xbf\x79\xa4\x5e\x31\xde\x90\xdb\xdf\xbd\x29\x0d\x18\xa9\xbd\x8c\xdc\xf8\x24\x52\xe2\xe6\xa2\xc5\xce\x3d\x44\x06\xf6\x5f\x04\x0c\xea\xb4\xb3\x11\xc0\xc5\xed\xc5\x8a\xfa\x1d\x86\x62\xf1\xa1\x0d\x15\xe6\x83\xa9\xbe\x35\x19\xb2\xb5\xc8\x76\x9f\xc6\xc8\x7b\x35\x55\x0d\x4a\xd5\xc6\x96\xb0\xf7\xdd\xd5\x8d\x2b\x59\xab\xd9\xba\x6f\xbf\x6f\x31\xd0\xfa\x50\xff\x13\x96\xe9\x5c\x9b\x85\x97\x64\x36\xa9\x9f\x71\x1a\xfa\x6d\xd9\xe9\x29\x9d\x21\x8c\x30\x9b\xd8\x0c\xc3\x85\xef\x5b\x0d\xac\x6d\xa0\x50\x1b\x88\x3c\xda\x53\x9a\x4c\x6b\x8b\x8a\x94\x6d\x6d\xac\xec\x5d\x50\x26\xce\xa0\x76\x97\x98\xca\xb7\x50\x14\x0a\xa6\xef\x09\xe6\x4e\x36\x1c\x11\x9b\xfe\xd0\x1b\xd0\x42\x24\x90\x10\x58\x5c\x94\x71\x93\x47\xbe\x82\xce\xa9\x4e\xa9\xbb\x95\x6a\xf6\x92\xdb\x90\x40\xf4\x8e\xd8\x45\x6b\xcd\xe9\xed\x94\xf4\xac\x9e\xe8\xe4\xa4\x76\x4e\x5c\xfa\x3e\xe8\xac\x17\xe9\x99\xac\x67\x84\x27\x27\x4b\xe1\x59\x01\x66\x20\xfd\x73\x96\xa5\x12\xc8\x6f\xbe\x7d\x7e\xe8\xea\xed\xad\x75\x7b\x47\x27\xeb\x0b\x72\x9f\x85\x7f\x00\xaf\x9a\x19\xcd\xe6\xbf\x24\xae\xb8\x7c\x90\xde\xe3\x08\xfd\x31\x75\x7e\x9f\x43\xd6\x7f\xde\xeb\x5a\xd6\xd7\xc1\x9d\xae\x84\x1f\xc1\x38\xef\xcc\xf0\x8f\xe7\xf0\x03\xe5\xb1\x97\x81\x9d\x64\x99\x15\x53\xf2\xcd\xda\x6c\x04\x85\x08\x5d\xf1\x27\x96\xb1\x31\xfb\xfb\x9c\xe1\x9c\x6e\x64\xcf\x1a\x53\x17\x6a\x64\xaa\x82\xad\x29\x7b\xa5\x8b\xed\xab\x35\x9a\x80\xfb\x10\x77\x73\x2b\xae\xfb\xf8\x1b\xae\x49\x1b\x29\x7a\xc2\xf3\x74\x6d\x57\x63\x3e\x78\x91\x32\x76\x72\x9a\x4e\x5c\xc7\xe7\x63\x8d\x06\xbc\xa7\xbb\x27\x74\xf5\xb0\x84\x7c\xd0\xda\x1b\xc1\xf0\xdd\xd7\xab\xd1\x55\x84\x5f\x4b\x6d\x3d\x1b\xac\x98\x45\x1f\xc1\x84\xfc\xe2\xf8\x5e\x46\x14\xd1\xfc\xd8\xdc\xa2\xb9\x05\xb0\x5f\x02\xeb\x77\x28\x87\xb4\x11\x69\x07\x8e\xc6\x8a\xcc\xbd\x8f\x09\xf0\x17\xda\x01\x98\xbe\xb8\x6a\xf4\xe9\x21\x29\xec\x70\x34\x2c\xe6\x4c\xbe\x93\x06\xa5\xcb\x46\xeb\x35\x54\x1e\x50\xc4\x83\x6c\xca\x86\x52\x1e\xf8\xa0\xa7\xfe\xf3\xf2\x20\xbc\xf1\x1f\x96\x70\x76\x41\x53\x2a\x1f\x3f\xb0\x48\xcb\x90\xe4\x1d\xa3\x2b\xb9\xf1\x63\x1a\x75\xb0\xc9\x84\x3e\xf6\x16\xce\x0e\xeb\x6d\xc5\xda\x76\xdc\x6a\xd7\x6d\x5f\xca\x74\x38\x75\x98\x95\xef\x7a\xfe\xfd\xe7\x7e\xa7\xc5\x76\x1b\x69\x9e\x70\x91\xa5\xad\xff\x81\xa6\xe5\xbd\x4d\xeb\x8e\xdb\x8d\xd6\x7a\x98\x6d\x0b\x13\xf3\xcd\x16\x84\xae\x88\xc9\xaf\xa8\x37\x4e\x17\x04\xf8\xc2\x59\x61\xee\xf6\xbd\x42\x56\x8f\x1b\x9d\xd4\xd4\x4e\xee\x0c\x45\x2a\xdb\x3c\x0a\xa2\x1e\x52\x8e\x19\x14\x12\x70\x10\xfd\xba\xa4\xf9\x3a\x29\x92\xab\x9c\x48\x19\x0a\x56\x91\x7d\xfb\x06\xff\xcd\x81\xe3\x20\xed\x3a\xf6\x85\x34\x58\xee\x34\x27\xed\xa4\xd7\x6f\x0e\xbc\x69\x8c\x72\xfe\x6f\x5a\x90\x7a\x8b\x76\xe8\x03\x49\x72\xb1\x18\x2c\x48\xba\xf4\xcb\x66\x3d\x74\x33\x59\x80\x1b\x2e\x68\x3e\x55\x97\xb3\xee\x53\xc3\x50\x0a\xe9\x5a\x3d\x16\xfe\xe4\x15\x97\x6c\x1e\x7f\xf1\xd1\x25\x1a\x9e\x0c\x2e\x9c\x77\x99\xae\x3c\x58\xdb\xf5\xbb\x8c\x71\x21\x7f\xd4\xb9\x31\xf6\x26\x64\x09\xee\xb5\xf3\xfd\x73\xb1\x88\x1e\xa6\x2d\xbe\x2c\x91\xc8\xe7\x7a\x52\x84\x95\xe9\x8e\xa1\x47\x1f\x78\x38\xd3\xc7\x7d\x94\x5a\xc9\x8f\x10\x91\x97\x48\x3b\x72\x29\xd9\x86\x24\xb6\xe7\xfc\xe8\x18\xa6\x6c\x43\x5e\x88\xa7\x64\x07\xce\x1a\xd2\xc7\xe0\xca\x58\x87\xb7\x4b\xc0\xa1\xa7\xa7\x07\x54\x87\xe1\x81\x42\xfd\x78\x1a\x1a\x8f\x4f\x23\xd3\x9e\x5c\x47\x1d\x5a\xea\xe4\xee\x47\xe8\x29\xba\x11\x70\x60\xd9\xbf\x97\x5e\x1e\x7e\x37\x10\x6c\x19\xe1\xe2\xff\x5c\x87\x71\x4f\xfb\x5d\xeb\xd0\xfb\x72\xe9\xf7\x95\x3c\x36\xf0\x39\x7d\x3b\xa0\x74\x99\x91\x31\x80\x94\xa5\x7c\xbc\xe2\x4d\x52\xff\x7a\xeb\x37\x9b\x24\x33\x75\x71\x2a\x5f\x04\x9c\x35\xbc\xe2\x42\x17\x1f\xb1\x9a\xa3\x0b\x26\x47\x6e\xa3\x36\xd7\x04\x56\x27\x89\x85\xcd\xb6\x15\x2e\xde\xeb\xbc\x73\xbb\x1b\x7f\x66\xf3\x3b\xa3\x3a\x5e\xf2\x76\xea\x88\xea\x6c\x74\xf2\x5a\x4d\xda\xae\x23\x1f\x53\x7b\x3d\x48\xae\x65\x78\x7d\x25\x9b\xdb\xa4\xdc\x16\x29\x7f\x1f\xab\x61\x2a\xcc\x73\x24\xe5\x5e\xf7\x94\x6f\xb3\x2e\x50\xdf\x8b\xfd\x7d\x19\x7f\x0d\xb1\xfa\x8f\x82\x2a\x39\x6c\x9c\x8a\x37\x4d\x39\xf0\xcf\xb5\x5f\x5b\xdf\x61\xf7\xd5\x86\x3e\xb6\xc7\x6f\x51\xeb\x54\xb2\x1a\x25\xba\x6a\xc8\xc1\x83\xae\x9a\xaa\x41\x97\xad\x57\xe4\x79\x3c\x26\x76\xcc\x61\x64\x2e\xa1\x20\xab\x43\x26\x97\xd5\x5f\xb4\xfe\xd8\xbe\xda\xc8\x5f\xeb\xe7\x4c\x2c\x76\x58\x2b\x7d\xb5\x95\x79\x20\x39\xaa\xc4\x82\xb2\xec\x3b\x89\x56\xd0\xc1\xac\xcb\x88\x54\xad\x76\xb3\xa8\x5c\x9f\x47\x96\xf1\x31\xd6\x5e\xd7\x68\x3b\x52\xff\xa5\x47\x37\xf6\x11\xd8\xaf\xa2\x32\x2e\x6d\x02\xd6\xbd\x26\xd4\xb5\x2f\x86\x26\x28\xd5\x16\x2c\x03\xa3\xfb\x5c\x89\x87\xab\x64\xde\x8c\xa9\x1f\xd6\xe0\x80\xae\x56\x49\x31\xd5\x11\xf9\x5a\x26\x02\xf9\x10\xa4\xbe\xe9\x9b\xca\x26\x28\xe3\xb6\xcf\x25\x52\xcf\xb8\xbd\x30\x4d\x25\x1c\xef\xf6\x6e\xdf\xbe\x96\xe4\x66\x1f\x3d\xd3\xfb\xea\xe6\x9f\x6b\x28\x39\x9c\xaa\x52\x5e\x0c\x01\x99\xae\xa1\xd5\x2f\x4d\x6e\x61\x52\x3f\xcb\xe1\x8f\xc3\xf3\x93\xf1\x70\x8c\xe3\xed\x20\x4d\x78\x38\xfd\xf4\xfe\x97\xf7\xa3\x4f\x9f\x2f\x70\x47\x03\x48\x1b\x48\x46\x9f\x06\x27\xe3\xb1\x2f\x61\xa7\xea\xff\x42\x73\x88\x0e\x76\xac\x69\x6b\xa9\x33\xf9\xf0\x29\xeb\x5f\x43\xe4\x9f\xb0\xb7\xe9\x38\x86\x35\xd4\x91\xb1\x8d\x9d\xd7\xc1\xcb\x61\x60\xb7\x99\x76\xa5\xe7\xb2\x1f\x34\x72\x6c\x2f\x0f\xe3\xb5\x70\x14\x7f\x44\x5e\x60\x77\x83\x5f\xe1\x7b\x65\x9b\x38\x6c\x08\x74\x57\x49\xee\xd5\x38\xa1\x93\x0e\x68\x3a\xc1\x83\xd5\xba\x17\xb6\xd2\xb9\xb0\x61\xfc\xba\xdf\x37\xfd\xa2\x46\x07\xc7\x24\x27\x32\xe2\x37\xe8\x0a\x38\x90\xc7\xdb\x82\x2b\x52\x89\x26\xa5\x24\x98\x46\xc4\x90\xb6\xaf\xed\x62\x1a\x4f\x92\xb9\x97\xfe\xea\x1e\x0e\xcc\x6f\x20\x56\xaf\xe4\x2d\x7a\x7d\x25\x5c\xb7\xa8\x3a\x97\x46\x0d\xbd\xec\x2e\xdf\x8f\xdd\x77\x07\x17\xa0\xb1\x00\x68\x49\xed\xbf\x01\x00\x00\xff\xff\xb3\x19\x36\x56\x5b\x34\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 13403, mode: os.FileMode(420), modTime: time.Unix(1453060956, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5b\x6f\xda\x30\x14\x7e\xe7\x57\x58\x7e\xda\x24\xc6\x28\x95\x2a\x2d\x9a\x26\x51\xa0\x55\xa4\xb5\x43\x85\x75\x0f\x53\x1f\x8c\x7d\x40\xd6\x82\xed\xd9\x4e\x27\x56\xf1\xdf\x67\x87\x24\xd8\x84\xd0\x8b\xb4\x5e\x50\xc8\x39\xdf\xf9\xce\xdd\x7e\x7a\x42\x0c\x96\x5c\x00\xc2\x06\xf4\x23\xa7\x80\xd1\x76\xdb\x41\xe8\xc9\xfd\x23\x84\x87\x3f\x66\x73\x58\xab\x8c\x58\xb8\x92\x7a\x4d\xec\x3d\x68\xc3\xa5\xc0\x28\x41\x78\xd0\x3f\xeb\x7f\xe8\x7f\x72\x7f\xb8\xbb\x53\x9f\x12\x4d\xd6\x60\x9d\x0e\x4e\x4a\x13\xde\x48\x96\x49\xea\x2c\xb0\x99\x95\x9a\xac\x20\x90\x39\xe9\x7c\xa3\xa0\x30\x77\x9b\xaf\x17\xa0\x4b\x53\x85\x68\x0c\x4b\x92\x67\xb6\x90\x9e\xf5\x63\x89\xa1\x9a\x2b\x5b\xb9\x52\x53\x20\xb3\xe3\x40\x86\xff\x05\xf4\xee\xfa\xf2\x3d\x2e\x51\xdb\x0a\x8e\xc7\xc4\x92\x05\x31\x6d\x7e\xcc\xac\xe6\x62\xd5\xe6\x07\x51\xea\x94\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xb7\xb8\xc1\x16\x3d\x3b\xe8\xad\x39\xd5\xf2\x94\x3b\x15\x0f\xa2\x19\x31\x06\x2d\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xa9\x53\xfc\x23\x35\x7b\x85\x5b\x31\xe7\xcc\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x59\xbe\x10\x60\xcd\x11\x02\x87\xfe\xca\x8d\xfd\xec\xda\x2e\x49\x26\xa3\x41\x92\xec\x74\x93\x24\x65\x5f\xda\x38\x1d\xe8\x7e\x3a\x42\xa6\xb4\xda\xa0\xfb\xee\x3a\xbb\xa8\xc2\x7f\x28\x77\x19\x6b\x5e\x51\x34\xc8\xef\x15\x3d\x1e\xe7\x3e\x44\xe7\xbc\x8f\xef\x74\x78\xb5\xe5\x4e\x60\x1f\x7f\xcb\xad\xca\xa3\x4c\xe2\xa9\xd4\xf6\xfc\xbc\x7f\x31\xa7\x6a\xc8\x98\xf6\x22\x67\x80\x64\x39\xec\x1e\xaf\x44\x92\x5c\x83\x1d\x5a\xeb\xbe\xff\xdc\x77\x08\xee\x22\x3c\x11\x4c\x49\x2e\x6c\xcf\x23\xc1\x18\x8c\x1e\xd0\x36\x6c\x8d\xbd\x6d\xff\xf8\x36\xdb\x05\xf2\xc0\xf0\x44\x3c\xde\x6c\xcc\xef\x2c\x9c\xcc\xc8\xf2\x1d\x2c\x7d\x22\x6a\xf9\x51\x74\xd8\xb9\xc7\xd0\xb5\xfc\x28\x3a\x6c\x93\x63\xe8\x5a\xee\xd1\x51\x15\xee\xc0\xc8\x5c\x53\x88\xea\x30\x03\x9a\x6b\x6e\x37\xd7\x5a\xe6\xea\xb9\x16\x88\x95\x83\x46\x98\x6a\xa9\x40\x5b\x0e\xf1\xb4\x38\x49\xa1\x7a\xd0\x27\x6b\x1f\x07\xaa\x16\x79\x37\x54\x8f\x18\x52\xb1\x2a\xca\xeb\x8a\x14\xe8\x20\x1f\x6c\xaa\x1c\xa5\x95\x54\x66\xde\xa0\xa5\xca\xd7\xee\x4a\xcb\x75\x59\x70\xec\xeb\xef\xdf\xcd\xe5\xe1\x9b\x11\x67\x3a\xf5\xa1\xba\x5d\xdd\x2b\x7e\x3f\x9e\x5d\xe0\x32\x57\xbb\x9f\x87\xc8\x27\x37\x1b\x29\x8b\x72\xec\xa7\x25\x00\x6c\x5b\x56\xc7\x73\x39\xbd\x1b\xbb\x8f\xf1\x65\xa8\xfc\xa2\x9c\x46\x90\x57\xe4\xb6\x00\xa5\xcc\x44\xb1\x54\x5b\xee\x64\x3c\xf5\x84\x3c\x1b\xcc\x7e\x96\x5e\x12\xc9\xb1\x23\xb7\xf6\xac\x21\xdc\x3b\x54\xa6\xa1\x22\x1b\xf9\x53\x23\xc2\x46\x07\x57\x2b\x2e\x65\x20\x2c\x5f\x72\xd0\x31\xb1\x8f\x67\x66\x09\xfd\x75\xbb\x1b\xa4\x03\xf8\x6d\x3d\x7e\xcd\x79\xef\xb6\x16\xaa\x81\x0a\xeb\x7e\x00\x9c\x88\x95\xbb\xec\xd4\xf5\x8c\xeb\x78\x43\x8c\xbb\xba\xc4\x7b\xa0\x39\xfc\x2d\x90\x78\xf9\x34\x37\x4e\x04\x8b\x47\x27\x92\xe4\x8b\x8c\xd3\x6c\x33\xa4\x6e\x9f\x18\xbe\xc8\x0a\x67\x97\x24\x33\x87\x4d\xb7\xab\x5d\xd5\x2a\x2b\x35\x88\xe5\xee\xcc\x88\x66\xbe\x98\xf6\x30\x49\xd1\xca\x71\x3b\xed\xa1\xd9\xa6\x9d\xea\x73\xdb\x71\x17\x45\x10\xcc\xdf\x0d\xff\x05\x00\x00\xff\xff\xc3\x37\xc1\xe6\x33\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1444946975, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1447779414, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x5b\x6f\xe2\x38\x14\x7e\xe7\x57\x58\x7e\xda\x95\x58\x96\xb2\x17\x69\xa3\xd5\x48\x14\x68\x15\x69\xa6\x83\x0a\xd3\x79\x18\xf5\xc1\xd8\x07\x64\x4d\xb0\x2d\xdb\xe9\xa8\x53\xf1\xdf\xe7\x38\x24\x21\x26\x04\x7a\x47\x21\xe7\x7c\xdf\xb9\x1f\xfb\xe5\x85\x08\x58\x4b\x05\x84\x3a\xb0\x4f\x92\x03\x25\xbb\x5d\x8f\x90\x17\xfc\x27\x84\x8e\xbf\x2e\x96\xb0\x35\x19\xf3\x70\xa3\xed\x96\xf9\x07\xb0\x4e\x6a\x45\x49\x42\xe8\x68\x78\x35\xfc\x63\xf8\x1f\xfe\xd1\xfe\x5e\x7d\xce\x2c\xdb\x82\x47\x1d\x9a\x94\x14\x81\x24\xcb\x34\x47\x06\xb1\xf0\xda\xb2\x0d\x34\x64\x28\x5d\x3e\x1b\x28\xe8\xee\xf2\xed\x0a\x6c\x49\x55\x88\xa6\xb0\x66\x79\xe6\x0b\xe9\xd5\x30\x96\x38\x6e\xa5\xf1\x95\x2b\xb5\x09\xe2\xf6\x36\x88\x93\x3f\x81\xfc\x76\x7b\xfd\x3b\x2d\x51\xbb\x0a\x4e\xa7\xcc\xb3\x15\x73\x5d\x7e\x2c\xbc\x95\x6a\xd3\xe5\x07\x33\xe6\x9c\x23\xa5\x2a\x11\xa5\x0d\xa2\x30\x21\x6d\x17\x52\xe5\x3c\x53\x1c\x0a\xa3\xef\x71\x43\xac\x06\x7e\x34\xd8\x4a\x6e\xf5\x39\x77\x2a\x3b\x84\x67\xcc\x39\xb2\xd6\xb6\xe1\x99\x16\xe0\xda\xae\xcd\x51\xf1\x87\xb6\xe2\x0d\x6e\xc5\x36\x17\xd8\x48\x60\x89\xa9\x78\x5a\x16\x16\xf9\x4a\x81\x77\x27\x0c\x20\xfa\xa3\x74\xfe\x7f\x6c\xbb\x24\x99\x4d\x46\x49\xb2\xd7\x4d\x92\x54\x7c\xe8\xb2\x89\xa0\x87\xf9\x84\xb8\x92\xb5\x65\xee\x0b\x76\x76\x51\x85\xf7\xe4\xd9\x68\xe7\x37\x16\xf3\x74\x39\xe0\xbc\xb2\xd3\xf2\xe0\xc1\xf0\xd3\xc1\x1e\xe2\xc4\x08\x42\x90\xe7\x63\xac\x99\x7b\x0d\x7e\xfa\x39\xf7\x26\x8f\xd2\x49\xe7\xda\xfa\x7f\xfe\xfe\x6b\xb4\xe4\x66\x2c\x84\x0d\x22\x24\x60\x59\x0e\xfb\xc7\x1b\x95\x24\xb7\xe0\xc7\xde\xe3\xf7\x6f\x87\x36\xa1\x7d\x42\x67\x4a\x18\x2d\x95\x1f\x04\x24\x38\x47\xc9\x23\xd9\x35\xfb\xe3\xc0\x1d\x1e\xdf\xc7\x5d\x20\x8f\x88\x67\xea\x69\x5e\x66\xbb\x39\xa1\x11\xf9\x3d\xac\x43\x2e\x6a\x79\x17\x41\xb3\x89\x4f\x11\xd4\xf2\x2e\x82\x66\xd3\x9c\x22\xa8\xe5\x81\x20\x2a\xc7\x3d\x38\x9d\x5b\x0e\x51\x41\x16\xc0\x73\x2b\xfd\xf3\xad\xd5\xb9\xb9\xd4\x0b\xb1\x72\xa3\x23\xe6\x56\x1b\xb0\x5e\x42\x3c\x3b\x28\x29\x54\x8f\x1a\xa6\x6a\x5d\x52\x6d\xf6\x7e\x13\x11\x19\x49\xd5\xa6\x28\x35\x16\xac\xa1\x43\x42\xbc\xa9\x41\xab\x5e\x73\x9d\x05\x4e\xcf\x4d\xa8\xe3\x8d\xd5\xdb\xb2\xf8\x34\xf4\x42\x78\xb7\xd4\xc7\x6f\x26\x52\xd8\x34\x44\x8b\xcb\x7b\x50\xfc\xfe\x79\xf5\x2f\x2d\xd3\xb5\xff\x79\x8c\x7c\xc2\x39\x49\x45\x94\xe6\x30\x39\x0d\xc0\xae\x63\x97\x5c\x4a\xeb\xfd\x14\x3f\xa6\xd7\x4d\xe5\x57\xa5\x35\x82\xbc\x2d\xbd\x05\x2e\x15\x2e\x0a\xa7\xda\x7c\x67\x43\xaa\x07\xe6\x62\x3c\x87\xd1\x7a\x4d\x30\xa7\x8e\xe1\xda\xb3\x96\xf0\xe0\x50\x99\x89\xca\xd8\x24\x9c\x24\x11\x36\x3a\xcc\x3a\x71\xa9\x00\xe5\xe5\x5a\x82\x8d\x0d\x87\x78\x16\x9e\xf1\xef\x77\xfb\x71\x3a\x82\xdf\xd5\x43\xd8\x9e\xfd\x7e\x67\xad\x5a\xa8\x66\xe9\x8f\x80\x33\xb5\xc1\x0b\x10\x3d\xbd\xec\x51\xfe\x89\x39\xbc\xd1\xc4\x0b\xa1\xbd\x05\x3a\x20\xf1\x22\x6a\x6f\x9f\x08\x16\x0f\x50\x24\xc9\x57\x99\xe4\xd9\xf3\x98\xe3\x62\x71\x72\x95\x15\xfe\xae\x59\xe6\x8e\xfb\x6e\x5f\xbe\xaa\x5b\x36\xe6\x88\x08\x4f\x91\x68\xf2\x8b\x99\x6f\xe6\x29\xda\x3d\xb8\xdc\x1e\xdb\x9d\xda\xab\x3e\x77\x3d\xbc\x3f\x82\x12\xe1\xca\xf8\x2b\x00\x00\xff\xff\xa1\x5a\xfe\x19\x4a\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1449877651, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1444946975, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1447779414, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

