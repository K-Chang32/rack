// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x6d\x6f\x1b\xb9\xf1\x7f\xef\x4f\x41\x2c\xf2\xe2\xff\x3f\xc8\x8a\x9d\xe0\xd2\x56\x68\x0b\x38\xb2\x93\xa8\xb1\x1d\x57\x72\x72\x68\x03\xe3\xb0\x5e\x51\xd2\x56\xab\xe5\x1e\xc9\xf5\x45\x31\xf4\xdd\x3b\x24\xf7\x81\x8f\x5a\x59\xb6\x83\xb6\x77\x89\x23\x2d\x67\xc9\xe1\xcc\x70\xe6\x37\x9c\xf1\xfd\x3d\x9a\xe2\x59\x9a\x63\x14\xc5\x45\x11\xa1\xcd\xe6\x00\xa1\x7b\xf8\x8b\x50\x74\xf2\xcb\xe4\x1a\xaf\x8a\x2c\xe6\xf8\x1d\xa1\xab\x98\x7f\xc1\x94\xa5\x24\x8f\xd0\x00\x45\xaf\x8e\x8e\x8f\x0e\x8f\xfe\x04\x7f\xa2\x9e\x22\x1f\x92\x7c\x9a\x72\x18\x67\xd1\xa0\x9a\x02\xa6\xba\x47\xbc\x9a\x03\x45\xb7\x71\x16\xe7\x09\xa6\x87\x49\x4b\x8a\xfa\x6a\x4d\x87\xb8\xa0\x24\xc1\x8c\xed\x44\x4b\xf1\x3c\x65\x9c\xae\x43\xc4\xd1\x15\x4d\xef\x80\x52\x30\x86\xa2\x77\xf9\x60\x70\xf6\x5b\x19\x67\x82\xd1\xaf\xe2\xc9\x18\xcf\xe0\x63\x43\x85\x36\x3d\x14\xfd\x03\xc3\x1c\x37\x48\x4d\xb1\xa9\xf6\x78\x15\xd3\x78\x85\x39\xc8\x41\x08\x61\xfb\x26\x0b\x41\xbb\xc3\x06\x0d\xba\x9a\xe1\x61\x56\x32\x58\x46\x93\x24\x3c\xbc\x5e\x17\x58\x0a\x7f\xc2\x69\x9a\xcf\x2b\xc1\xcb\xa1\x53\x3c\x8b\xcb\x8c\xcb\x51\xf3\x39\x4b\x68\x5a\xf0\x5a\x6d\x51\x35\xb4\xe9\x35\x2b\x15\xa5\x67\x15\x20\xbd\x2c\x57\xb7\xc0\x81\x67\x11\xa9\xfe\xa3\xd0\x32\x30\x3a\xbc\xfa\x8c\xd8\x22\xa6\x98\x21\x32\x43\x38\x4e\x16\xa8\xda\xad\xbb\xfe\x59\x7e\x97\x52\x92\xaf\x70\xce\xfd\x7c\x84\x37\xbb\x65\xaf\xde\xad\x7e\xc4\xeb\xe7\x5e\x42\x33\xb4\xdd\x96\x31\xe5\x46\xb1\x30\x8d\x34\x07\xd5\xe7\x71\x86\x32\x12\x4f\x51\x6d\x50\x0c\x9e\x83\x18\xe5\xfc\x88\x95\xb7\x39\xe6\x2c\xc0\xf2\x25\xd1\x07\x4e\xb2\x8c\xfc\x8e\xa7\x5f\xe2\xac\xc4\xca\xe4\xa5\x71\xf7\x24\x1d\xba\x71\xf6\x30\xc6\x19\x8e\x99\x6f\x0f\x4f\x6d\x7b\x63\x5c\x10\x96\x72\x42\x7d\x7a\x79\xdc\x62\x13\x52\xd2\x04\xa3\x84\x4c\x31\xa2\xed\x32\x0e\x0b\x93\x4a\x90\xfe\xf5\xcf\xc1\xad\xfc\x19\xfc\x20\x38\x8c\xe1\xab\xc1\x40\x11\x0f\x06\xa3\xe9\x5f\xf7\xe1\xe9\xcb\xd5\xb0\x56\x1c\x9a\x11\x8a\xf8\x22\x65\x48\xb8\xdd\x10\x57\x61\x6b\x7a\x1e\xe6\x2c\xeb\xea\x60\xb2\x0e\x07\x06\x77\x96\x45\xff\xdf\xf8\xec\xef\x9f\x47\xe3\xb3\xd3\xff\x47\xe7\xf1\xea\x76\x1a\xa3\x21\x38\x36\xb2\xba\x26\x45\x9a\xa0\x0f\x71\x3e\xcd\x30\x45\x95\xc5\xa1\x7a\x46\x8d\xcd\x8b\x34\x3f\xc7\xf9\x9c\x2f\x24\x93\xc7\xfa\x90\x75\xac\x5c\xfe\xae\x86\x01\xc9\xb5\x42\x03\x1a\x21\xb1\x7d\x05\xe6\x15\x90\x11\x31\xc6\x98\x49\x4b\xd4\x2d\x2c\xd2\x64\x30\x26\x59\xc0\x5b\x48\x26\x47\x27\x17\x83\x81\xa4\xd1\x38\xb9\xa2\xa4\xc0\x94\xa7\xd8\x34\x5b\x71\xd4\x19\x2b\x57\x58\xd0\x5f\x91\x2c\x4d\xd6\xa7\x24\x29\x1d\xcf\x6a\x29\x4f\x84\xf2\x57\x87\x10\xcd\x8f\xff\xa0\x2d\xa2\xcc\x90\x83\x35\x54\xef\x7f\x35\x86\x90\x35\x9f\x24\x3f\x9b\xcd\x70\x22\x1d\x90\x74\x39\xd6\x6c\x15\xeb\x69\x9e\xa4\x45\x9c\xa9\x50\x3c\xc1\xf4\x2e\x4d\xb0\x72\x4a\x99\x34\x90\x7e\xbc\x8a\xbf\x93\x3c\xfe\x9d\xf5\x13\xb2\x92\x21\xd8\x33\xcf\x49\x52\x59\x18\xbc\xc7\x38\x1b\xb4\x1b\x6f\x3d\x5a\xfd\xdf\xc6\xf8\xae\x8f\x1a\x33\x43\x70\x07\x2b\x03\xe6\x5f\x46\xe6\x63\x21\x49\x25\x6b\x53\x06\xb6\x04\x14\xe5\xfa\x12\x10\x82\x94\xc1\x74\x95\xe6\x02\x96\xc4\xe0\x79\x1c\x59\x44\x1d\x0a\x92\x34\xbb\x28\x49\x12\x1a\x8a\x12\x82\x75\x54\xa1\x89\x2c\xfa\x49\x7c\xad\x0d\x53\x3d\x40\x9b\x0e\xb1\xe9\xdf\x5a\xca\x8d\x0b\x27\x5a\xd3\xde\x62\xd6\xca\x17\x0c\x06\xef\xca\x5c\x71\xb5\x93\x75\x0f\xc1\x99\xbb\x96\x3c\x79\xfd\xb6\x4c\x96\x98\xb7\xe0\xee\x6f\x24\xad\x4c\xe3\x10\x76\x0a\xff\x00\x2c\xbc\x23\xdf\xe0\x73\x8b\xf5\x24\x1b\x63\xc0\x8d\xe2\x34\xc3\xe6\x5d\x3b\x83\x89\x2b\xc0\x60\xcf\xaa\x26\xa5\xca\x69\xbd\x34\xa6\x6d\x20\xb2\x80\x90\x2f\x67\x12\x36\xc3\xf7\xfe\xf7\xb4\x88\xd4\x22\x41\xf3\xab\x9c\xa1\x98\xa5\x3a\x09\xf8\x9b\xc2\x01\xa6\x3d\x5e\xe0\x15\x44\xb2\x49\xfa\x5d\x8a\xf3\xf8\xd5\x1f\xcd\xe1\xda\xa1\x28\xa6\xdf\x63\x7e\xc2\x95\x55\x38\x5e\x47\xd8\x04\xcd\x9d\x13\x16\x8d\xcb\x9c\xa7\xca\x86\x73\x90\xf8\xbf\x98\xb9\xc0\x35\x8c\x91\x52\xda\xd6\xeb\xa3\x28\x6c\x0a\x7e\x54\x4c\x1b\x7f\xd8\x09\x8c\x1f\x40\xca\x94\x1f\xd9\x25\x45\xb0\x67\xf5\x11\x33\x9c\x94\x34\xe5\xeb\x28\x30\x19\xe3\x2a\x4d\x30\x5d\xfd\xa7\x92\x17\x25\xef\xce\x7e\x48\x45\xd7\xb9\xab\x4e\xc2\x66\x53\x26\x65\x83\x22\x30\xe7\x10\x19\x2d\x70\x23\x71\xa0\xb2\x90\xca\x68\x1b\xba\x56\x89\x07\xf5\xcf\xcd\x01\xac\x88\xf3\xa9\x9c\x57\xcb\x16\x7d\xe9\x99\x4a\x1e\xef\x11\x8d\xf3\x39\x46\x2f\x96\x68\xf0\x17\xd4\x3f\xcb\x81\x41\xe1\x13\x59\xbd\x89\xe8\x2d\x08\x62\x09\x74\x65\x01\x07\x5d\xd0\x6d\x36\x6d\x20\x70\x13\x34\x71\xde\xa2\xc6\x4c\x5b\x76\xb6\x33\x56\xa7\x55\x16\x53\x58\x32\xd5\xb0\xd2\x72\x81\xfb\x82\x49\x18\x50\xe7\x4b\x0f\xd7\x81\x8c\xc8\xc8\x87\x7e\x7e\xa3\x3f\x37\x30\xd0\xc5\x5b\x91\x05\x8d\x4f\x2e\x10\x27\x80\x45\x85\xad\xe2\xc8\xb0\x1c\x0f\x17\x30\x47\x4a\xf1\x74\x48\x4a\x23\x38\xb4\x18\x26\xc4\x8c\x09\x93\x1c\xd4\x72\xbd\xc0\x28\x97\xaf\x0a\xa6\xd2\x1c\x4c\x19\x4e\xbb\x74\x52\x32\x59\xe3\x30\x5e\x89\x50\xb0\x0b\x86\x06\x28\x1a\x3c\x13\x5a\x62\x5c\x20\x5a\xe6\x39\x58\x0a\x22\x39\x5a\xc3\x29\x42\x49\x95\xa6\xb6\xbb\xd9\x55\x3d\x8d\xc5\x4a\x4d\x44\x1f\x61\x90\xa5\xad\xa5\x7a\xac\xb4\x26\x51\x66\x29\xd6\x8a\xce\xc9\xfc\x3d\x25\x65\xb1\xed\xb5\x86\xa6\x7e\x6f\x3b\x5f\x9a\x7b\x08\x70\x66\x04\xb2\x6a\x14\xd0\x37\x87\xdc\x6d\x55\xdf\x85\x78\x63\x58\x34\x81\x94\xb8\xd1\xe8\x71\x7b\xc4\x02\x7b\x31\x23\x26\x99\x33\xf9\x53\x11\xed\xb2\x95\xd6\x29\xd6\x67\xe0\xc5\x2a\xce\xd3\x19\x66\x5c\x3b\x04\xf0\x38\x9d\xa1\xfe\x87\x18\xb2\x0d\xf9\x5e\x7b\x50\x43\xa7\xc6\x6f\xb1\x67\xc3\xc9\x75\xcc\x96\xa7\x82\x8b\x94\x7b\x12\x83\x02\x78\x65\x9f\x64\x0c\x35\x60\x42\xaf\xc1\x81\x32\x2c\xdd\x78\x20\xbe\x22\x17\x98\xdd\x5e\x43\x23\xd6\xd0\xd2\x71\xff\x68\x37\x48\x51\x2d\x7c\x4d\x96\x38\xef\x8c\x9a\xc1\x88\x59\x41\xbe\x00\xfc\xb0\x40\x07\x60\xb5\x64\x29\xdf\x90\x20\x41\xa8\xa5\x91\x61\xe4\x02\x11\x3d\x1d\x6f\x26\xaa\x9f\x59\xa4\xd6\x5d\x4a\x43\xae\x3f\xb7\x5e\x69\x20\x4e\x7d\xca\xf0\xda\x26\x11\x12\xaf\xae\xca\xf4\xe0\x83\x85\x63\xff\x95\xc3\xa0\x0a\x3b\x5b\x61\xa1\xdf\x5e\x34\xaf\x1f\x30\x14\x8d\x0f\x65\xa8\xf0\x3e\x98\xea\xdb\x2a\x96\xb6\x16\xd9\xae\xd3\x18\x79\xbf\xa6\xaa\xa1\xae\x5c\x58\x13\x76\xcf\x9c\xbd\x3a\x4a\xda\x6c\x86\xee\x3d\x66\x23\xed\xb5\x7d\xde\x61\xb9\xf5\x6e\xff\x23\x4c\x56\xbb\x60\x6c\x74\x5f\x3f\xb3\x48\xed\x50\xd4\xd0\x77\x85\xad\x1f\x79\x4a\x5c\xd7\xb3\x8d\x4d\xd7\x8f\xd8\x87\xae\x41\xd1\x0d\x46\x6a\x35\x6e\xd1\x9e\x93\x78\x5a\x9b\x9a\x27\x4b\x6c\x9d\x68\xff\x8a\x50\x7e\x11\x17\x85\x00\x5b\xb6\xe9\x22\x57\x30\x03\x4b\x30\x0f\x32\x6e\x8f\xd8\xd4\x83\xfe\x90\xe4\x3c\x86\x48\x41\xfd\xa2\xf4\x9f\x05\x64\x2b\xe8\x92\xa8\x58\xbb\x5b\x66\xa8\x4f\xd9\x05\x11\xbc\x65\x02\x13\xc6\x35\xbb\xd7\x63\xd5\x8b\xfa\x45\x23\x58\xb5\xef\xf8\xa5\x6f\xa3\xd1\x7a\x92\x7e\x15\x0e\x2b\xe1\x89\x97\x85\xf0\x34\xcf\x33\x14\xe7\x73\x96\x26\xdd\x85\x85\xc7\xce\x2e\x75\x69\x9c\x61\xb0\x47\x48\x51\xf0\x3e\x13\x3f\x03\xaf\x8a\x19\xb3\x6e\xf2\x08\xbd\xfb\xa1\xfb\x53\xea\x7c\x9f\x4d\xd6\x1f\xf7\xba\xaa\xb6\x75\xf0\xa0\x6b\xf2\x27\x30\xce\x07\x33\xfc\xfc\x1c\x7e\x20\xcc\x57\xf1\xd9\x49\x96\x69\x3e\xc5\xdf\xb4\xc5\xc6\x90\xa1\x90\x15\xfb\xc1\x32\xae\xcc\x7e\x9f\x3d\x98\x15\x1a\x87\xbd\x7d\xab\x37\x7b\x1d\x37\x33\x15\xdb\xe7\xbc\x45\x35\x69\x23\x45\x4b\x78\x96\xae\xf5\x34\xcd\x06\x2f\x42\xc6\x46\x4c\x53\x81\xeb\xf4\x72\xa2\xd0\x80\x55\x92\xfd\x81\x47\xdd\xcd\x2d\x1f\x35\xf7\x56\x94\xfc\xf0\xf9\x6a\x74\xe5\xe1\x57\x53\x5b\x5f\x07\x2b\xd5\xa4\x4f\x60\x42\x76\xd6\xbc\x97\x11\x79\x34\x3f\xa9\x2e\xe2\xcc\xcc\xd8\xce\x8d\x55\xf9\xcb\x20\xd5\x0a\xb2\x5e\x1c\x1d\x49\x32\xf3\xa2\xc6\xc1\x5f\x68\x07\x60\x7a\x78\xdb\xe8\xd3\x42\x52\x91\xc1\xd1\x28\x9f\x53\x51\xff\x76\x72\x9a\xad\xd6\x5b\x51\x59\x40\x31\x1a\xa6\x53\x3a\x12\xf2\x88\x8e\xfa\xf2\xff\x97\x47\x6e\x81\x61\x54\xc0\xde\x39\x49\x88\xa8\xb5\x44\x3c\x29\x5c\x92\x77\x94\xac\xc4\xc2\x4f\x69\xd4\xce\x22\xd7\xe4\xa9\x97\x30\x56\xd8\x74\x65\x71\xdd\xb8\x55\xcf\xdb\xbe\x14\xc9\x68\x6a\x30\x2b\xca\x88\xf6\xc5\x68\x2f\x68\xb1\x61\x23\xcd\x62\xc6\xd3\xa4\x3d\x7f\xa0\x69\x71\xa1\xd3\x1e\xc7\x6e\xa3\x9d\x24\x0b\xac\x2e\xe6\xc5\xca\xea\x9b\x19\xe9\x54\x92\x8c\x7f\x6b\x46\xa3\xba\x99\x20\xb2\x72\x5b\xad\xf0\xad\xec\x7e\x34\x53\x56\x5f\x17\x9d\x7b\x01\xf4\x6f\xd5\xa6\x9d\xe4\xc1\x26\xb4\x32\x04\x9d\x5e\xa8\x2b\x63\x78\x1b\x67\xce\x5c\xe6\xdb\xa6\xb2\x45\x0f\x52\x8e\x65\x45\xe9\x94\x42\x8a\x03\x22\x56\x65\x36\x35\xd7\x59\x1e\xdf\x66\x58\x68\x97\xd3\x12\xf7\xf4\x52\xc6\x9b\x23\xe3\xe8\xb6\xf3\xe8\x77\xe8\x70\xa6\xa6\x19\x6e\x5f\x7a\xfd\xe6\xc8\x7a\x8d\x12\xc6\xfe\x49\x72\x5c\x2f\xd1\x0e\x7d\xc0\x71\xc6\x17\xc3\x05\x4e\x96\x76\x42\xaf\x86\xd6\xd7\x0b\x70\x10\x0b\x92\x4d\xe5\x7d\xb2\x79\xdf\x30\x12\x4a\xbc\x93\x55\xd3\x9f\xad\xb4\x97\xce\xfd\xa5\x2f\x95\x3c\x46\xd7\xc3\x2b\xa3\x40\x15\x8a\xd0\xf5\x89\x7b\x97\x52\xc6\xc5\x97\x3a\x6a\xfb\x8a\x63\x9a\xe0\x5e\x1b\xcf\x3f\xe7\x0b\xef\x66\xda\xb4\x50\x13\x89\xe8\x5f\xc0\xb9\x9b\x33\xef\xe8\x14\x4d\xab\x7d\x92\x2c\xce\xf6\x5d\x9e\x92\xac\xee\x53\xa5\x6c\x5d\x12\xfd\x4c\x3f\xb7\x77\x95\xb6\x21\xee\xf0\x13\xbc\x03\x67\x0d\xe9\x53\x70\x55\x59\x87\xb5\x8a\xc3\xa1\xa5\xa7\x47\xe4\xad\xee\x86\x5c\xfd\x58\x1a\x9a\x4c\xce\x3d\xaf\xfd\x70\x1d\x05\xb4\x14\xe4\xee\x39\xf4\xe4\x5d\x08\x38\xd0\xec\xdf\x0a\x7c\x8f\xbf\xb5\x70\x96\xf4\x70\xf1\x5f\xae\x43\xff\x49\xfb\x9f\xd6\xa1\xf5\xe4\xc6\x6e\xb0\x79\x6a\x48\x76\xfe\x76\x48\xc8\x32\xc5\x13\x80\x4f\x4b\x51\x6f\x63\x4d\x50\xff\x7a\x6f\x77\xdd\xc4\x33\x79\xa5\x2b\x8a\x18\xc6\x1c\x56\xda\xa3\xd2\x22\x5f\x36\x14\x02\xf0\x9e\x7b\xb2\xed\xd9\x8a\xd6\x52\xa3\xa1\xc6\xae\x94\xca\xdb\xca\xac\x2a\x91\xaa\x5b\xe5\x43\xcc\xc6\x15\x4d\xc7\x4d\x9e\xd9\xe2\x02\x70\xa7\x64\x87\x18\x40\xe8\xe1\x31\xe4\x2a\xc1\xea\xa1\xaf\x51\xa2\x5d\x5f\x8c\x78\xba\x36\x3d\xe5\x8e\xb1\x46\x56\xc1\xe5\xa6\x43\x5c\x95\xb0\xec\xdd\x54\x54\xde\x9a\x48\xa8\xa2\xfa\xd8\x5a\x88\x56\x94\x08\x25\x79\x07\xb5\x06\xbb\x45\x66\x15\xb5\xeb\x9d\xa9\x33\xf9\x20\x19\x38\x57\x0d\x92\xad\x93\x24\x11\x85\x15\x98\x4f\x2b\x1c\x6f\x53\xcb\x83\x57\xb3\xc5\xe7\x99\xbc\xa7\xf7\xed\xea\x77\x32\x41\xf9\x58\xed\x34\x46\x2d\xc5\x5f\xed\xb6\xdb\x1e\x03\xea\xdf\xa9\xdd\x31\xd8\xc5\x68\xf5\x91\xb5\x2d\x85\x76\x06\x6b\x35\x18\x9a\xde\xce\x6a\x1a\xdb\xde\x03\x69\xf6\x3f\xda\xeb\x68\xdd\x90\x2e\x76\xc3\x09\xb3\x5a\x23\x6d\x3f\x6c\xa6\xc5\x07\xbe\xcf\x37\xfe\xda\xa3\xd6\x5c\xe8\xdc\x49\xb9\x5d\x91\xfe\x8e\x48\x23\xa5\x31\x7d\xb2\xae\x6f\xb7\xb5\x72\x4b\x93\xea\xd3\xf7\x9f\x06\x95\x2c\x47\xb1\xca\xd1\x45\xdb\xfd\x6d\x93\xa3\xab\x4b\xa2\x5b\xfc\x93\x3f\xce\x07\xde\x51\x3e\x01\xd3\x1a\x06\x30\x71\xd7\xe2\xcd\xf6\xbb\x67\x1b\xdb\x73\xfd\x92\xf2\xc5\x0e\x73\x25\xaf\x3a\x99\x07\x92\x93\x92\x2f\x08\x4d\xbf\x63\xef\x7d\x95\xf3\xd6\x8d\x47\xaa\x5a\x2f\xa9\x57\xae\x3f\x79\xa6\xb1\xf3\x86\x83\xd0\x68\x3b\x52\x7f\xba\xe9\x76\xc9\x7a\x73\x82\x88\xb5\xdb\x92\xc5\x7e\x13\xbe\xdb\xfa\x7c\xe5\x94\x6a\x0b\x16\xc1\xde\xec\x1a\x88\x46\xab\x78\xde\x8c\xc9\x2f\xda\xe0\x90\xac\x56\x71\x3e\x55\x28\xe3\x4e\xb8\x57\x51\x76\x95\xcf\x54\x5d\xa0\x01\x1a\x51\xdb\x6e\xe6\xc9\xd1\xcd\x96\xb4\xe6\xde\xc9\xff\x3b\x33\x6d\xa5\x79\x89\xd7\x3d\xf4\x42\xad\xab\x7a\xf0\xee\x20\x8d\x36\x6e\x4a\xc4\x35\x2c\x90\xa9\x1b\x2b\xf9\x4d\x91\x6b\x79\x96\x8d\xdc\xc2\xf3\x9f\xa7\xf9\xf2\x4b\x4c\x59\x78\x05\x7d\x81\xd0\xfc\xd1\xc7\xd1\xe5\xd9\x64\x34\x89\xfc\x5d\x5f\x8d\xfb\x39\xff\xf4\xfe\xd7\xf7\xe3\x4f\x9f\xaf\xa2\x40\x9f\x57\xeb\xa8\xc6\x9f\x86\x67\x93\x89\xad\xc1\x16\x8d\x09\x37\x48\x32\xf0\x3e\xba\x2f\x6b\xef\x1f\x2e\x44\xb4\x15\x77\x46\x15\x91\xbd\xbf\xfe\x56\x71\x29\xd6\x50\x00\xe5\x56\xe7\xa8\x76\x8e\x06\x03\xbb\xbd\xa9\xdf\x8e\x98\xec\x3b\xfd\x5a\xdd\x57\x2a\xfe\xfb\x23\x2f\x66\xbf\x77\xfb\x29\x76\x4b\x59\xdc\xee\x83\x36\x30\xe9\xa0\x6c\x4f\x49\x8a\x1b\xc9\x34\xc3\x73\x79\xc3\x27\xd7\x6a\x9f\x54\x8b\x29\x08\x1e\x9c\x0e\x3c\x4b\x08\x97\xeb\x2d\xbf\x6e\x63\xad\x89\x5e\x26\xaf\x07\x83\xaa\x27\xbd\x62\xed\x14\x67\x58\x04\x9e\x26\x71\x01\x0e\x84\x14\x3a\xe0\x4d\x22\x12\x35\x21\x30\xaa\x92\x4d\xfb\x6a\x36\xba\x8e\xe7\x56\x14\xae\x3b\xba\x22\xb6\x86\x90\xb1\x12\x68\xad\x86\x77\x75\x1b\xbc\x71\x87\xda\xd0\x8b\xdf\x60\xe9\x05\x91\xa7\x0e\x88\x7d\x7e\x58\x93\xda\xbf\x03\x00\x00\xff\xff\x02\x62\x35\xd9\x53\x3a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14931, mode: os.FileMode(420), modTime: time.Unix(1455663434, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6d\x6f\xda\x3a\x14\xfe\xce\xaf\xb0\xfc\xe9\x5e\x89\xcb\xa5\x54\xaa\xb4\x68\x9a\x44\x81\x56\x91\xd6\x0e\x15\xd6\x49\x9b\xfa\xc1\x24\x07\x64\xcd\xd8\x9e\xed\x74\xa2\x15\xff\x7d\xc7\x21\x09\x31\x09\xf4\x45\x5a\x5f\x50\xc8\x39\xcf\x39\xcf\x79\xb5\x9f\x9f\x49\x0a\x4b\x2e\x81\x50\x0b\xe6\x91\x27\x40\xc9\x76\xdb\x21\xe4\x19\xff\x09\xa1\xc3\x6f\xb3\x39\xac\xb5\x60\x0e\xae\x94\x59\x33\x77\x0f\xc6\x72\x25\x29\x89\x08\x1d\xf4\xcf\xfa\xff\xf5\x3f\xe0\x1f\xed\xee\xd4\xa7\xcc\xb0\x35\x38\xd4\xa1\x51\x61\xc2\x1b\x11\x42\x25\x68\x21\x9d\x39\x65\xd8\x0a\x6a\x32\x94\xce\x37\x1a\x72\x73\xb7\xd9\x7a\x01\xa6\x30\x95\x8b\xc6\xb0\x64\x99\x70\xb9\xf4\xac\x1f\x4a\x6c\x62\xb8\x76\x25\x95\xca\x05\xb1\x3b\x1f\xc4\xf2\x27\x20\xff\x5c\x5f\xfe\x4b\x0b\xd4\xb6\x84\xd3\x31\x73\x6c\xc1\xec\x31\x1e\x33\x67\xb8\x5c\x1d\xe3\xc1\xb4\x3e\x45\xa4\x50\x25\x69\xe1\x83\x48\x4c\x48\x93\x42\x2c\xad\x63\x32\x81\xdc\xe9\x7b\x68\xa4\x8b\x9e\x1b\xf4\xd6\x3c\x31\xea\x14\x9d\xd2\x0f\x49\x04\xb3\x96\x2c\x95\xa9\x31\x53\x29\xd8\x26\xb5\x1b\x74\xc1\x87\xdf\xdf\xc5\x6a\xc9\x04\xa6\xf5\x04\x9f\xdc\xb8\x16\x40\xd8\x23\xe3\x82\x2d\xb8\xe0\x6e\x43\x9e\x94\x6c\xc9\xd1\x14\x19\xff\x56\x26\x7d\x03\x93\xd0\xd9\x0c\x3b\x1a\x0c\xd1\xa5\x9d\x86\x87\x59\xb6\x90\xe0\x6c\x8b\x03\x44\x7f\xe6\xd6\x7d\xc4\xfe\x8f\xa2\xc9\x68\x10\x45\x3b\xdd\x28\x8a\xd3\x4f\xc7\x7c\x22\xe8\x7e\x3a\x22\xb6\xb0\xda\x70\xf7\x15\x47\x2c\x6f\x87\xbf\xd0\x77\x45\xac\x59\xe9\xa2\xe1\xfc\x5e\x27\xed\x71\xee\x43\x44\xf2\x3e\xbe\xd3\xe1\x55\x96\x3b\x35\xfb\xf4\x4b\xe6\x74\x16\x64\x92\x4e\x95\x71\xe7\xe7\xfd\x8b\x79\xa2\x87\x69\x6a\xbc\x08\x0d\x30\x91\xc1\xee\xf1\x4a\x46\xd1\x35\xb8\xa1\x73\xf8\xfd\xc7\xbe\x55\x69\x97\xd0\x89\x4c\xb5\xe2\xd2\xf5\x3c\x12\xac\xa5\xe4\x81\x6c\xeb\xad\xb1\xb7\xed\x1f\xdf\x67\x3b\x47\x1e\x18\x9e\xc8\xc7\x9b\x8d\xfd\x25\xea\x2b\x22\xb0\x7c\x07\x4b\x9f\x88\x4a\xde\x8a\xae\x77\x6e\x1b\xba\x92\xb7\xa2\xeb\x6d\xd2\x86\xae\xe4\x1e\x1d\x54\xe1\x0e\xac\xca\x4c\x02\x41\x1d\x66\x90\x64\x06\xa7\xec\xda\xa8\x4c\xbf\xd4\x02\xa1\x72\xad\x11\xa6\x46\x69\x30\x8e\x43\x38\x2d\x28\xc9\x55\x0f\xfa\x64\xed\xe3\x20\xe5\x89\xd2\xad\xab\x07\x1e\x62\xb9\xca\xcb\x8b\x45\xaa\xe9\x10\x1f\x6c\xac\xd1\xa5\x53\x89\x12\xde\xa0\x4b\xb4\xaf\xdd\x95\x51\xeb\xa2\xe0\xd4\xd7\xdf\xbf\x9b\xab\xc3\x37\x23\x9e\x9a\xd8\x87\x8a\x87\x46\x2f\xff\xfd\xff\xec\x82\x16\xb9\xda\xfd\x3c\x04\x9c\x70\x36\xe2\x34\xc8\xb1\x9f\x96\x1a\x60\x7b\x64\x75\xbc\x94\xd3\xbb\x31\x7e\x8c\x2f\xeb\xca\xaf\xca\x69\x00\x79\x43\x6e\x73\x50\x9c\xda\x20\x96\x72\xcb\x9d\x8c\xa7\x9a\x90\x17\x83\xd9\xcf\xd2\x6b\x22\x69\x3b\xfb\x2b\x66\x0d\xe1\x9e\x50\x91\x86\xd2\xd9\xc8\x1f\x5f\x01\x36\x38\x41\x8f\xe2\xe2\x14\xa4\xe3\x4b\x0e\x26\x74\xec\xe3\x99\x39\x96\xfc\xbc\xdd\x0d\xd2\x01\xfc\xb6\x1a\xbf\xe6\xbc\x77\x8f\x16\xaa\x81\xaa\xd7\xfd\x00\x38\x91\x2b\xbc\x75\x55\xf5\x0c\xeb\x78\xc3\x2c\xde\xa1\xc2\x3d\xd0\x1c\xfe\x23\x90\x70\xf9\x34\x37\x4e\x08\xdb\x1f\xf6\x95\x6e\xf9\xee\x40\x35\x9c\xb2\x40\x92\x2d\x04\x4f\xc4\x66\x98\xe0\xea\xb1\x7c\x21\xf2\xb8\x0e\xef\x02\xbe\x3f\x77\x65\x2e\xbb\x6a\xa5\x07\xa1\x1c\x8f\x97\x60\x3d\xe4\x8b\xa1\x9e\xcf\x60\x3b\xe1\xfa\x7b\x68\x76\x74\xa7\xfc\xdc\x76\xf0\x72\x0b\x32\xf5\xf7\xd9\x3f\x01\x00\x00\xff\xff\x44\x3a\xa6\x8e\xe7\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2791, mode: os.FileMode(420), modTime: time.Unix(1455565419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x6d\x6f\xe2\x38\x10\xfe\xce\xaf\xb0\xfc\xe9\x4e\xe2\x38\xca\xbd\x48\x17\x9d\x56\xa2\x40\xab\x48\xbb\x5d\x54\xd8\xae\xb4\xab\x7e\x30\xf1\x80\xac\x0d\xb6\x65\x3b\x5d\xb5\x15\xff\x7d\xc7\x21\x09\x71\x42\xa0\xa5\x2f\x28\x64\x66\x9e\x79\xe6\xd5\x7e\x7d\x25\x1c\xd6\x42\x02\xa1\x16\xcc\x93\x48\x80\x92\xdd\xae\x47\xc8\x2b\xfe\x13\x42\xc7\x5f\x17\x4b\xd8\xea\x94\x39\xb8\x51\x66\xcb\xdc\x03\x18\x2b\x94\xa4\x24\x22\x74\x34\xbc\x1a\xfe\x31\xfc\x0f\xff\x68\x7f\xaf\x3e\x67\x86\x6d\xc1\xa1\x0e\x8d\x0a\x08\x0f\x92\xa6\x2a\x41\x04\xbe\x70\xca\xb0\x0d\xd4\x64\x28\x5d\x3e\x6b\xc8\xe1\xee\xb2\xed\x0a\x4c\x01\x95\x8b\xa6\xb0\x66\x59\xea\x72\xe9\xd5\x30\x94\xd8\xc4\x08\xed\x4a\x2a\x95\x0b\x62\xf7\x3e\x88\x15\x2f\x40\x7e\xbb\xbd\xfe\x9d\x16\x56\xbb\xd2\x9c\x4e\x99\x63\x2b\x66\xbb\x78\x2c\x9c\x11\x72\xd3\xc5\x83\x69\x7d\x8a\x48\xa1\x4a\x78\xe1\x83\x48\x4c\x48\x9b\x42\x2c\xad\x63\x32\x81\xdc\xe9\x25\x34\xf8\x6a\xe0\x46\x83\xad\x48\x8c\x3a\x45\xa7\xf4\x43\x92\x94\x59\x4b\xd6\xca\xd4\x98\x29\x0e\xb6\x4d\xed\x13\xba\x10\xe3\x6f\x17\xb1\x5a\xb3\x14\xd3\x7a\x82\x4f\x0e\xae\x53\x20\xec\x89\x89\x94\xad\x44\x2a\xdc\x33\x79\x51\xf2\x48\x8e\xe6\xc8\xf8\xa7\x32\xfc\x1d\x4c\x42\x67\x0b\xec\x68\x30\x44\x97\x38\x2d\x0f\x8b\x6c\x25\xc1\xd9\x23\x0e\xd0\xfa\xa3\xb0\xee\x7f\xec\xff\x28\x9a\x4d\x46\x51\xb4\xd7\x8d\xa2\x98\x7f\xe8\xf2\x89\x46\x0f\xf3\x09\xb1\x05\x6a\xcb\xdd\x17\x1c\xb1\xbc\x1d\x2e\x49\xad\x56\xd6\x6d\x0c\x16\xec\x7c\xc0\x59\xe9\xa7\xc5\xe0\x41\x27\xc7\x83\x3d\xc4\x89\x11\xf8\x20\x4f\xc7\x58\x21\xf7\x6a\xf8\xf4\x73\xe6\x74\x16\xa4\x93\xce\x95\x71\xff\xfc\xfd\xd7\x68\x99\xe8\x31\xe7\xc6\x8b\x10\x80\xa5\x19\xec\x1f\x6f\x64\x14\xdd\x82\x1b\x3b\x87\xdf\xbf\x1f\xfa\x95\xf6\x09\x9d\x49\xae\x95\x90\x6e\xe0\x2d\xc1\x5a\x4a\x1e\xc9\xae\xde\x1f\x07\x6c\xff\x78\x19\x76\x6e\xd9\x00\x9e\xc9\xa7\x79\x91\xed\xfa\xaa\x08\xc0\xef\x61\xed\x73\x51\xc9\xbb\x00\xea\x4d\x7c\x0c\xa0\x92\x77\x01\xd4\x9b\xe6\x18\x40\x25\xf7\x00\x41\x39\xee\xc1\xaa\xcc\x24\x10\x14\x64\x01\x49\x66\x70\xe6\x6e\x8d\xca\xf4\xb9\x5e\x08\x95\x6b\x1d\x31\x37\x4a\x83\x71\x02\xc2\xd9\x41\x49\xae\xda\x68\x98\xb2\x75\x49\x79\xc4\xf4\xeb\x16\x81\x93\x58\x6e\xf2\x52\x63\xc1\x6a\x3a\xc4\xc7\x1b\x6b\xf4\xea\x54\xa2\x52\x8f\xe9\x12\xed\xeb\x78\x63\xd4\xb6\x28\x3e\xf5\xbd\xe0\xdf\x2d\x55\xf3\xcd\x44\x70\x13\xfb\x68\xf1\x14\x19\xe4\xbf\x7f\x5e\xfd\x4b\x8b\x74\xed\x7f\x1e\x03\x4e\x38\x27\x31\x0f\xd2\xec\x27\xa7\x66\xb0\xeb\xd8\x25\xe7\xd2\x7a\x3f\xc5\x8f\xe9\x75\x5d\xf9\x4d\x69\x0d\x4c\xde\x97\xde\xdc\x2e\xe6\x36\x08\xa7\xdc\x7c\x27\x43\xaa\x06\xe6\x6c\x3c\x87\xd1\x7a\x4b\x30\xc7\xee\x03\x15\xb3\x96\xf0\x40\xa8\xc8\x44\xe9\x6c\xe2\x8f\xb4\xc0\x36\x38\x55\x3b\xed\x62\x0e\xd2\x89\xb5\x00\x13\x3a\xf6\xf1\x2c\x1c\x4b\x7e\xdc\xed\xc7\xa9\x61\x7e\x57\x0d\x61\x7b\xf6\xfb\x9d\xb5\x6a\x59\xd5\x4b\xdf\x30\x9c\xc9\x0d\xde\xc4\xe8\xf1\x65\xef\x4f\x66\x66\xf1\x6a\x15\x2e\x84\xf6\x16\xe8\x30\x09\x17\x51\x7b\xfb\x84\x66\x87\x3b\x40\xa5\x5b\xbe\x6b\xa8\x86\xb3\x16\x48\xb2\x55\x2a\x92\xf4\x79\x9c\xe0\x0e\xb2\x62\x95\xe6\xa1\x35\xaf\x08\xbe\x45\xf7\x95\x2e\x1b\x6b\xa3\x1b\x40\x78\xe0\x04\x4b\x22\x5f\x0f\xf5\x94\x06\x6b\x0a\xf7\xe0\x63\xbb\xa9\x7b\xe5\xe7\xae\x87\x77\x5e\x90\xdc\x5f\x73\x7f\x05\x00\x00\xff\xff\xa1\xdf\x66\x01\xfe\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2814, mode: os.FileMode(420), modTime: time.Unix(1455565419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

