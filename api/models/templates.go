// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x5a\x7b\x6f\xdc\xb8\x11\xff\x3f\x9f\x82\x10\xf2\x47\x1b\xac\xd7\x8f\xe0\xae\xad\xd0\x16\xb0\xd7\xce\xc5\x3d\x27\x67\xec\x3a\x39\xa0\x41\x50\xc8\x5a\xae\x97\x5d\x89\x54\x49\xca\x97\x8d\xb1\xdf\xbd\xc3\x87\x24\x92\xa2\xf6\x91\xc7\xe1\x90\x87\xbd\xe2\x68\x38\x9c\xe7\x6f\x86\xfb\xf4\x84\xe6\x78\x41\x28\x46\x49\x56\x55\x09\xda\x6c\x9e\x21\xf4\x04\xff\x10\x4a\xce\x7f\x9d\xdd\xe1\xb2\x2a\x32\x89\x5f\x31\x5e\x66\xf2\x3d\xe6\x82\x30\x9a\xa0\x14\x25\x67\x27\xa7\x27\x47\x27\x7f\x83\xbf\xc9\xc8\x90\x4f\x18\x9d\x13\x09\xeb\x22\x49\x2d\x0b\x60\xf5\x84\xa4\xe5\x81\x92\xfb\xac\xc8\x68\x8e\xf9\x51\xde\x91\xa2\xb1\xd9\xb3\x47\x5c\x71\x96\x63\x21\x86\x68\x93\x0b\xe0\xb5\x9a\x14\xb5\x90\x98\xab\x0d\x51\xf2\x8a\xa6\xe9\xd5\xff\xea\xac\x50\x02\x7c\x50\x4f\xa6\x78\x01\xbf\x26\x0d\x15\xda\x8c\x50\x92\xa0\x8f\xc8\x30\xd9\x58\xc1\x6f\x33\x9e\x95\x18\x08\x84\x3a\xd9\x76\xc9\x2b\x45\xbb\x87\xd4\x1e\x5d\x23\xb2\x23\xad\x7d\x04\x0f\xef\xd6\x15\xd6\x1a\x9d\x49\x4e\xe8\x83\xd5\xa6\x5e\xba\xc4\x8b\xac\x2e\xa4\x5e\xf5\x9f\x8b\x9c\x93\x4a\x36\xb6\x48\xec\xd2\x66\xd4\xee\x54\xd5\x91\x5d\x80\xf4\x6d\x5d\xde\x83\x04\x91\x4d\xb4\x4d\x4f\x86\xb6\x51\x5a\xbc\x7d\x87\xc4\x32\xe3\x58\x20\xb6\x40\x38\xcb\x97\xc8\x9e\xb6\xbf\xff\x15\x7d\x24\x9c\xd1\x12\x53\x19\x97\x63\xf8\xb0\x5b\xce\x1a\x3d\xea\xcf\x78\xfd\xbd\xb7\x98\xe2\x02\x67\x02\xff\x0e\x76\x9b\xe2\x8a\x09\x22\x19\x8f\x9d\xe9\xeb\x36\x9b\xb1\x9a\xe7\x18\xe5\x6c\x8e\x11\xef\xb6\xe9\x89\x30\xab\xef\x29\x96\x62\x60\xff\x1b\x22\xe4\xdf\x21\x31\x40\xa4\x4d\xce\xd2\xd4\x10\xa7\xe9\xf5\xfc\x9f\x5f\x22\xd3\xfb\xdb\x09\x12\x66\x3f\xb4\x60\x1c\xc9\x25\x11\x48\xe5\xa1\x9e\x54\x4d\xea\xf1\xa4\x72\xec\xa9\xa2\x4f\xc8\x6d\xde\xcb\xe8\x23\xfb\x04\x27\xd7\xa6\x44\x8f\x96\xdf\x68\xd0\x6f\xfa\x22\xdc\x4e\x06\x94\xd2\xe9\x03\x68\x94\x32\xbe\x54\x17\x51\x1d\x78\xb9\x6a\x8a\x85\xb6\xa3\x6b\x9f\x64\x02\x69\x85\x95\x77\xac\x22\xf9\x94\x15\x31\x3f\x6d\x84\xbc\x3e\x7f\x93\xa6\x9a\xc6\x91\xe4\x96\xb3\x0a\x73\x49\xb0\x6f\x74\x55\x01\x84\xa8\x4b\xac\xe8\x6f\x59\x41\xf2\xf5\x25\xcb\xeb\x5e\x4c\x07\xf6\x51\x95\xe1\xec\x08\x8a\xc3\xe9\x5f\x9c\x4d\x8c\x6b\x49\xb0\x92\x7d\xff\x83\xb7\x84\x02\x7e\x9a\xfc\x6a\xb1\xc0\xb9\xb6\xee\x79\x51\xb0\xdf\x02\x6e\x56\x74\x42\x73\x52\x65\x85\xa9\x00\x33\xcc\x1f\x49\x8e\x75\xfa\x07\x97\x28\xef\xe7\xd9\x38\x2b\xb3\xcf\x8c\x66\xbf\x89\x71\xce\x4a\x9d\xfc\x23\x7c\xce\x73\xeb\x27\xf0\x9e\x90\x22\xed\x0e\x0e\x6f\x04\xe4\x1b\xef\xb3\xbb\xea\x71\x86\xb2\x22\x97\x4a\xf8\xe3\xc4\x7f\xac\x34\x69\x74\xed\xeb\x20\xd4\x80\xa1\x5c\xbf\x85\xda\xa4\x75\x30\x2f\x09\x85\xe8\xe3\x19\xc4\x6d\x4f\x17\xc9\x0e\x03\x69\x9a\x7d\x8c\xa4\x09\x3d\x43\x29\xc5\xf6\x4c\xe1\xa8\x2c\x79\xa1\x3e\x36\x8e\x69\x1e\xa0\xcd\x0e\xb5\xb9\x9f\x3a\xca\x4d\xbf\x90\x75\xae\xbd\xc5\xad\x6f\xb4\xa9\xd3\xf4\x55\x4d\x8d\x54\x7b\x79\xf7\x04\x52\x61\xdf\x93\x67\x2f\x2f\xea\x7c\x85\x65\x87\x29\xfe\xc5\x88\x75\x8d\x23\x38\x29\xfc\xc8\x75\x2e\x81\xdf\x3b\x88\xa1\xc5\x98\xe2\x07\x1d\xcd\x70\xf8\xbe\x9f\x01\x63\x5b\xaa\x42\xae\x86\xa9\xcd\x4c\xc7\x1e\xdb\x16\x71\x29\xe4\x72\xbc\xd0\x28\x0c\x3e\x8f\x3f\x93\x2a\x31\x9b\x0c\xba\xdf\xeb\x8c\xce\x0b\x0d\x36\x9a\x48\xc0\x9f\x00\x7c\x50\x88\x15\x8f\xee\x0d\x2e\xa1\x0e\xcc\xc8\x67\xad\xce\xd3\xb3\xbf\xfa\xcb\x4d\x42\x31\x42\xff\x84\xe5\xb9\x34\x5e\xd1\xcb\x3a\xca\x27\x38\xed\x45\x58\x32\xad\xa9\x24\xc6\x87\x29\x68\xfc\xbf\xc2\xdf\xe0\x0e\xd6\x58\xad\x7d\xeb\xe5\x49\x32\xec\x0a\x71\x3c\xc6\xdb\x7c\xb8\x13\x92\x1d\x40\x2a\x4c\x1e\x09\xf0\x9b\x47\x2a\x70\x5e\x73\x22\xd7\xc9\x00\x2b\xa1\x42\xa8\x5d\x6c\xd2\xf7\x2f\xb5\xac\x6a\xb9\x1b\x20\x33\x4b\xb7\x53\x52\x9f\xb0\xad\xe1\x58\x4a\xa8\x61\x41\x11\x7f\x9f\x15\xb5\xb5\xa5\x75\xaf\x96\xae\x53\xf7\xb3\xe6\xff\xcd\x33\xd8\x10\xd3\xb9\xe6\xeb\xb4\x09\x31\x5c\x6e\xba\x86\x27\xc4\x33\xfa\x80\xd1\xf3\x15\x4a\xff\x81\xc6\x57\x54\x72\x9d\xbd\x44\x73\x06\x83\xd9\x81\xae\xae\x20\x24\x15\xdd\x66\xd3\xa5\xec\x6d\x08\x3e\xfe\x4e\x87\xe7\x47\x66\x7f\x2b\xee\x76\xc1\x1b\x68\x1e\x08\x8d\xb5\xd0\xad\xa8\xdd\x8e\x78\xac\x0e\x01\x0b\x13\x56\x96\x10\x54\x6e\xe5\x1d\xc2\x65\x5e\xd5\x07\x56\xb9\x79\x55\x31\xb3\x5c\x80\x9f\x4b\x1d\x03\x86\x8d\xd3\x44\x44\x81\x17\x08\xc7\xf3\x09\xab\xbd\x5c\xdf\xc9\x13\xe0\x7c\x4f\x9e\xd3\xe1\x8d\xef\x96\x18\x51\xfd\xaa\xc2\xf8\x84\x82\x17\x43\xf0\xea\x9c\xa3\x51\xbf\x84\x75\xab\x47\x24\x19\x02\x67\x04\x48\xa9\x4e\xb3\xc2\xb8\x42\xbc\xa6\x14\xb4\x80\x18\x45\x6b\x08\x35\x94\xdb\x7e\x67\xd7\x69\xae\xcb\xec\x01\x1f\xac\xd6\xaf\x50\x9f\xc9\x79\xbd\x1d\xb7\xe8\x4d\x95\xcc\x1f\x7e\x8c\x6f\x09\x6b\x6f\x2e\x94\x76\xa6\xe7\x6f\x94\x56\x20\xd1\x80\x83\xe2\x9d\x52\x38\xae\xff\xed\x0f\xbe\x6f\x34\xb4\x09\x44\x3b\x7e\xf2\x33\x2c\x0a\xd2\x25\x8e\x48\xd2\x68\x48\x4c\x96\x18\xed\xe0\xef\x64\xdd\x81\x1d\xbc\x4a\x6e\x57\xa1\xb3\x90\x1c\x67\x65\x33\x5b\x88\x16\xf1\x64\x06\xdd\x68\x1b\x03\xa7\x5d\xe6\xb2\xe7\x27\x0b\x34\x7e\x9d\x89\x5b\x23\x89\x93\x86\x6e\xd8\x83\x78\x27\xbc\x46\x3c\x02\x93\x35\x45\xab\xea\x01\x18\xd1\xa1\x3c\x03\x0a\x8e\x3d\xe8\x11\x87\x7a\x01\xe0\xf0\x61\x9e\x92\x2d\x00\xe8\x0e\xd5\x16\x7c\xb7\x27\xba\xdb\x0a\xc2\x63\x30\x7c\x2f\x20\x1e\x40\xe8\x95\xb5\xe2\x6d\x2d\xa7\x38\x67\x7c\x0e\xd6\xff\x18\x7d\xcb\x81\x8d\x1f\x86\x90\x51\xc6\x69\x0a\xf8\x3d\x6d\xb8\xbe\x80\x3f\x42\xbb\xc7\x71\x1f\x83\xc1\xf1\xf2\x95\x56\xa6\xae\x0e\x47\x2f\x2c\x4e\xea\xe1\xd1\x10\x91\xa2\x80\xc2\x43\x56\xcf\x42\x1a\xbf\xac\x2b\xa3\x9d\xe7\x7a\x14\xb2\xd5\xa5\x0c\x8d\x82\x81\x3b\xfd\x0a\x92\x03\xd1\x6d\x8d\x93\xae\xad\xf5\x6a\xa1\xb9\x82\xbe\x1f\xbd\x3e\x4e\x39\xac\x75\xa3\x4e\x29\xad\xaf\x87\x25\xfe\x90\x24\xd1\xe1\xa1\xa6\x68\x0e\xc5\xd6\x50\x3d\x8d\x67\xc0\xab\xc9\xec\x2e\x13\xab\x4b\xb5\x1d\x91\x91\xfe\xbe\x02\xa1\xc4\x2f\xda\x1b\xbc\x56\x60\xd4\xf6\x7a\x3a\x56\x3e\x46\xda\x78\x43\xae\xfa\xf2\x70\x0f\x87\xd8\x89\x99\xd3\xf1\xc9\x7e\x6d\x83\xdd\xf8\x8e\xad\x30\xdd\x89\x8c\x07\x51\x71\x67\xa8\x58\x8b\xb1\xdd\xa9\x41\x93\x9d\x0e\x93\x7e\xb3\xe1\x0e\xac\x5a\x46\xcd\xb3\x80\x34\x98\xd4\xb5\xe4\xee\xf3\xe0\x95\xb6\x8d\x69\x0a\x02\x5e\x87\x24\x4a\xe3\x16\xc3\x29\xc7\x02\x20\xf8\x1f\x09\x8f\xc0\x1f\x3a\xc1\xb7\xf6\x7d\x71\x67\xe9\x57\xcc\xc0\x4b\x7c\xd5\x6f\x75\x8a\x86\xd7\x1f\xc2\x1b\xbc\x39\x76\x7f\x6a\xed\x92\x86\xd0\x2f\x82\x91\xe3\x30\xf1\xf7\x74\xc0\x7e\x54\x6f\x13\xb3\x1f\xa2\xa1\x3f\xb7\x4d\x68\xdb\xb8\x74\xc1\x1f\xd0\xde\xb0\x6c\x7e\x61\xfb\xa8\xc0\x05\x0b\x58\x6a\x5a\x2c\xb1\xa7\x2f\x76\x89\x71\x77\xba\x8c\xde\x6f\x84\x6d\x86\x92\xc4\x4b\x8d\xdd\x1a\x19\xa1\xe7\x15\xe3\x52\x2d\x1b\xc2\xf1\x95\xed\xd9\x6f\xe1\xb1\xf0\x7a\xc1\xe7\xd0\xc7\xc0\x23\x20\xfd\x93\xa8\x0a\x22\xed\xab\x49\x9a\xfc\x39\xbc\x25\x71\x54\xae\x99\xda\x43\x2b\x9e\x2a\x95\xd3\x39\xfe\xd4\xb0\x3b\x51\x7d\x8e\xf2\xf4\x05\xc9\x55\x03\xbb\x6f\x5b\x76\x30\x63\xbf\x77\xfb\x42\x3d\x0f\xb5\x72\x87\xe9\xf8\x9a\x46\x75\xbc\xe3\x74\x86\xcb\x66\xf3\x9a\x89\xd8\x1d\xc7\xee\x61\x7d\xa7\x21\xc3\x7e\x0a\x7d\x14\x2b\x45\xcb\xf8\x80\x9b\x03\x57\x79\xdf\xd9\xa1\x0e\x34\x79\x13\x89\x5f\xa9\xa1\x8e\xe1\x61\xf7\x29\x5f\xe7\xf9\x07\x0b\xfc\x5d\x85\xfb\xa3\x39\xda\xde\x51\xea\xb7\x98\x1d\x78\x8c\xba\x62\xd2\x78\x4c\x70\x5c\xb7\x11\x0d\x2b\x6c\xeb\x64\x90\x52\x2e\xdf\xce\x4c\x9d\x0a\x6e\x79\xb7\x65\x87\xde\xea\x50\x94\xc4\xe3\x64\x1c\xc4\xc8\x37\x8a\x92\x68\xf3\xfd\xa5\x8c\x9d\x16\xc6\x9d\xa8\xfa\x59\xe3\x70\xd3\x86\xdd\xfd\xbe\xc6\x9d\xd9\xe9\xe9\x4f\x9c\xd5\xd5\x60\xcf\x64\xae\x18\x3d\xd2\x9d\x7d\x93\x26\xf3\xa7\x33\x3d\x88\x83\xf6\x80\x38\x47\xf7\xad\xea\x02\x78\x93\x78\x12\x5d\xd3\x07\x6e\xfa\x3e\x0d\x34\x88\xf9\xa8\x7d\xcb\x6d\x79\x93\xf7\x55\x7e\x3d\xf7\x4c\xa9\xee\x13\x63\x4d\x99\xa3\xa6\x61\xcd\x14\x99\x90\x24\xef\xb0\x0e\xec\x9b\xa6\x2e\xf4\xd9\xa3\xc3\xec\x2e\x7a\x3b\x5c\x65\x9f\x79\xe7\x9d\x30\x4a\xb1\xee\xee\x2f\x79\x46\xd4\x84\xcf\x0c\x23\xcc\x9b\x57\x34\xbb\x2f\xb0\x3a\x9a\xe4\x35\x1e\xb9\x03\xfd\x1f\x4f\x06\xf8\xb8\xf3\x69\x94\x5c\xcf\x0b\x3c\xfc\x12\x67\x42\xfc\x9b\x51\xdc\x6c\xd0\x2d\xbd\xc6\x59\x21\x97\x93\x25\xce\x57\x61\xe0\x98\xa5\xf5\xdd\x12\x8c\xb1\x64\xc5\x5c\x0f\x45\xfc\x7b\x07\x5d\xf5\x1f\x75\x8b\xfd\x43\x80\x5d\xf9\x83\xb9\xfe\x79\x42\x0b\xc2\x85\xcc\xd5\x0e\xda\xa2\x03\x17\x17\x2f\xbd\xe7\xef\xe8\x32\xba\x7b\x3f\x00\x91\xb9\x4f\xc7\xd4\x41\xaa\x45\xf3\xa0\xef\x42\x37\x17\x13\xc6\x56\x04\xcf\xc0\xf2\x7a\x16\x22\x5a\x3b\x7c\x78\x0a\xe7\x48\xd9\x42\x83\x69\xd5\x99\x79\x3c\x1c\x17\xe9\xcd\x0a\xfa\x71\x30\xe0\xf4\x21\x0e\x8c\x87\xb5\x33\x74\x39\x60\xe6\x10\x5c\xac\x78\x50\x3f\x3e\x33\x0c\x2f\xb5\x07\xa6\x85\x7b\x5d\x66\x0f\x8e\xc7\x82\xa1\x5d\x37\xed\xf2\x9e\xa3\xde\xf5\xb1\xb7\x1c\xcc\xc0\x76\x0c\xd6\xfc\xdb\xed\x70\x1f\xe7\xae\x3b\x58\x82\x45\x9c\x8b\xe0\xe2\x3b\xa0\xd9\x6b\xd6\x15\x6f\x8d\x9d\xe1\x62\x0f\xd2\xf4\xef\xbc\xe3\x43\x50\x2f\x58\x7d\xc7\x75\xed\xdd\xbf\x38\xdf\xf2\x15\x84\x6f\xff\xed\x82\x41\x23\xeb\x55\x6c\x72\x70\xd7\x54\xaa\x1c\x6c\x2a\xcf\x3d\x7e\x11\x1f\x92\x0e\xbc\xc3\xf1\x83\x0a\x7b\x7e\xad\x2f\x5c\xa0\x9c\xbe\xe2\xac\x8c\x66\xf3\xdd\xdc\xa6\x21\xaf\x5f\x89\x5c\xee\xc1\x2b\x3f\xdb\x29\x3c\x90\x9c\xd7\x72\xc9\x38\xf9\x8c\xa3\x45\xb0\xf7\x56\x64\xe8\xeb\x8d\x7c\x63\xdb\xbc\x88\xb0\x09\x9e\x6c\xf9\x0a\x46\xaf\x8f\x37\xab\x5b\xef\x2a\xdc\xbb\xda\xfe\xdd\xa9\x9f\x6c\x66\x2f\xd3\xd4\x7e\x41\xc0\x66\x9b\x4b\x5c\x60\xe5\x27\x6d\x32\x86\x13\x4a\xa8\x93\x3b\xb2\x91\x1e\x05\x43\x49\x94\x9c\xe9\x31\x2f\x04\xfb\xa3\x12\xa3\x0d\x9c\xbb\xec\x21\x08\x9a\x66\xf4\x96\x88\x35\x58\xb8\x54\x70\xb7\x41\x88\xcd\x77\x12\xdc\x9c\xdd\xd1\xab\xaf\x13\x8d\x62\x70\xb2\x97\xf1\x63\x6a\x73\xb4\xf6\xff\x00\x00\x00\xff\xff\x90\x42\xa0\x2f\x2f\x2a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 10799, mode: os.FileMode(420), modTime: time.Unix(1444855183, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5b\x6f\xda\x30\x14\x7e\xe7\x57\x58\x7e\xda\x24\xc6\x28\x95\x2a\x2d\x9a\x26\x51\xa0\x55\xa4\xb5\x43\x85\x75\x0f\x53\x1f\x8c\x7d\x40\xd6\x82\xed\xd9\x4e\x27\x56\xf1\xdf\x67\x87\x24\xd8\x84\xd0\x8b\xb4\x5e\x50\xc8\x39\xdf\xf9\xce\xdd\x7e\x7a\x42\x0c\x96\x5c\x00\xc2\x06\xf4\x23\xa7\x80\xd1\x76\xdb\x41\xe8\xc9\xfd\x23\x84\x87\x3f\x66\x73\x58\xab\x8c\x58\xb8\x92\x7a\x4d\xec\x3d\x68\xc3\xa5\xc0\x28\x41\x78\xd0\x3f\xeb\x7f\xe8\x7f\x72\x7f\xb8\xbb\x53\x9f\x12\x4d\xd6\x60\x9d\x0e\x4e\x4a\x13\xde\x48\x96\x49\xea\x2c\xb0\x99\x95\x9a\xac\x20\x90\x39\xe9\x7c\xa3\xa0\x30\x77\x9b\xaf\x17\xa0\x4b\x53\x85\x68\x0c\x4b\x92\x67\xb6\x90\x9e\xf5\x63\x89\xa1\x9a\x2b\x5b\xb9\x52\x53\x20\xb3\xe3\x40\x86\xff\x05\xf4\xee\xfa\xf2\x3d\x2e\x51\xdb\x0a\x8e\xc7\xc4\x92\x05\x31\x6d\x7e\xcc\xac\xe6\x62\xd5\xe6\x07\x51\xea\x94\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xb7\xb8\xc1\x16\x3d\x3b\xe8\xad\x39\xd5\xf2\x94\x3b\x15\x0f\xa2\x19\x31\x06\x2d\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xa9\x53\xfc\x23\x35\x7b\x85\x5b\x31\xe7\xcc\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x59\xbe\x10\x60\xcd\x11\x02\x87\xfe\xca\x8d\xfd\xec\xda\x2e\x49\x26\xa3\x41\x92\xec\x74\x93\x24\x65\x5f\xda\x38\x1d\xe8\x7e\x3a\x42\xa6\xb4\xda\xa0\xfb\xee\x3a\xbb\xa8\xc2\x7f\x28\x77\x19\x6b\x5e\x51\x34\xc8\xef\x15\x3d\x1e\xe7\x3e\x44\xe7\xbc\x8f\xef\x74\x78\xb5\xe5\x4e\x60\x1f\x7f\xcb\xad\xca\xa3\x4c\xe2\xa9\xd4\xf6\xfc\xbc\x7f\x31\xa7\x6a\xc8\x98\xf6\x22\x67\x80\x64\x39\xec\x1e\xaf\x44\x92\x5c\x83\x1d\x5a\xeb\xbe\xff\xdc\x77\x08\xee\x22\x3c\x11\x4c\x49\x2e\x6c\xcf\x23\xc1\x18\x8c\x1e\xd0\x36\x6c\x8d\xbd\x6d\xff\xf8\x36\xdb\x05\xf2\xc0\xf0\x44\x3c\xde\x6c\xcc\xef\x2c\x9c\xcc\xc8\xf2\x1d\x2c\x7d\x22\x6a\xf9\x51\x74\xd8\xb9\xc7\xd0\xb5\xfc\x28\x3a\x6c\x93\x63\xe8\x5a\xee\xd1\x51\x15\xee\xc0\xc8\x5c\x53\x88\xea\x30\x03\x9a\x6b\x6e\x37\xd7\x5a\xe6\xea\xb9\x16\x88\x95\x83\x46\x98\x6a\xa9\x40\x5b\x0e\xf1\xb4\x38\x49\xa1\x7a\xd0\x27\x6b\x1f\x07\xaa\x16\x79\x37\x54\x8f\x18\x52\xb1\x2a\xca\xeb\x8a\x14\xe8\x20\x1f\x6c\xaa\x1c\xa5\x95\x54\x66\xde\xa0\xa5\xca\xd7\xee\x4a\xcb\x75\x59\x70\xec\xeb\xef\xdf\xcd\xe5\xe1\x9b\x11\x67\x3a\xf5\xa1\xba\x5d\xdd\x2b\x7e\x3f\x9e\x5d\xe0\x32\x57\xbb\x9f\x87\xc8\x27\x37\x1b\x29\x8b\x72\xec\xa7\x25\x00\x6c\x5b\x56\xc7\x73\x39\xbd\x1b\xbb\x8f\xf1\x65\xa8\xfc\xa2\x9c\x46\x90\x57\xe4\xb6\x00\xa5\xcc\x44\xb1\x54\x5b\xee\x64\x3c\xf5\x84\x3c\x1b\xcc\x7e\x96\x5e\x12\xc9\xb1\x23\xb7\xf6\xac\x21\xdc\x3b\x54\xa6\xa1\x22\x1b\xf9\x53\x23\xc2\x46\x07\x57\x2b\x2e\x65\x20\x2c\x5f\x72\xd0\x31\xb1\x8f\x67\x66\x09\xfd\x75\xbb\x1b\xa4\x03\xf8\x6d\x3d\x7e\xcd\x79\xef\xb6\x16\xaa\x81\x0a\xeb\x7e\x00\x9c\x88\x95\xbb\xec\xd4\xf5\x8c\xeb\x78\x43\x8c\xbb\xba\xc4\x7b\xa0\x39\xfc\x2d\x90\x78\xf9\x34\x37\x4e\x04\x8b\x47\x27\x92\xe4\x8b\x8c\xd3\x6c\x33\xa4\x6e\x9f\x18\xbe\xc8\x0a\x67\x97\x24\x33\x87\x4d\xb7\xab\x5d\xd5\x2a\x2b\x35\x88\xe5\xee\xcc\x88\x66\xbe\x98\xf6\x30\x49\xd1\xca\x71\x3b\xed\xa1\xd9\xa6\x9d\xea\x73\xdb\x71\x17\x45\x10\xcc\xdf\x0d\xff\x05\x00\x00\xff\xff\xc3\x37\xc1\xe6\x33\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1444422494, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x6d\x6b\x1b\x39\x10\xfe\xde\x5f\x21\x44\xa1\x50\x5c\x27\x4e\x28\xc7\x09\xee\x83\x2f\x4d\x5a\x5f\x9d\xc4\xac\xd3\x1e\x5c\x09\x87\xb2\x3b\x76\x74\x5e\x4b\x8b\xa4\x4d\xf3\x82\xff\xfb\x8d\xa4\x5d\xef\x6b\x62\x13\x38\x0e\xea\x86\x95\x1e\xcd\x8c\x9e\x19\x3d\x33\x4f\x4f\x24\x81\x85\x90\x40\xa8\x01\x7d\x27\x62\xa0\x64\xb3\x79\x43\xc8\x13\xfe\x08\xa1\xe3\x3f\xe7\x57\xb0\xce\x52\x6e\xe1\x4c\xe9\x35\xb7\xdf\x41\x1b\xa1\x24\x25\x8c\xd0\xa3\xc3\xd1\xe1\x87\xc3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x4d\xa7\xb5\x4f\x5c\xb8\x7a\xc8\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x81\x89\xb5\xc8\x6c\xe9\x63\xc6\x33\xd0\x56\x73\x91\x92\x6f\xd1\x74\x40\x60\xb8\x1c\x92\x77\xa9\x5a\x9a\xd1\x30\xdb\xee\xf1\x2c\x1b\xc6\x6a\xcd\x46\xa3\xa3\xe3\x8f\xef\x68\x61\x6e\xe3\xff\x6e\x8a\xd8\x22\x30\x2a\xd7\x31\x34\x42\x9b\xf2\xf5\x4d\xc2\x4f\xef\x21\xce\x9d\xcb\x48\xa5\xd0\x13\x2a\xf3\x44\x30\x36\x19\x9f\x33\xe6\x31\xb5\x88\x67\x5a\xb9\x30\x44\xc3\x70\x20\xcf\x98\x7c\x0d\x0e\x3f\x53\xa9\x88\x1f\x3e\xa9\x18\xbf\xa5\x6d\xe1\x10\x59\xb2\x1a\x48\x3d\xfa\x80\xbc\x8e\x7e\xa9\x39\xf1\xa0\xb9\xc5\x2c\x14\xe7\x7f\x34\xb6\x48\xcb\x9e\x87\x9f\x2e\x16\x10\x5b\x1f\x7b\x9a\xaa\x9f\x2d\x6b\x45\xe8\x42\xc6\x22\xe3\x3e\x3d\xe8\xa0\xa8\x00\x34\x4f\x68\xea\x99\x19\xf2\x35\x7f\x54\x92\xff\x34\x8e\x5f\x4a\xae\x4b\x3a\x1b\x76\xc6\xb1\x0d\xd1\xe3\x39\x63\x0d\xab\x2e\x8e\x27\x5a\xf0\x4d\xe3\xbb\xbe\xdb\xb0\x8c\x89\xb7\xb7\x2e\xf8\x03\xda\x5c\x76\x4c\x06\xae\x9b\x1c\xb4\x19\x08\xc8\x87\x0b\xac\x47\x67\x26\x24\xfa\x24\x55\x79\x12\x0a\x19\x03\xfe\x8a\x75\x6f\x84\xe9\x30\x43\x77\xa4\xcb\x63\xf6\x49\x99\x07\xbe\x94\xb6\xbe\xc0\x8b\x63\xbb\xd3\xe7\x61\x15\xf5\xbd\xfb\xa4\x4c\x24\x9b\xc8\x3b\xb5\x82\xb3\x5c\x86\x03\xbd\xe8\xeb\x67\x9c\x94\x4f\xe7\x25\x37\xef\x9f\x31\xd9\xb3\xda\x53\x42\xff\x3d\x0d\xab\x90\x6c\xf6\x19\x6c\x04\xb1\xd2\x49\x37\xef\x7d\xd8\xf9\x2d\xd7\xc9\x04\x15\x8d\x5b\xa5\x77\x9f\x08\xf2\x75\x03\x28\x6c\xc0\xd7\xbb\xf1\x53\x61\x6c\xc0\xbe\x10\x8e\x53\x3b\x76\x82\x20\x0b\x53\xb5\xfc\xac\x55\x9e\xed\x0b\xde\x15\x87\x47\xcf\x72\x8b\xd0\xd3\x3b\xac\x51\xf3\xea\xc2\xe8\x2f\x80\xff\x25\xd5\xb1\x7b\xe5\x8b\xf2\x95\xd7\x72\xc2\xe3\xd5\xeb\x2f\x88\x02\x79\x26\x19\xfb\x43\x89\x42\xe9\xe8\xc0\xfd\xcf\xb5\x64\x28\x8f\xac\xe5\x14\x37\x9f\xdc\xf1\xc5\xb6\x79\x44\xb0\xf4\x4d\x6d\x33\x20\xb4\x67\x7b\x1c\xc7\x2a\x97\x76\x92\x14\x08\xe3\xa2\x3d\x70\x38\x0f\x23\x25\xce\xdf\xc2\xab\x9a\x83\x1d\xbc\x77\x9a\x7c\xdd\x52\xd5\x82\xfb\xce\xda\xcb\x5a\x5c\xff\xaa\x90\xe5\xea\x36\x93\x38\x32\x68\x2e\x97\x40\xde\xae\x06\xe4\xed\x1d\x61\xbf\x91\xe1\x38\xba\x30\x61\x6e\x28\x78\x43\x50\x9e\x61\x5b\x44\x10\xae\x9f\x63\x7f\x76\x7d\xbe\xd5\x1f\xb7\x63\x80\xbf\x58\x50\x68\xc6\x7c\x1d\xce\x3d\xeb\xe5\xb9\x66\x07\xa8\xfa\x2d\xe9\x34\xd2\x53\xc9\x6f\x52\x48\xdc\x8e\xd5\x39\xb4\x3a\x68\xcd\xf4\x58\x87\xf9\x02\x03\xc5\x3b\x6c\x36\xed\x66\x5b\x0a\xa5\x67\x9a\x6c\xb3\x8f\x8a\x30\xb6\xd6\x2d\xfc\xa8\x8d\x26\xf8\x7a\x96\x80\xea\x80\x37\x41\xb3\x9d\x1e\xe9\x5a\x00\x06\x2c\x97\x33\x65\xc4\x76\xb2\xb9\x8a\x26\xe7\x7f\x7f\xb9\x8c\x26\x7f\x5d\x5e\xd4\x8b\xb2\x62\xb1\x4e\x39\xc8\xa4\x22\xb8\xeb\xfa\xf9\x99\xa5\xa4\x75\xab\xfc\x7b\x8d\x2e\x5f\xb8\x4c\x52\x6f\x97\x0a\x99\xc0\xfd\xf0\xb6\x58\x68\xa4\xa2\x1c\x97\xba\xdc\xf4\xcd\x55\xfd\xf4\xd0\x13\x95\x40\x77\x22\x9a\x1f\xff\x9e\xc7\x2b\xf0\x72\x10\x2b\xec\x5d\xf7\x9d\x71\xe8\xf8\x2b\x3c\xb8\xed\xd0\xe0\x0e\xaa\x69\x70\xf8\x28\x32\xfa\xec\x60\x11\xe1\x2b\x13\x61\x28\x90\xe8\xfa\x9f\xa6\xf0\xd2\x2b\xdc\x53\xb9\xf7\x7b\xf4\x91\x76\x9f\x41\x63\xa6\xbc\xcc\x6d\x96\xdb\x3a\x7b\xaf\x78\x1d\x53\x21\x57\x6d\xfe\xbf\xf3\x34\xf7\x21\x6e\xeb\x73\x8f\xaa\xe8\xcc\xd9\xa5\x95\x4a\x6a\x1c\xa4\x7d\x97\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\x32\xc4\xd0\xe1\x13\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3091, mode: os.FileMode(420), modTime: time.Unix(1444422494, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x5b\x6f\xe2\x38\x14\x7e\xe7\x57\x58\x7e\xda\x95\x58\x96\xb2\x17\x69\xa3\xd5\x48\x14\x68\x15\x69\xa6\x83\x0a\xd3\x79\x18\xf5\xc1\xd8\x07\x64\x4d\xb0\x2d\xdb\xe9\xa8\x53\xf1\xdf\xe7\x38\x24\x21\x26\x04\x7a\x47\x21\xe7\x7c\xdf\xb9\x1f\xfb\xe5\x85\x08\x58\x4b\x05\x84\x3a\xb0\x4f\x92\x03\x25\xbb\x5d\x8f\x90\x17\xfc\x27\x84\x8e\xbf\x2e\x96\xb0\x35\x19\xf3\x70\xa3\xed\x96\xf9\x07\xb0\x4e\x6a\x45\x49\x42\xe8\x68\x78\x35\xfc\x63\xf8\x1f\xfe\xd1\xfe\x5e\x7d\xce\x2c\xdb\x82\x47\x1d\x9a\x94\x14\x81\x24\xcb\x34\x47\x06\xb1\xf0\xda\xb2\x0d\x34\x64\x28\x5d\x3e\x1b\x28\xe8\xee\xf2\xed\x0a\x6c\x49\x55\x88\xa6\xb0\x66\x79\xe6\x0b\xe9\xd5\x30\x96\x38\x6e\xa5\xf1\x95\x2b\xb5\x09\xe2\xf6\x36\x88\x93\x3f\x81\xfc\x76\x7b\xfd\x3b\x2d\x51\xbb\x0a\x4e\xa7\xcc\xb3\x15\x73\x5d\x7e\x2c\xbc\x95\x6a\xd3\xe5\x07\x33\xe6\x9c\x23\xa5\x2a\x11\xa5\x0d\xa2\x30\x21\x6d\x17\x52\xe5\x3c\x53\x1c\x0a\xa3\xef\x71\x43\xac\x06\x7e\x34\xd8\x4a\x6e\xf5\x39\x77\x2a\x3b\x84\x67\xcc\x39\xb2\xd6\xb6\xe1\x99\x16\xe0\xda\xae\xcd\x51\xf1\x87\xb6\xe2\x0d\x6e\xc5\x36\x17\xd8\x48\x60\x89\xa9\x78\x5a\x16\x16\xf9\x4a\x81\x77\x27\x0c\x20\xfa\xa3\x74\xfe\x7f\x6c\xbb\x24\x99\x4d\x46\x49\xb2\xd7\x4d\x92\x54\x7c\xe8\xb2\x89\xa0\x87\xf9\x84\xb8\x92\xb5\x65\xee\x0b\x76\x76\x51\x85\xf7\xe4\xd9\x68\xe7\x37\x16\xf3\x74\x39\xe0\xbc\xb2\xd3\xf2\xe0\xc1\xf0\xd3\xc1\x1e\xe2\xc4\x08\x42\x90\xe7\x63\xac\x99\x7b\x0d\x7e\xfa\x39\xf7\x26\x8f\xd2\x49\xe7\xda\xfa\x7f\xfe\xfe\x6b\xb4\xe4\x66\x2c\x84\x0d\x22\x24\x60\x59\x0e\xfb\xc7\x1b\x95\x24\xb7\xe0\xc7\xde\xe3\xf7\x6f\x87\x36\xa1\x7d\x42\x67\x4a\x18\x2d\x95\x1f\x04\x24\x38\x47\xc9\x23\xd9\x35\xfb\xe3\xc0\x1d\x1e\xdf\xc7\x5d\x20\x8f\x88\x67\xea\x69\x5e\x66\xbb\x39\xa1\x11\xf9\x3d\xac\x43\x2e\x6a\x79\x17\x41\xb3\x89\x4f\x11\xd4\xf2\x2e\x82\x66\xd3\x9c\x22\xa8\xe5\x81\x20\x2a\xc7\x3d\x38\x9d\x5b\x0e\x51\x41\x16\xc0\x73\x2b\xfd\xf3\xad\xd5\xb9\xb9\xd4\x0b\xb1\x72\xa3\x23\xe6\x56\x1b\xb0\x5e\x42\x3c\x3b\x28\x29\x54\x8f\x1a\xa6\x6a\x5d\x52\x6d\xf6\x7e\x13\x11\x19\x49\xd5\xa6\x28\x35\x16\xac\xa1\x43\x42\xbc\xa9\x41\xab\x5e\x73\x9d\x05\x4e\xcf\x4d\xa8\xe3\x8d\xd5\xdb\xb2\xf8\x34\xf4\x42\x78\xb7\xd4\xc7\x6f\x26\x52\xd8\x34\x44\x8b\xcb\x7b\x50\xfc\xfe\x79\xf5\x2f\x2d\xd3\xb5\xff\x79\x8c\x7c\xc2\x39\x49\x45\x94\xe6\x30\x39\x0d\xc0\xae\x63\x97\x5c\x4a\xeb\xfd\x14\x3f\xa6\xd7\x4d\xe5\x57\xa5\x35\x82\xbc\x2d\xbd\x05\x2e\x15\x2e\x0a\xa7\xda\x7c\x67\x43\xaa\x07\xe6\x62\x3c\x87\xd1\x7a\x4d\x30\xa7\x8e\xe1\xda\xb3\x96\xf0\xe0\x50\x99\x89\xca\xd8\x24\x9c\x24\x11\x36\x3a\xcc\x3a\x71\xa9\x00\xe5\xe5\x5a\x82\x8d\x0d\x87\x78\x16\x9e\xf1\xef\x77\xfb\x71\x3a\x82\xdf\xd5\x43\xd8\x9e\xfd\x7e\x67\xad\x5a\xa8\x66\xe9\x8f\x80\x33\xb5\xc1\x0b\x10\x3d\xbd\xec\x51\xfe\x89\x39\xbc\xd1\xc4\x0b\xa1\xbd\x05\x3a\x20\xf1\x22\x6a\x6f\x9f\x08\x16\x0f\x50\x24\xc9\x57\x99\xe4\xd9\xf3\x98\xe3\x62\x71\x72\x95\x15\xfe\xae\x59\xe6\x8e\xfb\x6e\x5f\xbe\xaa\x5b\x36\xe6\x88\x08\x4f\x91\x68\xf2\x8b\x99\x6f\xe6\x29\xda\x3d\xb8\xdc\x1e\xdb\x9d\xda\xab\x3e\x77\x3d\xbc\x3f\x82\x12\xe1\xca\xf8\x2b\x00\x00\xff\xff\xa1\x5a\xfe\x19\x4a\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1444422494, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1443459918, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

