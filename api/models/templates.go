// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x5a\x7b\x6f\xdb\xc8\x11\xff\x3f\x9f\x62\x41\xdc\x1f\xad\x21\xcb\x8f\xe0\xae\x2d\xd1\x16\xb0\x65\xe7\xe2\x9e\x93\x33\x24\x27\x07\x34\x08\x0a\x9a\x5a\x49\xac\xc8\x5d\x76\x77\xe9\x8b\x62\xe8\xbb\x77\xf6\x41\x72\x5f\x94\xe4\x24\x77\x38\xdc\x2b\xda\x1d\xce\xce\xce\xf3\x37\xb3\xf7\xf4\x84\xe6\x78\x51\x10\x8c\x92\xac\xae\x13\xb4\xdd\xbe\x40\xe8\x09\xfe\x41\x28\xb9\xf8\x65\x76\x8f\xab\xba\xcc\x04\x7e\x45\x59\x95\x89\xf7\x98\xf1\x82\x92\x04\xa5\x28\x39\x3f\x3d\x3b\x3d\x3e\xfd\x1b\xfc\x9d\x8c\x34\xf9\x84\x92\x79\x21\x60\x9f\x27\xa9\x61\x01\xac\x9e\x90\x30\x3c\x50\x52\x33\x9a\x63\xce\x8f\xf3\x9e\x12\x8d\xf5\x91\x8a\xc3\x65\x99\x91\xf5\xa4\x6c\xb8\xc0\x4c\xf2\x40\xc9\x2b\x92\xa6\xd7\xff\x6b\xb2\x52\xf2\xfc\x20\x57\xa6\x78\x01\x7f\x4c\x5a\x2a\xb4\x1d\xa1\x24\x41\x1f\x91\x66\xb2\x35\xb2\xdc\x65\x2c\xab\x30\x10\x70\x29\x6c\x54\x98\x87\x0c\x4e\xcb\x31\x3b\xae\x25\xad\x2b\x49\x54\x6a\x87\xae\x15\xd9\x92\xd6\x2c\xc1\xe2\xfd\xa6\xc6\x4a\x49\x33\xc1\x0a\xb2\x34\x0a\x52\x5b\x57\x78\x91\x35\xa5\x50\xbb\xee\x3a\xcf\x59\x51\x8b\x56\xbd\x89\xd9\xda\x8e\xba\x93\xea\x26\x72\x0a\x90\xbe\x6d\xaa\x07\x90\x20\x72\x88\x32\xd3\xe9\xd0\x31\x52\x8b\x77\xef\x10\x5f\x65\x0c\x73\x44\x17\x08\x67\xf9\x0a\x99\xdb\x86\xe7\x5f\x93\xc7\x82\x51\x52\x61\x22\xe2\x72\x0c\x5f\x76\xc7\x5d\xa3\x57\xfd\x09\x6f\x7e\xeb\x23\xa6\xb8\xc4\x19\xc7\xbf\x83\xdd\xa6\xb8\xa6\xbc\x10\x94\xc5\xee\xf4\x75\x87\xcd\x68\xc3\x72\x8c\x72\x3a\xc7\x88\xf5\xc7\x04\x22\xcc\x9a\x07\x82\x05\x1f\x38\xff\xb6\xe0\xe2\xef\x10\xeb\x10\x69\x93\xf3\x34\xd5\xc4\x69\x7a\x33\xff\xe7\x97\xc8\xf4\xfe\x6e\x82\xb8\x3e\x0f\x2d\x28\x43\x62\x55\x70\x24\x53\x4b\x20\x55\x9b\x4d\x1c\xa9\x2c\x7b\xca\xe8\xe3\x62\x97\xf7\x52\xf2\x48\x3f\xc1\xcd\x95\x29\xd1\xa3\xe1\x37\x1a\xf4\x9b\x50\x84\xbb\xc9\x80\x52\x7a\x7d\x00\x8d\x54\xc6\x97\xea\x22\xaa\x03\x27\x57\x4d\x31\x57\x76\xb4\xed\x93\x4c\x20\xad\xd0\xea\x9e\xd6\x45\x3e\xa5\x65\xcc\x4f\x5b\x21\x6f\x2e\xde\xa4\xa9\xa2\xb1\x24\xb9\x63\xb4\xc6\x4c\x14\xd8\x35\xba\x4c\xea\x9c\x37\x15\x96\xf4\x77\xb4\x2c\xf2\xcd\x15\xcd\x9b\x20\xa6\x3d\xfb\xc8\x64\x7f\x7e\x0c\xf9\xfe\xec\x2f\xd6\x21\xda\xb5\x04\x58\xc9\x7c\xff\xc1\xd9\x42\x1e\x3f\x45\x7e\xbd\x58\xe0\x5c\x59\xf7\xa2\x2c\xe9\xaf\x1e\x37\x23\x7a\x41\xf2\xa2\xce\x4a\x5d\x01\x66\x98\x3d\x16\x39\x56\xe9\x1f\x5c\xa2\x7a\x98\x67\xe3\xac\xca\x3e\x53\x92\xfd\xca\xc7\x39\xad\x54\xf2\x8f\xf0\xb9\xc8\x8d\x9f\xc0\x77\x5c\xf0\xb4\xbf\x38\x7c\xe1\x91\x6f\x9d\xdf\xf6\xae\xc3\x19\xca\x8a\x58\x49\xe1\x4f\x12\x77\x59\x6a\x52\xeb\xda\xd5\x81\xaf\x01\x4d\xb9\x79\x0b\xb5\x49\xe9\x60\x5e\x15\x04\xa2\x8f\x65\x10\xb7\x81\x2e\x92\x3d\x06\x52\x34\x87\x18\x49\x11\x3a\x86\x92\x8a\x0d\x4c\x61\xa9\x2c\x39\x92\x3f\x5b\xc7\xd4\x0b\x68\xbb\x47\x6d\xf6\xaf\x9e\x72\x1b\x16\xb2\xde\xb5\x77\xb8\xf5\xad\x32\x75\x9a\xbe\x6a\x88\x96\xea\x20\xef\x9e\x40\x2a\x0c\x3d\x79\xf6\xf2\xb2\xc9\xd7\x58\xf4\x98\xe2\x5f\xb4\x30\xae\x71\x0c\x37\x85\xff\xe4\x2a\x97\xc0\x9f\x7b\x88\xa1\xc4\x98\xe2\xa5\x8a\x66\xb8\x7c\xe8\x67\xc0\xd8\x94\x2a\x9f\xab\x66\x6a\x32\xd3\x89\xc3\xb6\x03\x51\x12\xb9\x9c\x2c\x14\xb0\x82\xdf\xe3\xcf\x45\x9d\xe8\x43\x06\xdd\xef\x75\x46\xe6\xa5\x02\x1b\x6d\x24\xe0\x4f\x00\x3e\x08\xc4\x8a\x43\xf7\x06\x57\x50\x07\x66\xc5\x67\xa5\xce\xb3\xf3\xbf\xba\xdb\x6d\x42\xd1\x42\xff\x88\xc5\x85\xd0\x5e\x11\x64\x1d\xe9\x13\x8c\x04\x11\x96\x4c\x1b\x22\x0a\xed\xc3\x04\x34\xfe\x5f\xee\x1e\x70\x0f\x7b\xb4\x51\xbe\xf5\xf2\x34\x19\x76\x85\x38\x1e\x63\x5d\x3e\xdc\x0b\xc9\x9e\x41\xca\x75\x1e\xf1\xf0\x9b\x43\xca\x71\xde\xb0\x42\x6c\x92\x01\x56\x5c\x86\x50\xb7\xd9\xa6\xef\x9f\x1b\x51\x37\x62\x10\xf3\x76\xd7\xa2\x86\x6e\xaf\xa4\x2e\x61\x57\xc3\xb1\x10\x50\xc3\xbc\x22\xfe\x3e\x2b\x1b\x63\x4b\xe3\x5e\x1d\x5d\xaf\xee\x17\xed\xbf\xb7\x2f\xe0\x40\x4c\xe6\x8a\xaf\x85\xfc\x63\xb8\x5c\x37\x02\x4f\x88\x65\x64\x89\xd1\x77\x6b\x94\xfe\x03\x8d\xaf\x89\x60\x2a\x7b\xf1\xf6\x0e\x1a\xb3\x03\x5d\x53\x43\x48\x4a\xba\xed\xb6\x4f\xd9\xbb\x10\x7c\xfc\x9b\x1e\xcf\x8f\xf4\xf9\x46\xdc\xdd\x82\xb7\xd0\xdc\x13\x1a\x2b\xa1\x3b\x51\xfb\x13\xf1\x58\x5e\x02\x36\x26\xb4\xaa\x20\xa8\xec\xca\x3b\x84\xcb\x9c\xaa\x0f\xac\x72\xfd\xa9\x64\x66\xb8\x00\x3f\x9b\x3a\x06\x0c\x5b\xa7\x89\x88\x02\x1f\x14\x0c\xcf\x27\xb4\x71\x72\x7d\x2f\x8f\x87\xf3\x1d\x79\xce\x86\x0f\xbe\x5f\x61\x44\xd4\xa7\x12\xe3\x17\x04\xbc\x18\x82\x57\xe5\x1c\x85\xfa\x05\xec\x1b\x3d\x22\x41\x11\x38\x23\x40\x4a\x79\x9b\x35\xc6\x35\x62\x0d\x21\xa0\x05\x44\x09\xda\x40\xa8\xa1\xdc\xf4\x3b\xfb\x6e\x73\x53\x65\x4b\xfc\x6c\xb5\x7e\x85\xfa\x74\xce\x0b\x4e\xdc\xa1\x37\x59\x32\xbf\xff\x21\x7e\x24\xec\xbd\xb9\x94\xda\x99\x5e\xbc\x91\x5a\x81\x44\x03\x0e\x8a\xf7\x4a\x61\xb9\xfe\xb7\xbf\xf8\xa1\xd1\xd0\x25\x10\xe5\xf8\xc9\x4f\xb0\xc9\x8b\x3e\x71\x44\x92\x46\x4b\xa2\xb3\xc4\x68\x0f\x7f\x2b\xeb\x0e\x9c\xe0\x54\x72\xb3\x0b\x9d\x85\x60\x38\xab\xda\x71\x41\xb4\x88\x27\x33\xe8\x46\xbb\x18\x38\xeb\x33\x97\xb9\x7f\xb1\x40\xe3\xd7\x19\xbf\xd3\x92\x58\x69\xe8\x96\x2e\xf9\x3b\xee\x34\xe2\x11\x98\xac\x28\x3a\x55\x0f\xc0\x88\x1e\xe5\x69\x50\x70\xe2\x40\x8f\x38\xd4\xf3\x00\x87\x0b\xf3\xa4\x6c\x1e\x40\xb7\xa8\x76\xe0\xbb\x03\xd1\xdd\x4e\x10\x1e\x83\xe1\x07\x01\x71\x0f\x42\xaf\x8d\x15\xef\x1a\x31\xc5\x39\x65\x73\xb0\xfe\xc7\xe8\x57\x16\x6c\xfc\x30\x84\x8c\x32\x46\x52\xc0\xef\x69\xcb\xf5\x08\xfe\xe2\xca\x3d\x4e\x42\x0c\x06\xd7\xcb\xd7\x4a\x99\xaa\x3a\x1c\x1f\x19\x9c\x14\xe0\x51\x1f\x91\x22\x8f\xc2\x41\x56\x2f\x7c\x1a\xb7\xac\x4b\xa3\x5d\xe4\x6a\x14\xb2\xd3\xa5\x34\x8d\x84\x81\x7b\xfd\x0a\x92\x43\xa1\xda\x1a\x2b\x5d\x1b\xeb\x35\x5c\x71\x05\x7d\x3f\x3a\x7d\x9c\x74\x58\xe3\x46\xbd\x52\x3a\x5f\xf7\x4b\xfc\x73\x92\x44\x8f\x87\xda\xa2\x39\x14\x5b\x43\xf5\x34\x9e\x01\xaf\x27\xb3\xfb\x8c\xaf\xaf\xe4\x71\x85\x88\xf4\xf7\x35\x08\xc5\x7f\x56\xde\xe0\xb4\x02\xa3\xae\xd7\x53\xb1\xf2\x31\xd2\xc6\x6b\x72\xd9\x97\xfb\x67\x58\xc4\x56\xcc\x9c\x8d\x4f\x0f\x6b\x1b\xcc\xc1\xf7\x74\x8d\xc9\x5e\x64\x3c\x88\x8a\x7b\x43\xc5\x5a\x8c\xdd\x4e\x0d\x9a\xec\x75\x98\x84\xcd\x86\x3d\xb0\xea\x18\xb5\x6b\x1e\xa9\x37\xa9\xeb\xc8\xed\x75\xef\x93\xae\x8d\x69\x0b\x02\xde\xf8\x24\x52\xe3\x06\xc3\x49\xc7\x02\x20\xf8\x1f\x01\x4b\xe0\x0f\xbd\xe0\x3b\xfb\xbe\xb8\xb3\x84\x15\xd3\xf3\x12\x57\xf5\x3b\x9d\xa2\xe5\xf5\x87\xf0\x06\x67\x8e\x1d\x4e\xad\x6d\x52\x1f\xfa\x45\x30\x72\x1c\x26\xfe\x9e\x0e\x18\x46\xf5\x2e\x31\xc3\x10\xf5\xfd\xb9\x6b\x42\xbb\xc6\xa5\x0f\x7e\x8f\xf6\x96\x66\xf3\x4b\xd3\x47\x79\x2e\x58\xc2\x56\xdb\x62\xf1\x03\x7d\xb1\x4f\x8c\xfb\xd3\x65\xf0\x4a\xe0\xb7\x18\x52\x0a\x27\x2d\xf6\x7b\xc5\x08\x7d\x57\x53\x26\xe4\xb6\x26\x1c\xdf\x10\xdd\xaf\xdf\xc1\x32\x8f\x27\x52\x45\x67\xee\x20\xc9\xa4\x61\x14\x97\xed\xf6\x35\xe5\xb1\xd9\xfb\xfe\x21\xb2\xcc\xee\x64\x8e\x3f\xb5\xec\xa7\x80\xef\x69\xc5\x3b\xc6\xcf\x98\x68\xdb\xca\xdb\x73\xd9\xeb\x4f\xd1\xcb\xaa\x0b\x65\x72\x09\x48\xff\xc4\xeb\xb2\x10\xe6\xd3\x24\x4d\xfe\x7c\xb0\x52\xcc\x85\x34\xa7\x53\x58\x6f\x3d\xe4\x2b\x35\xd4\x33\x7c\xde\x9c\xff\x99\xd2\xfe\xd1\x6c\x79\x70\x20\xb8\xdd\x45\x8f\x1b\xa2\xd6\x4e\x5a\xa3\x78\xd7\xb5\x7b\x10\x3f\xb9\x76\x76\x84\xac\x74\xf5\x76\xa6\x53\x94\xf7\xc0\xb7\x2b\x00\x83\xdd\x21\x47\x8c\xbb\xe2\xd8\x73\xc3\x6f\xe4\x88\xd1\xbe\xeb\x4b\x19\x5b\xe8\xd5\x1e\xa6\xb9\x81\xf9\x7c\xd3\xfa\x8d\xdd\xa1\xc6\x9d\x99\xc1\xd9\x8f\x8c\x36\xf5\x20\x5c\xd6\xaf\x4b\x0e\xe9\x5e\xc8\xac\xc8\xdc\xc6\x3c\xa8\x6e\xe8\x80\xea\x76\xfc\xd0\xa9\xce\xab\x6c\x89\x23\xd1\x0d\x59\x32\x0d\xf9\x55\x8d\x29\xf4\x4f\xe5\x5b\x76\xb7\x93\xbc\xaf\xf3\x9b\xb9\x63\x4a\xf9\x94\x14\xc3\xe3\x96\x9a\x86\x35\x53\x66\x5c\x14\x79\x5f\xe6\xe0\xdc\x34\xb5\xab\xde\x01\xcd\x45\xff\xc6\xd7\x97\x54\xb3\xe6\xdc\x77\x42\x09\xc1\xaa\xb1\xbb\x62\x59\x21\x87\x3b\xba\x0f\xd5\x5f\x5e\x93\xec\xa1\xc4\xf2\x6a\x82\x35\x78\x64\xcf\x72\x7f\x38\x1d\xe0\x63\x8f\x26\x51\x72\x33\x2f\xf1\xf0\x47\x8c\x72\xfe\x6f\x4a\x70\x7b\x40\xbf\xf5\x1a\x67\xa5\x58\x4d\x56\x38\x5f\xfb\x81\xa3\xb7\x36\xf7\x2b\x30\xc6\x8a\x96\x73\xd5\x0f\xbb\x23\x67\x55\x58\x1f\x55\x77\xf5\xbd\x07\x5b\xd8\x52\x4f\xfe\x9f\xd0\xa2\x60\x5c\xe4\xf2\x04\x65\xd1\x81\x99\xf5\x4b\x67\xfd\x1d\x59\x45\x4f\x0f\x03\x10\xe9\xa7\x54\x4c\x2c\x90\x52\xb6\x0b\xa1\x0b\xdd\x5e\x4e\x28\x5d\x17\x78\x06\x96\x57\x6d\x30\xef\xec\xf0\xe1\xc9\x1f\x21\x64\x0b\x85\xa3\x24\x28\x77\x78\x58\x2e\x12\xb4\x89\x61\x1c\x0c\x38\xbd\x3f\x99\x8d\x87\xb5\xd5\x6f\x3f\xa3\xdd\xf4\x66\xea\x0e\xca\x8b\x8f\x8b\xfc\xf7\xcc\x81\x41\xd1\x41\xef\x98\x83\x93\x11\x6f\x5e\xd3\x0f\x3a\xfc\xd1\x8a\xf7\x72\xe8\x6c\x7b\xe3\x8f\x3d\x33\x15\xf7\x61\x33\x18\xe1\xf4\xcf\x9c\xc1\x50\x23\xc1\x39\xf7\xde\x3c\xbf\x64\xcc\x11\xef\x8a\xac\xb9\x52\x00\x69\xc2\xe7\xce\xf8\xfc\xcb\x09\x56\xd7\x71\x6d\x7b\x87\x6f\xa6\x3b\x5e\x9f\xbf\xfd\xc3\xf2\xa0\x91\xd5\x2e\xd6\x39\xb8\xef\x27\x64\x0e\xd6\x95\xe7\x01\x1f\xc5\xe7\x63\x03\xdf\x30\xbc\x94\x61\xcf\x6e\xd4\xac\x1d\xca\xe9\x2b\x46\xab\x68\x36\xdf\xcf\x6d\xea\xf3\xfa\xa5\x10\xab\x03\x78\xe5\xe7\x7b\x85\x07\x92\x8b\x46\xac\x28\x2b\x3e\xe3\x68\x11\x0c\xbe\x8a\xcc\xfb\x9c\x69\x5f\xec\x98\xa3\x08\x1b\x6f\x65\xc7\xeb\x7b\xd0\xc2\xe9\xdd\x9d\x63\x6a\xfb\x99\x2e\x7c\x36\x73\x93\xcd\xec\x65\x9a\x9a\xb7\x61\x93\x6d\xae\x70\x89\xa5\x9f\x74\xc9\x18\x6e\x28\xa0\x4e\xee\xc9\x46\x6a\x0a\x08\x25\x51\x30\xaa\x26\x7c\x10\xec\x8f\x52\x8c\x2e\x70\xee\xb3\xa5\x17\x34\xed\xd4\x25\xe1\x1b\xb0\x70\x25\xe1\x6e\x8b\x10\xdb\xe7\x68\x3b\x67\xf7\xf4\xf2\xff\x24\x19\xc5\xe0\x64\x90\xf1\x63\x6a\xb3\xb4\xf6\xff\x00\x00\x00\xff\xff\xe5\xe0\xe0\xf8\xfd\x27\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 10237, mode: os.FileMode(420), modTime: time.Unix(1444170863, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xdd\x6f\xda\x3a\x14\x7f\xe7\xaf\xb0\xfc\x74\xaf\xc4\xe5\x52\x2a\x5d\xe9\x46\xd3\x24\x0a\xb4\x8a\xb4\x76\xa8\xb0\xee\x61\xea\x83\xb1\x0f\xc8\x5a\xb0\x3d\xdb\xe9\xc4\x2a\xfe\xf7\xd9\x21\x09\x36\x49\xe8\x87\xb4\x7e\xa0\x90\x73\x7e\xe7\x77\xbe\xed\xe7\x67\xc4\x60\xcd\x05\x20\x6c\x40\x3f\x71\x0a\x18\xed\xf7\x3d\x84\x9e\xdd\x3f\x42\x78\xfc\x75\xb1\x84\xad\xca\x88\x85\x6b\xa9\xb7\xc4\x3e\x80\x36\x5c\x0a\x8c\x12\x84\x47\xc3\x8b\xe1\x3f\xc3\xff\xdd\x1f\xee\x1f\xd4\xe7\x44\x93\x2d\x58\xa7\x83\x93\xd2\x84\x37\x92\x65\x92\x3a\x0b\x6c\x61\xa5\x26\x1b\x08\x64\x4e\xba\xdc\x29\x28\xcc\xdd\xe5\xdb\x15\xe8\xd2\x54\x21\x9a\xc2\x9a\xe4\x99\x2d\xa4\x17\xc3\x58\x62\xa8\xe6\xca\x56\xae\xd4\x14\xc8\x1c\x38\x90\xe1\xbf\x00\xfd\x75\x73\xf5\x37\x2e\x51\xfb\x0a\x8e\xa7\xc4\x92\x15\x31\x5d\x7e\x2c\xac\xe6\x62\xd3\xe5\x07\x51\xea\x9c\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xf7\xb8\xc1\x56\x03\x3b\x1a\x6c\x39\xd5\xf2\x9c\x3b\x15\x0f\xa2\x19\x31\x06\xad\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xb9\x53\xfc\x29\x35\x7b\x83\x5b\x31\xe7\xc2\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x45\xbe\x12\x60\x4d\x0b\x81\x43\x7f\xe2\xc6\x7e\x70\x6d\x97\x24\xb3\xc9\x28\x49\x0e\xba\x49\x92\xb2\x8f\x5d\x9c\x0e\xf4\x30\x9f\x20\x53\x5a\x6d\xd0\x7d\x71\x9d\x5d\x54\xe1\x0f\x94\xbb\x8c\x35\xaf\x28\x1a\xe4\x0f\x8a\xb6\xc7\x79\x0c\xd1\x39\xef\xe3\x3b\x1f\x5e\x6d\xb9\x17\xd8\xc7\x9f\x73\xab\xf2\x28\x93\x78\x2e\xb5\xbd\xbc\x1c\xfe\xb7\xa4\x6a\xcc\x98\xf6\x22\x67\x80\x64\x39\x1c\x1e\xaf\x45\x92\xdc\x80\x1d\x5b\xeb\xbe\x7f\x3b\x76\x08\xee\x23\x3c\x13\x4c\x49\x2e\xec\xc0\x23\xc1\x18\x8c\x1e\xd1\x3e\x6c\x8d\xa3\x6d\xff\xf8\x3e\xdb\x05\xf2\xc4\xf0\x4c\x3c\xdd\xee\xcc\x8f\x2c\x9c\xcc\xc8\xf2\x3d\xac\x7d\x22\x6a\x79\x2b\x3a\xec\xdc\x36\x74\x2d\x6f\x45\x87\x6d\xd2\x86\xae\xe5\x1e\x1d\x55\xe1\x1e\x8c\xcc\x35\x85\xa8\x0e\x0b\xa0\xb9\xe6\x76\x77\xa3\x65\xae\x5e\x6a\x81\x58\x39\x68\x84\xb9\x96\x0a\xb4\xe5\x10\x4f\x8b\x93\x14\xaa\x27\x7d\xb2\xf5\x71\xa0\x6a\x91\xf7\x43\xf5\x88\x21\x15\x9b\xa2\xbc\xae\x48\x81\x0e\xf2\xc1\xa6\xca\x51\x5a\x49\x65\xe6\x0d\x5a\xaa\x7c\xed\xae\xb5\xdc\x96\x05\xc7\xbe\xfe\xfe\xdd\x52\x9e\xbe\x99\x70\xa6\x53\x1f\x2a\x1e\x0e\x8a\xdf\x7f\x87\xb8\xcc\xd4\xe1\xe7\x31\xf2\xc8\x4d\x46\xca\xa2\x0c\xfb\x59\x09\x00\xfb\x8e\xc5\xf1\x52\x46\xef\xa7\xee\x63\x7a\x15\x2a\xbf\x2a\xa3\x11\xe4\x0d\x99\x2d\x40\x29\x33\x51\x2c\xd5\x8e\x3b\x1b\x4f\x3d\x1f\x2f\x06\x73\x9c\xa4\xd7\x44\xd2\x76\xe0\xd6\x9e\x35\x84\x47\x87\xca\x34\x54\x64\x13\x7f\x66\x44\xd8\xe8\xd8\xea\xc4\xa5\x0c\x84\xe5\x6b\x0e\x3a\x26\xf6\xf1\x2c\x2c\xa1\xdf\xef\x0e\x63\x74\x02\xbf\xab\x87\xaf\x39\xed\xfd\xce\x42\x35\x50\x61\xdd\x4f\x80\x33\xb1\x71\x57\x9d\xba\x9e\x71\x1d\x6f\x89\x71\x17\x97\x78\x0b\x34\x47\xbf\x03\x12\xaf\x9e\xe6\xbe\x89\x60\xf1\xe0\x44\x92\x7c\x95\x71\x9a\xed\xc6\xd4\x6d\x13\xc3\x57\x59\xe1\xec\x9a\x64\xe6\xb4\xe9\x0e\xb5\xab\x5a\x65\xa3\x46\xb1\xdc\x9d\x18\xd1\xc4\x17\xb3\x1e\x26\x29\x5a\x38\x6e\xa3\x3d\x36\xdb\xb4\x57\x7d\xee\x7b\xee\x9a\x08\x82\xf9\x9b\xe1\xef\x00\x00\x00\xff\xff\x17\x8f\xc1\x85\x31\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2609, mode: os.FileMode(420), modTime: time.Unix(1443527400, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x55\xff\x4b\x3b\x39\x10\xfd\xdd\xbf\x22\x04\x41\x38\x74\xb5\x2d\x72\x5c\xe0\x7e\xe8\x5d\xeb\x29\x57\x6d\x69\xab\x07\x27\xc7\x11\x77\xa7\x35\xba\x9b\x2c\x49\xb6\x5a\x4b\xff\xf7\x9b\x64\x77\xdb\xfd\x52\x3d\xf9\x80\x45\x32\x79\x79\x99\xbc\x99\x79\xbb\xd9\x90\x08\x16\x42\x02\xa1\x06\xf4\x4a\x84\x40\xc9\x76\x7b\x44\xc8\x06\x7f\x84\xd0\xfe\x5f\xb3\x39\x24\x69\xcc\x2d\x5c\x29\x9d\x70\xfb\x00\xda\x08\x25\x29\x61\x84\x76\x2f\x3a\x17\x67\x17\xbf\xe0\x1f\x3d\xcd\xe1\x13\xae\x79\x02\x16\x31\x94\x15\x14\x18\xbd\xd7\x71\x65\x89\x81\xf9\x3a\x05\xcf\x30\xb3\x5a\xc8\x65\x71\xda\x6f\x0d\xc0\x84\x5a\xa4\xb6\xbc\x63\xc2\x53\xd0\x56\x73\x11\x93\xfb\xe9\xe8\x94\x40\xb0\x0c\xc8\x49\xac\x96\xa6\x13\xa4\xbb\x3d\x9e\xa6\x41\xa8\x12\xd6\xe9\x74\x7b\x97\x27\xb4\xa0\xdb\xfa\xff\xdb\x22\xb7\x29\x18\x95\xe9\x10\x6a\xa9\x8d\x78\xf2\x14\xf1\xe1\x3b\x84\x99\xbb\x72\xaa\x62\x38\x90\x2a\xf3\x42\x30\x76\xd3\xbf\x65\xcc\x63\x2a\x19\x4f\xb4\x72\x69\x88\x1a\x71\x2e\x9e\x31\x59\x02\x0e\x3f\x51\xb1\x08\xd7\x03\x15\xe2\x5a\xda\x06\x0e\x91\xa5\xaa\xb9\xa8\xdd\x33\xd4\xb5\xf3\x73\xe5\x12\x0f\x9a\x59\xac\x42\x71\xfe\xb1\xb6\x45\x1a\x7c\x1e\x3e\x5c\x2c\x20\xb4\x3e\xf7\x38\x56\x6f\x0d\xb6\x22\x75\x21\x43\x91\x72\x5f\x1e\xbc\xa0\xe8\x00\xa4\x27\x34\xf6\xca\x04\x3c\xe1\x1f\x4a\xf2\x37\xe3\xf4\xa5\xe4\x9f\x52\xce\x1a\x4f\x3f\xb4\x79\xf6\x78\xce\x58\xc3\xf6\x0f\xc7\x13\x0d\xf8\xb6\xb6\xae\xee\xd6\x98\xb1\xf0\xf6\xd9\x25\x7f\x4e\xeb\x61\xa7\x64\xae\x75\x5d\x83\xa6\x02\x39\x72\x7d\x87\xfd\xe8\x35\x88\x12\x21\x85\xc1\x6e\xb1\x4a\xb7\xb4\xa0\xff\x53\x20\x8f\xf9\x4e\x91\x3c\xf0\xab\x42\xf9\x54\x0f\x14\xa7\x22\x22\xfd\xc9\x2d\xcb\x76\xcd\x03\x87\x64\x6f\x10\x0d\x40\xae\xeb\x3c\xa6\xc7\x06\x10\xe3\x38\x8e\x9f\x5e\x1c\xe8\x00\x6b\x8b\xf4\xeb\x72\x55\x57\x7b\x64\x19\xdd\xe5\x88\xae\xa2\xb9\x5c\x02\x39\x7e\x3d\x25\xc7\x2b\xc2\x7e\x25\x41\x7f\x7a\x67\x72\x6b\x29\x54\x42\x50\x96\xe2\xe4\x20\x08\xe3\xb7\x38\xc2\xce\x0a\x1a\x23\xb4\x73\x0a\x3f\x7f\xf9\xb4\x32\x36\x5c\xa1\xb8\x33\xff\x90\xf2\x5c\xbd\x49\xf6\x23\x49\x5a\xb3\x36\x94\xfc\x29\x86\xc8\xed\x58\x9d\x41\x63\xc8\x2a\xd4\x7d\x9d\x5b\x10\x26\x8a\x6f\xd8\x6e\x9b\xf3\x78\x95\x49\x2f\xb5\x6f\x31\xe2\x27\xe8\x4a\x32\xf6\x07\xd8\xbe\xb5\x2e\xf0\x58\x71\xaf\x91\x5a\x2e\x41\xfb\xfa\x20\x6d\x6b\x8c\x5c\xcf\x60\xc2\x72\x39\x51\x46\xec\xcc\x6f\x3e\xbd\xb9\xfd\xf7\x7a\x3c\xbd\xf9\x7b\x7c\x47\x8f\x0e\x95\xa1\x2a\x39\xc8\x68\x2f\x70\xfb\xea\xcf\x6d\xad\x94\xb5\x7c\xd0\xf7\xdc\xed\x9a\xcb\x28\xf6\xbc\x54\xc8\x08\xde\x83\xe7\x22\x50\x2b\x45\xe9\xa8\x6d\x6d\x0e\x59\xef\x61\x79\xe8\xef\x2a\x82\xb6\x69\xce\x7a\xbf\x65\xe1\x2b\xf8\xe6\x0f\x95\x5c\xa9\xf7\x96\x63\xf6\xfe\x84\xb5\xdb\xce\xcd\xec\x7c\xff\xc1\x08\x3e\x44\x4a\x3f\xf5\x9e\x69\x26\xad\xc8\x7d\x43\xe2\xd5\x2f\xa6\xfe\xa6\x39\xee\xa9\xcc\xdf\xdb\xbd\xa4\xed\x31\xa8\x7d\x76\xc6\x99\x4d\x33\x5b\x55\xef\x07\xa6\x63\x24\xe4\x6b\x53\xff\x07\x1e\x67\x3e\xc5\x5d\x7f\x7e\xa3\x2b\x5a\x9f\xe2\x92\x65\xe3\xbc\x61\xe1\xe8\x1c\xa4\xf9\x96\x23\xf7\xdb\x93\xfd\x17\x00\x00\xff\xff\x7c\xfa\x93\x54\x36\x08\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 2102, mode: os.FileMode(420), modTime: time.Unix(1444333313, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\xdd\x6e\xda\x30\x14\xbe\xe7\x29\x2c\x5f\x6d\x12\x63\x94\x6d\x17\x8b\xa6\x49\x14\x68\x15\x69\xeb\x50\x61\xdd\xc5\xd4\x0b\x63\x1f\x90\xb5\x60\x5b\xb6\xd3\xa9\xab\x78\xf7\xd9\x21\x09\x76\x42\xa0\xff\x28\xe4\x9c\xef\x3b\xff\xc7\x7e\x7a\x42\x0c\xd6\x5c\x00\xc2\x06\xf4\x03\xa7\x80\xd1\x6e\xd7\x43\xe8\xc9\xfd\x23\x84\xc7\xbf\x16\x4b\xd8\xaa\x8c\x58\xb8\x92\x7a\x4b\xec\x1d\x68\xc3\xa5\xc0\x28\x41\x78\x34\xbc\x18\xbe\x1b\x7e\x76\x7f\xb8\xbf\x57\x9f\x13\x4d\xb6\x60\x9d\x0e\x4e\x4a\x0a\x4f\x92\x65\x92\x3a\x06\xb6\xb0\x52\x93\x0d\x04\x32\x27\x5d\x3e\x2a\x28\xe8\x6e\xf2\xed\x0a\x74\x49\x55\x88\xa6\xb0\x26\x79\x66\x0b\xe9\xc5\x30\x96\x18\xaa\xb9\xb2\x95\x2b\xb5\x09\x64\xf6\x36\x90\xe1\xff\x00\xbd\xb9\xbe\x7c\x8b\x4b\xd4\xae\x82\xe3\x29\xb1\x64\x45\x4c\x97\x1f\x0b\xab\xb9\xd8\x74\xf9\x41\x94\x3a\xe5\x48\xa9\x8a\x58\x69\x03\x09\x97\x90\xb6\x0b\xa9\x30\x96\x08\x0a\x85\xd1\xd7\xb8\xc1\x56\x03\x3b\x1a\x6c\x39\xd5\xf2\x94\x3b\x95\x1d\x44\x33\x62\x0c\x5a\x4b\x1d\x78\x26\x19\x98\xb6\x6b\x73\xa7\xf8\x57\x6a\xf6\x02\xb7\x62\x9b\x0b\xd7\x48\xa0\x91\xaa\x78\x5a\x16\x16\xf9\x4a\x80\x35\x47\x0c\x38\xf4\x37\x6e\xec\x17\xd7\x76\x49\x32\x9b\x8c\x92\x64\xaf\x9b\x24\x29\xfb\xda\x65\xd3\x81\xee\xe6\x13\x64\x4a\xd6\x96\xb9\x9f\xae\xb3\x8b\x2a\xbc\x26\xcf\x4a\x1a\xbb\xd1\x2e\x4f\xe7\x03\xce\x2b\x3b\x2d\x0f\xee\x14\x3d\x1e\xec\x21\x4e\x17\x81\x0f\xf2\x74\x8c\x35\x73\x2f\xe0\xc7\x3f\x72\xab\xf2\x28\x9d\x78\x2e\xb5\xfd\xf4\xf1\xc3\x68\x49\xd5\x98\x31\xed\x45\x8e\x80\x64\x39\xec\x1f\xaf\x44\x92\x5c\x83\x1d\x5b\xeb\xbe\xff\x3e\xb4\x09\xee\x23\x3c\x13\x4c\x49\x2e\xec\xc0\x23\xc1\x18\x8c\xee\xd1\x2e\xec\x8f\x03\xb7\x7f\x7c\x1d\x77\x81\x6c\x10\xcf\xc4\xc3\xbc\xcc\x76\x38\xa1\x11\xf9\x2d\xac\x7d\x2e\x6a\x79\x17\x41\xd8\xc4\xc7\x08\x6a\x79\x17\x41\xd8\x34\xc7\x08\x6a\xb9\x27\x88\xca\x71\x0b\x46\xe6\x9a\x42\x54\x90\x05\xd0\x5c\x73\xfb\x78\xad\x65\xae\xce\xf5\x42\xac\x1c\x74\xc4\x5c\x4b\x05\xda\x72\x88\x67\xc7\x49\x0a\xd5\x46\xc3\x54\xad\x8b\xaa\xcd\xde\x0f\x11\x91\x91\x54\x6c\x8a\x52\xbb\x82\x05\x3a\xc8\xc7\x9b\x2a\x67\xd5\x4a\x2a\x33\xcf\x69\xa9\xf2\x75\xbc\xd2\x72\x5b\x16\x1f\xfb\x5e\xf0\xef\x96\xb2\xf9\x66\xc2\x99\x4e\x7d\xb4\x78\x38\x28\x7e\xdf\x0f\x71\x99\xac\xfd\xcf\x7d\xe4\x91\x9b\x92\x94\x45\x49\xf6\x73\x13\x00\x76\x1d\x9b\xe4\x5c\x52\x6f\xa7\xee\x63\x7a\x19\x2a\x3f\x2b\xa9\x11\xe4\x65\xc9\x2d\x70\x29\x33\x51\x38\xd5\xde\x3b\x19\x52\x3d\x2e\x67\xe3\x39\x0c\xd6\x73\x82\x39\x76\x08\xd7\x9e\xb5\x84\x07\x87\xca\x4c\x54\xc6\x26\xfe\x1c\x89\xb0\xd1\x51\xd6\x89\x4b\x19\x08\xcb\xd7\x1c\x74\x6c\xd8\xc7\xb3\xb0\x84\xfe\xb9\xd9\x0f\x53\x03\x7e\x53\x8f\x60\x7b\xf2\xfb\x9d\xb5\x6a\xa1\xc2\xd2\x37\x80\x33\xb1\x71\xd7\x1f\x7c\x7c\xd5\x3b\xf9\x77\x62\xdc\x7d\x26\x5e\x07\xed\x1d\xd0\x01\x89\xd7\x50\x7b\xf7\x44\xb0\x78\x7c\x22\x49\xbe\xca\x38\xcd\x1e\xc7\xd4\xad\x15\xc3\x57\x59\xe1\xef\x9a\x64\xa6\xd9\x77\xfb\xf2\x55\xdd\xb2\x51\x0d\x22\x77\x86\x44\x73\x5f\x4c\x7c\x98\xa7\x68\xf3\xb8\xd5\x76\xdf\xee\xd4\x5e\xf5\xb9\xeb\xb9\xdb\x23\x08\xe6\x2f\x8c\xff\x03\x00\x00\xff\xff\xde\x67\x65\x1d\x48\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2632, mode: os.FileMode(420), modTime: time.Unix(1443527400, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1443527400, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

