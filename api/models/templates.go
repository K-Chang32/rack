// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x6f\x73\xdb\xb8\xd1\x7f\xef\x4f\x81\xe1\xe4\xc5\xf3\xdc\xc8\x8a\x9d\xcc\xa5\xad\xa6\xed\x8c\x23\x3b\x89\x1a\xdb\x71\x25\x27\x37\x6d\xc6\x73\x43\x53\x90\xc4\x8a\x22\x78\x04\xe8\x8b\xe2\xd1\x77\xef\x02\x20\x48\xfc\x15\x65\xd9\xce\xb4\xbd\x4b\x1c\x89\x58\x02\x8b\xdd\xc5\xee\x6f\xb1\xeb\xfb\x7b\x34\xc5\xb3\x34\xc7\x28\x8a\x8b\x22\x42\x9b\xcd\x01\x42\xf7\xf0\x17\xa1\xe8\xe4\x97\xc9\x35\x5e\x15\x59\xcc\xf0\x3b\x52\xae\x62\xf6\x05\x97\x34\x25\x79\x84\x06\x28\x7a\x75\x74\x7c\x74\x78\xf4\x27\xf8\x13\xf5\x24\xf9\x90\xe4\xd3\x94\xc1\x38\x8d\x06\xf5\x14\x30\xd5\x3d\x62\xf5\x1c\x28\xba\x8d\xb3\x38\x4f\x70\x79\x98\xb4\xa4\xa8\x2f\xd7\x74\x88\x8b\x92\x24\x98\xd2\x9d\x68\x4b\x3c\x4f\x29\x2b\xd7\x21\xe2\xe8\xaa\x4c\xef\x80\x92\x33\x86\xa2\x77\xf9\x60\x70\xf6\x5b\x15\x67\x9c\xd1\xaf\xfc\xc9\x18\xcf\xe0\x63\x43\x85\x36\x3d\x14\xfd\x03\xc3\x1c\x37\x48\x4e\xb1\xa9\xf7\x78\x15\x97\xf1\x0a\x33\x90\x03\x17\xc2\xf6\x4d\x16\x9c\x76\x87\x0d\x1a\x74\x8a\xe1\x61\x56\x51\x58\x46\x93\x24\x3c\xbc\x5e\x17\x58\x08\x7f\xc2\xca\x34\x9f\xd7\x82\x17\x43\xa7\x78\x16\x57\x19\x13\xa3\xe6\x73\x9a\x94\x69\xc1\x94\xda\xa2\x7a\x68\xd3\x6b\x56\x2a\x2a\xcf\x2a\x40\x7a\x59\xad\x6e\x81\x03\xcf\x22\x42\xfd\x47\xa1\x65\x60\x74\x78\xf5\x19\xd1\x45\x5c\x62\x8a\xc8\x0c\xe1\x38\x59\xa0\x7a\xb7\xee\xfa\x67\xf9\x5d\x5a\x92\x7c\x85\x73\xe6\xe7\x23\xbc\xd9\x2d\x7b\xf5\x6e\xf5\x23\x5e\x3f\xf7\x12\x9a\xa1\xed\xb6\x8c\x29\xb7\x12\x73\xd3\x48\x73\x50\x7d\x1e\x67\x28\x23\xf1\x14\x29\x83\xa2\xf0\x1c\xc4\x28\xe6\x47\xb4\xba\xcd\x31\xa3\x01\x96\x2f\x89\x3e\x70\x92\x65\xe4\x77\x3c\xfd\x12\x67\x15\x96\x26\x2f\x8c\xbb\x27\xe8\xd0\x8d\xb3\x87\x31\xce\x70\x4c\x7d\x7b\x78\x6a\xdb\x1b\xe3\x82\xd0\x94\x91\xd2\xa7\x97\xc7\x2d\x36\x21\x55\x99\x60\x94\x90\x29\x46\x65\xbb\x8c\xc3\xc2\xa4\x16\xa4\x7f\xfd\x73\x70\x2b\x7f\x06\x3f\x08\x0e\x63\xf8\x6a\x30\x90\xc4\x83\xc1\x68\xfa\xd7\x7d\x78\xfa\x72\x35\x54\x8a\x43\x33\x52\x22\xb6\x48\x29\xe2\x6e\x37\xc4\x55\xd8\x9a\x9e\x87\x39\xcb\xba\x3a\x98\x54\xe1\xc0\xe0\xce\xb2\xe8\xff\x1b\x9f\xfd\xfd\xf3\x68\x7c\x76\xfa\xff\xe8\x3c\x5e\xdd\x4e\x63\x34\x04\xc7\x46\x56\xd7\xa4\x48\x13\xf4\x21\xce\xa7\x19\x2e\x51\x6d\x71\x48\xcd\xa8\xb1\x79\x91\xe6\xe7\x38\x9f\xb3\x85\x60\xf2\x58\x1f\xb2\x8e\x95\xcb\xdf\xd5\x30\x20\xb9\x56\x68\x40\xc3\x25\xb6\xaf\xc0\xbc\x02\x32\x22\xc6\x18\x53\x61\x89\xba\x85\x45\x9a\x0c\xc6\x24\x0b\x78\x0b\xc1\xe4\xe8\xe4\x62\x30\x10\x34\x1a\x27\x57\x25\x29\x70\xc9\x52\x6c\x9a\x2d\x3f\xea\x94\x56\x2b\xcc\xe9\xaf\x48\x96\x26\xeb\x53\x92\x54\x8e\x67\xb5\x94\xc7\x43\xf9\xab\x43\x88\xe6\xc7\x7f\xd0\x16\x91\x66\xc8\xc0\x1a\xea\xf7\xbf\x1a\x43\xc8\x9a\x4f\x90\x9f\xcd\x66\x38\x11\x0e\x48\xb8\x1c\x6b\xb6\x9a\xf5\x34\x4f\xd2\x22\xce\x64\x28\x9e\xe0\xf2\x2e\x4d\xb0\x74\x4a\x99\x30\x90\x7e\xbc\x8a\xbf\x93\x3c\xfe\x9d\xf6\x13\xb2\x12\x21\xd8\x33\xcf\x49\x52\x5b\x18\xbc\x47\x19\x1d\xb4\x1b\x6f\x3d\x9a\xfa\x6f\x63\x7c\xd7\x47\x8d\x99\x21\xb8\x83\x95\x01\xf3\x2f\x23\xf3\x31\x97\xa4\x94\xb5\x29\x03\x5b\x02\x92\x72\x7d\x09\x08\x41\xc8\x60\xba\x4a\x73\x0e\x4b\x62\xf0\x3c\x8e\x2c\xa2\x0e\x05\x09\x9a\x5d\x94\x24\x08\x0d\x45\x71\xc1\x3a\xaa\xd0\x44\x16\xfd\xc4\xbf\x2a\xc3\x94\x0f\xd0\xa6\x43\x6c\xfa\xb7\x96\x72\xe3\xc2\x89\xd6\xb4\xb7\x98\xb5\xf4\x05\x83\xc1\xbb\x2a\x97\x5c\xed\x64\xdd\x43\x70\xe6\xae\x25\x4f\x5e\xbf\xad\x92\x25\x66\x2d\xb8\xfb\x1b\x49\x6b\xd3\x38\x84\x9d\xc2\x3f\x00\x0b\xef\xc8\x37\xf8\xdc\x62\x3d\xc1\xc6\x18\x70\x23\x3f\xcd\xb0\x79\xd7\xce\x60\xe2\x1a\x30\xd8\xb3\xca\x49\x4b\xe9\xb4\x5e\x1a\xd3\x36\x10\x99\x43\xc8\x97\x33\x01\x9b\xe1\x7b\xff\x7b\x5a\x44\x72\x91\xa0\xf9\xd5\xce\x90\xcf\x52\x9f\x04\xfc\x4d\xe2\x00\xd3\x1e\x2f\xf0\x0a\x22\xd9\x24\xfd\x2e\xc4\x79\xfc\xea\x8f\xe6\xb0\x72\x28\x92\xe9\xf7\x98\x9d\x30\x69\x15\x8e\xd7\xe1\x36\x51\xe6\xce\x09\x8b\xc6\x55\xce\x52\x69\xc3\x39\x48\xfc\x5f\xd4\x5c\xe0\x1a\xc6\x48\x25\x6c\xeb\xf5\x51\x14\x36\x05\x3f\x2a\x2e\x1b\x7f\xd8\x09\x8c\x1f\x40\x4a\xa5\x1f\xd9\x25\x45\xb0\x67\xf5\x11\x53\x9c\x54\x65\xca\xd6\x51\x60\x32\xca\x64\x9a\x60\xba\xfa\x4f\x15\x2b\x2a\xd6\x9d\xfd\x90\x9a\xae\x73\x57\x9d\x84\xcd\xa6\x4c\xca\x06\x45\x60\xc6\x20\x32\x5a\xe0\x46\xe0\x40\x69\x21\xb5\xd1\x36\x74\xad\x12\x0f\xd4\xcf\xcd\x01\xac\x88\xf3\xa9\x98\x57\xcb\x16\x7d\xe9\x99\x4c\x1e\xef\x51\x19\xe7\x73\x8c\x5e\x2c\xd1\xe0\x2f\xa8\x7f\x96\x03\x83\xdc\x27\x52\xb5\x89\xe8\x2d\x08\x62\x09\x74\x55\x01\x07\x9d\xd3\x6d\x36\x6d\x20\x70\x13\x34\x7e\xde\xa2\xc6\x4c\x5b\x76\xb6\x33\xa6\xd2\x2a\x8b\x29\x2c\x98\x6a\x58\x69\xb9\xc0\x7d\xce\x24\x0c\xc8\xf3\xa5\x87\xeb\x40\x46\x64\xe4\x43\x3f\xbf\xd1\x9f\x1b\x18\xe8\xe2\x2d\xcf\x82\xc6\x27\x17\x88\x11\xc0\xa2\xdc\x56\x71\x64\x58\x8e\x87\x0b\x98\x23\x2d\xf1\x74\x48\x2a\x23\x38\xb4\x18\x26\xc4\x8c\x09\x93\x1c\xd4\x72\xbd\xc0\x28\x17\xaf\x72\xa6\xd2\x1c\x4c\x19\x4e\xbb\x70\x52\x22\x59\x63\x30\x5e\x8b\x90\xb3\x0b\x86\x06\x28\x1a\x3c\x13\x5a\x62\x5c\xa0\xb2\xca\x73\xb0\x14\x44\x72\xb4\x86\x53\x84\x92\x3a\x4d\x6d\x77\xb3\xab\x7a\x1a\x8b\x15\x9a\x88\x3e\xc2\x20\x4d\x5b\x4b\xf5\x58\xa9\x22\x91\x66\xc9\xd7\x8a\xce\xc9\xfc\x7d\x49\xaa\x62\xdb\x6b\x0d\x8d\x7a\x6f\x3b\x5f\x9a\x7b\x08\x70\x66\x04\xb2\x7a\x14\xd0\x37\x83\xdc\x6d\xa5\xee\x42\xbc\x31\x2c\x9a\x40\x4a\xdc\x68\xf4\xb8\x3d\x62\x81\xbd\x98\x11\x93\xcc\xa9\xf8\x29\x89\x76\xd9\x4a\xeb\x14\xd5\x19\x78\xb1\x8a\xf3\x74\x86\x29\xd3\x0e\x01\x3c\x4e\x67\xa8\xff\x21\x86\x6c\x43\xbc\xd7\x1e\xd4\xd0\xa9\xf1\x5b\xec\xd9\x70\x72\x1d\xd3\xe5\x29\xe7\x22\x65\x9e\xc4\xa0\x00\x5e\xe9\x27\x11\x43\x0d\x98\xd0\x6b\x70\xa0\x08\x4b\x37\x1e\x88\x2f\xc9\x39\x66\xb7\xd7\xd0\x88\x35\xb4\x74\xdc\x3f\xda\x0d\x52\xd4\x0b\x5f\x93\x25\xce\x3b\xa3\x66\x30\x62\xd6\x90\x2f\x00\x3f\x2c\xd0\x01\x58\x2d\x59\x8a\x37\x04\x48\xe0\x6a\x69\x64\x18\xb9\x40\x44\x4f\xc7\x9b\x89\xd4\x33\x8b\xd4\xba\x4b\x69\xc8\xf5\xe7\xd6\x2b\x0d\xc4\x51\xa7\x0c\xaf\x6d\x12\x2e\xf1\xfa\xaa\x4c\x0f\x3e\x98\x3b\xf6\x5f\x19\x0c\xca\xb0\xb3\x15\x16\xfa\xed\x45\xf3\xfa\x01\x43\xd1\xf8\x90\x86\x0a\xef\x83\xa9\xbe\xad\x63\x69\x6b\x91\xed\x3a\x8d\x91\xf7\x15\x95\x82\xba\x62\x61\x4d\xd8\x3d\x73\xf6\xfa\x28\x69\xb3\x19\xba\xf7\x98\x8d\xb0\xd7\xf6\x79\x87\xe5\xaa\xdd\xfe\x47\x98\xac\x76\xc1\xd8\xe8\x5e\x3d\xb3\x48\xed\x50\xd4\xd0\x77\x85\xad\x1f\x79\x4a\x5c\xd7\xb3\x8d\x4d\xd7\x8f\xd8\x87\xae\x41\xd1\x0d\x46\x6a\x35\x6e\xd1\x9e\x93\x78\xaa\x4c\xcd\x93\x25\xb6\x4e\xb4\x7f\x45\x4a\x76\x11\x17\x05\x07\x5b\xb6\xe9\x22\x57\x30\x03\x4b\x30\x0f\x32\x6e\x8f\xd8\xe4\x83\xfe\x90\xe4\x2c\x86\x48\x51\xfa\x45\xe9\x3f\x0b\xc8\x56\xd0\x25\x91\xb1\x76\xb7\xcc\x50\x9f\xb2\x0b\x22\x78\xcb\x04\x26\x8c\x6b\x76\xaf\xc7\xaa\x17\xea\x45\x23\x58\xb5\xef\xf8\xa5\x6f\xa3\x51\x35\x49\xbf\x0e\x87\xb5\xf0\xf8\xcb\x5c\x78\x9a\xe7\x19\xf2\xf3\x39\x4b\x93\xee\xc2\xc2\x63\x67\x17\xba\x34\xce\x30\xd8\x23\xa4\x28\x78\x9f\x89\x9f\x81\x57\xc9\x8c\x59\x37\x79\x84\xde\xfd\xd0\xfd\x29\x75\xbe\xcf\x26\xd5\xc7\xbd\xae\xaa\x6d\x1d\x3c\xe8\x9a\xfc\x09\x8c\xf3\xc1\x0c\x3f\x3f\x87\x1f\x08\xf5\x55\x7c\x76\x92\x65\x9a\x4f\xf1\x37\x6d\xb1\x31\x64\x28\x64\x45\x7f\xb0\x8c\x6b\xb3\xdf\x67\x0f\x66\x85\xc6\x61\x6f\xdf\xea\xcd\x5e\xc7\xcd\x4c\xc5\xf6\x39\x6f\x91\x22\x6d\xa4\x68\x09\xcf\xd2\xb5\x9e\xa6\xd9\xe0\x85\xcb\xd8\x88\x69\x32\x70\x9d\x5e\x4e\x24\x1a\xb0\x4a\xb2\x3f\xf0\xa8\xbb\xb9\xe5\xa3\xe6\xde\x8a\x92\x1f\x3e\x9f\x42\x57\x1e\x7e\x35\xb5\xf5\x75\xb0\x52\x4f\xfa\x04\x26\x64\x67\xcd\x7b\x19\x91\x47\xf3\x93\xfa\x22\xce\xcc\x8c\xed\xdc\x58\x96\xbf\x0c\x52\xad\x20\xeb\xc5\xd1\x91\x20\x33\x2f\x6a\x1c\xfc\x85\x76\x00\xa6\x87\xb7\x8d\x3e\x2d\x24\x15\x19\x1c\x8d\xf2\x79\xc9\xeb\xdf\x4e\x4e\xb3\xd5\x7a\x6b\x2a\x0b\x28\x46\xc3\x74\x5a\x8e\xb8\x3c\xa2\xa3\xbe\xf8\xff\xe5\x91\x5b\x60\x18\x15\xb0\x77\x46\x12\xc2\x6b\x2d\x11\x4b\x0a\x97\xe4\x5d\x49\x56\x7c\xe1\xa7\x34\x6a\x67\x91\x6b\xf2\xd4\x4b\x18\x2b\x6c\xba\xb2\xb8\x6e\xdc\xaa\xe7\x6d\x5f\x8a\x64\x34\x35\x98\xe5\x65\x44\xfb\x62\xb4\x17\xb4\xd8\xb0\x91\x66\x31\x65\x69\xd2\x9e\x3f\xd0\x34\xbf\xd0\x69\x8f\x63\xa7\xd1\xca\x0c\x18\xff\x86\xfa\x93\x64\x81\x61\xb9\x48\x75\x0a\x44\x56\xe2\x2a\xc7\x6b\x51\x2b\x6a\x2b\xe3\xd5\x4b\xdf\xd2\xf2\x47\x33\x69\xf7\xaa\xec\xdc\x0b\xe0\x7f\xab\x3a\xed\xa4\x0f\x36\xa1\x95\x23\xe8\xf4\x5c\x61\x19\xc5\x36\xfb\x3a\x67\xce\x5c\xe6\xdb\xa6\xba\x79\x17\x52\x8e\x45\x4d\xe9\xb4\x84\x24\x07\x84\x2c\x0b\x6d\x72\xae\xb3\x3c\xbe\xcd\x30\xd7\x2f\x2b\x2b\xdc\xd3\x8b\x19\x6f\x8e\x8c\xc3\xdb\xce\xa3\xdf\xa2\xc3\xa9\x9a\x66\xb8\x7d\xe9\xf5\x9b\x23\xeb\xb5\x92\x50\xfa\x4f\x92\x63\xb5\x44\x3b\xf4\x01\xc7\x19\x5b\x0c\x17\x38\x59\xda\x29\xbd\x1c\x5a\x5f\x2f\xc0\x45\x2c\x48\x36\x15\x37\xca\xa6\xb2\x46\x5c\xd3\x77\xa2\x6e\xfa\xb3\x95\xf8\x96\x73\x7f\xf1\x4b\xa6\x8f\xd1\xf5\xf0\xca\x28\x51\x85\x62\xb4\x3a\x73\xef\xd2\x92\x32\xfe\x45\xc5\x6d\x5f\x79\x4c\x13\xdc\x6b\xe3\xf9\xe7\x7c\xe1\xdd\x4c\x9b\x18\x6a\x22\xe1\x1d\x0c\x38\x77\xb3\xe6\x1d\xdd\xa2\x69\xb5\x4f\x92\xc7\xd9\xde\xcb\x53\x94\xd5\xbd\xaa\x90\xad\x4b\xa2\x9f\xea\xe7\xf6\xaf\xc2\x36\xf8\x2d\x7e\x82\x77\xe0\xac\x21\x7d\x0a\xae\x6a\xeb\xb0\x56\x71\x38\xb4\xf4\xf4\x88\xcc\xd5\xdd\x90\xab\x1f\x4b\x43\x93\xc9\xb9\xe7\xb5\x1f\xae\xa3\x80\x96\x82\xdc\x3d\x87\x9e\xbc\x0b\x01\x07\x9a\xfd\x5b\xa1\xef\xf1\xf7\x16\xce\x92\x1e\x2e\xfe\xcb\x75\xe8\x3f\x69\xff\xd3\x3a\xb4\x9e\xdc\xd8\x2d\x36\x4f\x0d\xca\xce\xdf\x0e\x09\x59\xa6\x78\x02\x00\x6a\xc9\x2b\x6e\xb4\x09\xea\x5f\xef\xed\xbe\x9b\x78\x26\x2e\x75\x79\x19\xc3\x98\xc3\x4a\x7c\x64\x62\xe4\xcb\x87\x42\x10\xde\x73\x53\xb6\x3d\x5f\xd1\x9a\x6a\x34\xdc\xd8\x95\x54\x79\x9b\x99\x65\x2d\x52\xf6\xab\x7c\x88\xe9\xb8\xa6\xe9\xb8\xcb\x33\x9b\x5c\x00\xee\x54\xf4\x10\x03\x0c\x3d\x3c\x86\x6c\x25\x58\x3f\xf4\xb5\x4a\xb4\xeb\xf3\x11\x4f\xdf\xa6\xa7\xe0\x31\xd6\xc8\x6a\xc0\xdc\xf4\x88\xcb\x22\x96\xbd\x9b\x9a\xca\x5b\x15\x09\xd5\x54\x1f\x5b\x0d\xd1\xca\x12\xa1\x34\xef\x40\x69\xb0\x5b\x64\x56\x59\x5b\xed\x4c\x9e\xc9\x07\xc9\xc0\xb9\x6c\x10\x6c\x9d\x24\x09\x2f\xad\xc0\x7c\x5a\xe9\x78\x9b\x5a\x1e\xbc\x9a\x2d\x3e\xcf\xe4\x3d\xbd\x73\x57\xbf\x95\x09\xca\xc7\x6a\xa8\x31\xaa\x29\xfe\x7a\xb7\xdd\xf8\x18\x50\xff\x4e\x0d\x8f\xc1\x3e\x46\xab\x93\xac\x6d\x2a\xb4\x73\x58\xab\xc5\xd0\xf4\x76\x56\xdb\xd8\xf6\x2e\x48\xb3\x03\xd2\x5e\x47\xeb\x87\x74\xb1\x1b\x4e\xa8\xd5\x1c\x69\xfb\x61\x33\x31\x3e\xf0\x7d\xbe\xf1\x57\x1f\xb5\xf6\x42\xe7\x56\xca\xed\x8b\xf4\xf7\x44\x1a\x29\x8d\xe9\x93\x75\x7d\xbb\xcd\x95\x5b\xda\x54\x9f\xbe\x03\x35\xa8\x64\x31\x8a\x65\x96\xce\x1b\xef\x6f\x9b\x2c\x5d\x5e\x13\xdd\xe2\x9f\xfc\x71\x3e\xf0\x8e\xf4\x09\xb8\x54\x30\x80\xf2\xdb\x16\x6f\xbe\xdf\x3d\xdb\xd8\x9e\xeb\x97\x94\x2d\x76\x98\x2b\x79\xd5\xc9\x3c\x90\x9c\x54\x6c\x41\xca\xf4\x3b\xf6\xde\x58\x39\x6f\xdd\x78\xa4\xaa\x75\x93\x7a\xe5\xfa\x93\x67\x1a\x3b\x6f\x38\x08\x8d\xb6\x23\xea\xd3\x4d\xb7\x4b\xd6\xdb\x13\x78\xac\xdd\x96\x2c\xf6\x9b\xf0\xdd\x56\xe8\x6b\xa7\xa4\x2c\x98\x07\x7b\xb3\x6f\x20\x1a\xad\xe2\x79\x33\x26\xbe\x68\x83\x43\xb2\x5a\xc5\xf9\x54\xa2\x8c\x3b\xee\x5e\x79\xe1\x55\x3c\x93\x95\x81\x06\x68\x44\x6d\xc3\x99\x27\x47\x37\x9b\xd2\x9a\x9b\x27\xff\x6f\xcd\xb4\xb5\xe6\x25\x5e\xf7\xd0\x0b\xb9\xae\xec\xc2\xbb\x83\x34\xda\xb8\x29\xe1\x17\xb1\x40\x26\xef\xac\xc4\x37\x49\xae\xe5\x59\x36\x72\x0b\xcf\x7f\x9e\xe6\xcb\x2f\x71\x49\xc3\x2b\xe8\x0b\x84\xe6\x8f\x3e\x8e\x2e\xcf\x26\xa3\x49\xe4\xef\xfb\x6a\xdc\xcf\xf9\xa7\xf7\xbf\xbe\x1f\x7f\xfa\x7c\x15\x05\x3a\xbd\x5a\x47\x35\xfe\x34\x3c\x9b\x4c\x6c\x0d\xb6\x68\x8c\xbb\x41\x92\x81\xf7\xd1\x7d\x59\x7b\xff\x70\xc1\xa3\x2d\xbf\x33\xaa\x89\xec\xfd\xf5\xb7\x8a\x4b\xb2\x86\x02\x28\xb7\x3e\x47\xca\x39\x1a\x0c\xec\xf6\xa6\x7e\x3b\x62\xb2\xef\x74\x6c\x75\x5f\xa9\xf8\xef\x8f\xbc\x98\xfd\xde\xed\xa8\xd8\x2d\x65\x71\xfb\x0f\xda\xc0\xa4\x83\xb2\x3d\x25\xc9\x6f\x24\xd3\x0c\xcf\xc5\x0d\x9f\x58\xab\x7d\x52\x2f\x26\x21\x78\x70\x3a\xf0\x2c\x21\x5c\xae\x37\xfd\xba\xad\xb5\x26\x7a\x99\xbc\x1e\x0c\xea\xae\xf4\x9a\xb5\x53\x9c\x61\x1e\x78\x9a\xc4\x05\x38\xe0\x52\xe8\x80\x37\x09\x4f\xd4\xb8\xc0\x4a\x99\x6c\xda\x57\xb3\xd1\x75\x3c\xb7\xa2\xb0\xea\xe9\x8a\xe8\x1a\x42\xc6\x8a\xa3\x35\x05\xef\x54\x23\xbc\x71\x87\xda\xd0\xf3\xdf\x61\xe9\x05\x91\xa7\x0e\x88\x7d\x7e\x58\x93\xda\xbf\x03\x00\x00\xff\xff\xdc\x89\xb1\xd1\x55\x3a\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14933, mode: os.FileMode(420), modTime: time.Unix(1455916277, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6d\x6f\xda\x3a\x14\xfe\xce\xaf\xb0\xfc\xe9\x5e\x89\xcb\xa5\x54\xaa\xb4\x68\x9a\x44\x81\x56\x91\xd6\x0e\x15\xd6\x49\x9b\xfa\xc1\x24\x07\x64\xcd\xd8\x9e\xed\x74\xa2\x15\xff\x7d\xc7\x21\x09\x31\x09\xf4\x45\x5a\x5f\x50\xc8\x39\xcf\x39\xcf\x79\xb5\x9f\x9f\x49\x0a\x4b\x2e\x81\x50\x0b\xe6\x91\x27\x40\xc9\x76\xdb\x21\xe4\x19\xff\x09\xa1\xc3\x6f\xb3\x39\xac\xb5\x60\x0e\xae\x94\x59\x33\x77\x0f\xc6\x72\x25\x29\x89\x08\x1d\xf4\xcf\xfa\xff\xf5\x3f\xe0\x1f\xed\xee\xd4\xa7\xcc\xb0\x35\x38\xd4\xa1\x51\x61\xc2\x1b\x11\x42\x25\x68\x21\x9d\x39\x65\xd8\x0a\x6a\x32\x94\xce\x37\x1a\x72\x73\xb7\xd9\x7a\x01\xa6\x30\x95\x8b\xc6\xb0\x64\x99\x70\xb9\xf4\xac\x1f\x4a\x6c\x62\xb8\x76\x25\x95\xca\x05\xb1\x3b\x1f\xc4\xf2\x27\x20\xff\x5c\x5f\xfe\x4b\x0b\xd4\xb6\x84\xd3\x31\x73\x6c\xc1\xec\x31\x1e\x33\x67\xb8\x5c\x1d\xe3\xc1\xb4\x3e\x45\xa4\x50\x25\x69\xe1\x83\x48\x4c\x48\x93\x42\x2c\xad\x63\x32\x81\xdc\xe9\x7b\x68\xa4\x8b\x9e\x1b\xf4\xd6\x3c\x31\xea\x14\x9d\xd2\x0f\x49\x04\xb3\x96\x2c\x95\xa9\x31\x53\x29\xd8\x26\xb5\x1b\x74\xc1\x87\xdf\xdf\xc5\x6a\xc9\x04\xa6\xf5\x04\x9f\xdc\xb8\x16\x40\xd8\x23\xe3\x82\x2d\xb8\xe0\x6e\x43\x9e\x94\x6c\xc9\xd1\x14\x19\xff\x56\x26\x7d\x03\x93\xd0\xd9\x0c\x3b\x1a\x0c\xd1\xa5\x9d\x86\x87\x59\xb6\x90\xe0\x6c\x8b\x03\x44\x7f\xe6\xd6\x7d\xc4\xfe\x8f\xa2\xc9\x68\x10\x45\x3b\xdd\x28\x8a\xd3\x4f\xc7\x7c\x22\xe8\x7e\x3a\x22\xb6\xb0\xda\x70\xf7\x15\x47\x2c\x6f\x87\xbf\xd0\x77\x45\xac\x59\xe9\xa2\xe1\xfc\x5e\x27\xed\x71\xee\x43\x44\xf2\x3e\xbe\xd3\xe1\x55\x96\x3b\x35\xfb\xf4\x4b\xe6\x74\x16\x64\x92\x4e\x95\x71\xe7\xe7\xfd\x8b\x79\xa2\x87\x69\x6a\xbc\x08\x0d\x30\x91\xc1\xee\xf1\x4a\x46\xd1\x35\xb8\xa1\x73\xf8\xfd\xc7\xbe\x55\x69\x97\xd0\x89\x4c\xb5\xe2\xd2\xf5\x3c\x12\xac\xa5\xe4\x81\x6c\xeb\xad\xb1\xb7\xed\x1f\xdf\x67\x3b\x47\x1e\x18\x9e\xc8\xc7\x9b\x8d\xfd\x25\xea\x2b\x22\xb0\x7c\x07\x4b\x9f\x88\x4a\xde\x8a\xae\x77\x6e\x1b\xba\x92\xb7\xa2\xeb\x6d\xd2\x86\xae\xe4\x1e\x1d\x54\xe1\x0e\xac\xca\x4c\x02\x41\x1d\x66\x90\x64\x06\xa7\xec\xda\xa8\x4c\xbf\xd4\x02\xa1\x72\xad\x11\xa6\x46\x69\x30\x8e\x43\x38\x2d\x28\xc9\x55\x0f\xfa\x64\xed\xe3\x20\xe5\x89\xd2\xad\xab\x07\x1e\x62\xb9\xca\xcb\x8b\x45\xaa\xe9\x10\x1f\x6c\xac\xd1\xa5\x53\x89\x12\xde\xa0\x4b\xb4\xaf\xdd\x95\x51\xeb\xa2\xe0\xd4\xd7\xdf\xbf\x9b\xab\xc3\x37\x23\x9e\x9a\xd8\x87\x8a\x87\x46\x2f\xff\xfd\xff\xec\x82\x16\xb9\xda\xfd\x3c\x04\x9c\x70\x36\xe2\x34\xc8\xb1\x9f\x96\x1a\x60\x7b\x64\x75\xbc\x94\xd3\xbb\x31\x7e\x8c\x2f\xeb\xca\xaf\xca\x69\x00\x79\x43\x6e\x73\x50\x9c\xda\x20\x96\x72\xcb\x9d\x8c\xa7\x9a\x90\x17\x83\xd9\xcf\xd2\x6b\x22\x69\x3b\xfb\x2b\x66\x0d\xe1\x9e\x50\x91\x86\xd2\xd9\xc8\x1f\x5f\x01\x36\x38\x41\x8f\xe2\xe2\x14\xa4\xe3\x4b\x0e\x26\x74\xec\xe3\x99\x39\x96\xfc\xbc\xdd\x0d\xd2\x01\xfc\xb6\x1a\xbf\xe6\xbc\x77\x8f\x16\xaa\x81\xaa\xd7\xfd\x00\x38\x91\x2b\xbc\x75\x55\xf5\x0c\xeb\x78\xc3\x2c\xde\xa1\xc2\x3d\xd0\x1c\xfe\x23\x90\x70\xf9\x34\x37\x4e\x08\xdb\x1f\xf6\x95\x6e\xf9\xee\x40\x35\x9c\xb2\x40\x92\x2d\x04\x4f\xc4\x66\x98\xe0\xea\xb1\x7c\x21\xf2\xb8\x0e\xef\x02\xbe\x3f\x77\x65\x2e\xbb\x6a\xa5\x07\xa1\x1c\x8f\x97\x60\x3d\xe4\x8b\xa1\x9e\xcf\x60\x3b\xe1\xfa\x7b\x68\x76\x74\xa7\xfc\xdc\x76\xf0\x72\x0b\x32\xf5\xf7\xd9\x3f\x01\x00\x00\xff\xff\x44\x3a\xa6\x8e\xe7\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2791, mode: os.FileMode(420), modTime: time.Unix(1455565419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x6d\x6f\xe2\x38\x10\xfe\xce\xaf\xb0\xfc\xe9\x4e\xe2\x38\xca\xbd\x48\x17\x9d\x56\xa2\x40\xab\x48\xbb\x5d\x54\xd8\xae\xb4\xab\x7e\x30\xf1\x80\xac\x0d\xb6\x65\x3b\x5d\xb5\x15\xff\x7d\xc7\x21\x09\x71\x42\xa0\xa5\x2f\x28\x64\x66\x9e\x79\xe6\xd5\x7e\x7d\x25\x1c\xd6\x42\x02\xa1\x16\xcc\x93\x48\x80\x92\xdd\xae\x47\xc8\x2b\xfe\x13\x42\xc7\x5f\x17\x4b\xd8\xea\x94\x39\xb8\x51\x66\xcb\xdc\x03\x18\x2b\x94\xa4\x24\x22\x74\x34\xbc\x1a\xfe\x31\xfc\x0f\xff\x68\x7f\xaf\x3e\x67\x86\x6d\xc1\xa1\x0e\x8d\x0a\x08\x0f\x92\xa6\x2a\x41\x04\xbe\x70\xca\xb0\x0d\xd4\x64\x28\x5d\x3e\x6b\xc8\xe1\xee\xb2\xed\x0a\x4c\x01\x95\x8b\xa6\xb0\x66\x59\xea\x72\xe9\xd5\x30\x94\xd8\xc4\x08\xed\x4a\x2a\x95\x0b\x62\xf7\x3e\x88\x15\x2f\x40\x7e\xbb\xbd\xfe\x9d\x16\x56\xbb\xd2\x9c\x4e\x99\x63\x2b\x66\xbb\x78\x2c\x9c\x11\x72\xd3\xc5\x83\x69\x7d\x8a\x48\xa1\x4a\x78\xe1\x83\x48\x4c\x48\x9b\x42\x2c\xad\x63\x32\x81\xdc\xe9\x25\x34\xf8\x6a\xe0\x46\x83\xad\x48\x8c\x3a\x45\xa7\xf4\x43\x92\x94\x59\x4b\xd6\xca\xd4\x98\x29\x0e\xb6\x4d\xed\x13\xba\x10\xe3\x6f\x17\xb1\x5a\xb3\x14\xd3\x7a\x82\x4f\x0e\xae\x53\x20\xec\x89\x89\x94\xad\x44\x2a\xdc\x33\x79\x51\xf2\x48\x8e\xe6\xc8\xf8\xa7\x32\xfc\x1d\x4c\x42\x67\x0b\xec\x68\x30\x44\x97\x38\x2d\x0f\x8b\x6c\x25\xc1\xd9\x23\x0e\xd0\xfa\xa3\xb0\xee\x7f\xec\xff\x28\x9a\x4d\x46\x51\xb4\xd7\x8d\xa2\x98\x7f\xe8\xf2\x89\x46\x0f\xf3\x09\xb1\x05\x6a\xcb\xdd\x17\x1c\xb1\xbc\x1d\x2e\x49\xad\x56\xd6\x6d\x0c\x16\xec\x7c\xc0\x59\xe9\xa7\xc5\xe0\x41\x27\xc7\x83\x3d\xc4\x89\x11\xf8\x20\x4f\xc7\x58\x21\xf7\x6a\xf8\xf4\x73\xe6\x74\x16\xa4\x93\xce\x95\x71\xff\xfc\xfd\xd7\x68\x99\xe8\x31\xe7\xc6\x8b\x10\x80\xa5\x19\xec\x1f\x6f\x64\x14\xdd\x82\x1b\x3b\x87\xdf\xbf\x1f\xfa\x95\xf6\x09\x9d\x49\xae\x95\x90\x6e\xe0\x2d\xc1\x5a\x4a\x1e\xc9\xae\xde\x1f\x07\x6c\xff\x78\x19\x76\x6e\xd9\x00\x9e\xc9\xa7\x79\x91\xed\xfa\xaa\x08\xc0\xef\x61\xed\x73\x51\xc9\xbb\x00\xea\x4d\x7c\x0c\xa0\x92\x77\x01\xd4\x9b\xe6\x18\x40\x25\xf7\x00\x41\x39\xee\xc1\xaa\xcc\x24\x10\x14\x64\x01\x49\x66\x70\xe6\x6e\x8d\xca\xf4\xb9\x5e\x08\x95\x6b\x1d\x31\x37\x4a\x83\x71\x02\xc2\xd9\x41\x49\xae\xda\x68\x98\xb2\x75\x49\x79\xc4\xf4\xeb\x16\x81\x93\x58\x6e\xf2\x52\x63\xc1\x6a\x3a\xc4\xc7\x1b\x6b\xf4\xea\x54\xa2\x52\x8f\xe9\x12\xed\xeb\x78\x63\xd4\xb6\x28\x3e\xf5\xbd\xe0\xdf\x2d\x55\xf3\xcd\x44\x70\x13\xfb\x68\xf1\x14\x19\xe4\xbf\x7f\x5e\xfd\x4b\x8b\x74\xed\x7f\x1e\x03\x4e\x38\x27\x31\x0f\xd2\xec\x27\xa7\x66\xb0\xeb\xd8\x25\xe7\xd2\x7a\x3f\xc5\x8f\xe9\x75\x5d\xf9\x4d\x69\x0d\x4c\xde\x97\xde\xdc\x2e\xe6\x36\x08\xa7\xdc\x7c\x27\x43\xaa\x06\xe6\x6c\x3c\x87\xd1\x7a\x4b\x30\xc7\xee\x03\x15\xb3\x96\xf0\x40\xa8\xc8\x44\xe9\x6c\xe2\x8f\xb4\xc0\x36\x38\x55\x3b\xed\x62\x0e\xd2\x89\xb5\x00\x13\x3a\xf6\xf1\x2c\x1c\x4b\x7e\xdc\xed\xc7\xa9\x61\x7e\x57\x0d\x61\x7b\xf6\xfb\x9d\xb5\x6a\x59\xd5\x4b\xdf\x30\x9c\xc9\x0d\xde\xc4\xe8\xf1\x65\xef\x4f\x66\x66\xf1\x6a\x15\x2e\x84\xf6\x16\xe8\x30\x09\x17\x51\x7b\xfb\x84\x66\x87\x3b\x40\xa5\x5b\xbe\x6b\xa8\x86\xb3\x16\x48\xb2\x55\x2a\x92\xf4\x79\x9c\xe0\x0e\xb2\x62\x95\xe6\xa1\x35\xaf\x08\xbe\x45\xf7\x95\x2e\x1b\x6b\xa3\x1b\x40\x78\xe0\x04\x4b\x22\x5f\x0f\xf5\x94\x06\x6b\x0a\xf7\xe0\x63\xbb\xa9\x7b\xe5\xe7\xae\x87\x77\x5e\x90\xdc\x5f\x73\x7f\x05\x00\x00\xff\xff\xa1\xdf\x66\x01\xfe\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2814, mode: os.FileMode(420), modTime: time.Unix(1455565419, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

