// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\xff\x6f\xdb\xba\x11\xff\x3d\x7f\x05\x41\xf4\x87\xad\x70\xdc\xa4\xc5\xeb\x36\x63\x1b\x90\x3a\x69\xeb\x35\x49\x33\xdb\xed\xc3\x56\x04\x0f\x8a\x4c\xdb\x9a\x65\x51\x8f\x94\xf2\xea\x06\xfe\xdf\x77\xfc\x22\xf1\x8b\x28\xcb\xf9\xd2\x62\x7b\x68\x9b\xda\xe2\x89\x3c\xde\x1d\xef\x3e\x77\xbc\xdc\xdd\xa1\x19\x99\x27\x19\x41\x38\xca\x73\x8c\xb6\xdb\x03\x84\xee\xe0\x1f\x42\xf8\xe4\xe7\xc9\x94\xac\xf3\x34\x2a\xc8\x5b\xca\xd6\x51\xf1\x99\x30\x9e\xd0\x0c\xa3\x01\xc2\x2f\x8f\x8e\x8f\x0e\x8f\xfe\x02\x7f\x71\x4f\x91\x0f\x69\x36\x4b\x0a\x18\xe7\x78\xa0\xa7\x80\xa9\xee\x50\xa1\xe7\x40\xf8\x26\x4a\xa3\x2c\x26\xec\x30\x36\xa4\xa8\xaf\xd6\x6c\x10\xe7\x8c\xc6\x84\xf3\xbd\x68\x19\x59\x24\xbc\x60\x9b\x36\x62\xfc\x06\x16\x5e\x0d\xd3\x92\x17\x84\x09\xee\x10\x7e\x9b\x0d\x06\x67\xbf\x96\x51\x2a\xb8\xfd\x22\x9e\x8c\xc9\x1c\x3e\xe2\x8a\x0a\x6d\x7b\x08\x63\x74\x8d\xd4\x24\x5b\xbd\xcb\xab\x88\x45\x6b\x02\x04\x5c\x88\x61\xf7\x36\x73\x41\xbb\xc7\x16\x1d\xba\x8a\x65\x8b\x5b\xfd\x08\x1e\x4e\x37\x39\x91\xe2\x9f\x14\x2c\xc9\x16\x5a\xf4\x72\xe8\x94\xcc\xa3\x32\x2d\xe4\xa8\xfb\x9c\xc7\x2c\xc9\x8b\x4a\x71\x58\x0f\x6d\x7b\xf5\x4a\x79\x19\x58\x05\x48\x2f\xcb\xf5\x0d\x70\x10\x58\x44\x1a\xc0\x51\xdb\x32\x42\x8a\x57\x9f\x10\x5f\x46\x8c\x70\x44\xe7\x88\x44\xf1\x12\xe9\xdd\x36\xd7\x3f\xcb\x6e\x13\x46\xb3\x35\xc9\x8a\x30\x1f\xed\x9b\xdd\xb1\xd7\xe0\x56\x3f\x90\xcd\xf7\x5e\x62\x4c\x52\x12\x71\xf2\x03\xf4\x36\x26\x39\xe5\x49\x41\x59\x68\x4f\x8f\x5b\x6c\x42\x4b\x16\x13\x14\xd3\x19\x41\xcc\x2c\xd3\x60\x61\x52\xde\x64\xa4\xe0\x2d\xeb\x9f\xc3\xa1\xfc\x2b\x78\x11\x38\x69\xc3\x97\x83\x81\x22\x1e\x0c\x46\xb3\xbf\x3f\x84\xa7\xcf\x57\x43\xc4\xd5\x7a\x68\x4e\x19\x2a\x96\x09\x47\xc2\x69\x35\xb8\xaa\xfc\x94\xc3\x95\xa7\xb8\x3f\x8c\xcf\xfe\xf9\x69\x34\x3e\x3b\xfd\x23\x3a\x8f\xd6\x37\xb3\x08\x0d\xe1\xbc\xd1\xf5\x94\xe6\x49\x8c\xde\x47\xd9\x2c\x25\x0c\x69\x65\xa2\x6a\x46\x8b\xbd\x8b\x24\x3b\x27\xd9\xa2\x58\x4a\xe6\x8e\xed\x21\xcf\xa8\x9a\xfc\x5d\x0d\x5b\x24\x66\x84\x05\x34\x42\x52\x0f\x15\x54\x50\x40\x8e\x23\x1b\x13\x2e\x95\x6c\x2b\x0f\x5b\x32\x18\xd3\x34\x64\xc4\x15\x93\xa3\x93\x8b\xc1\x40\xd2\x58\x9c\x5c\x31\x9a\x13\x56\x24\xc4\xb5\x08\x11\x4b\x38\x2f\xd7\x44\xd0\x5f\xd1\x34\x89\x37\xa7\x34\x2e\x1b\x07\xde\x53\x9e\x88\x31\x2f\x0f\x21\xcc\x1c\xff\xc9\x5a\x44\xd9\x5d\x01\x0e\x54\xbf\xff\xc5\x19\x42\xde\x7c\x92\xfc\x6c\x3e\x27\xb1\x3c\xca\x27\x69\x4a\x7f\xf3\x66\xd3\xac\x27\x59\x9c\xe4\x51\xaa\xc2\xc3\x84\xb0\xdb\x24\x26\x32\x36\xe0\x54\x1a\x48\x3f\x5a\x47\xdf\x68\x16\xfd\xc6\xfb\x31\x5d\xcb\xc8\x10\x98\xe7\x24\xd6\x16\x06\xef\xf1\x82\x0f\xcc\xc6\xe1\x0d\x8f\x7c\xeb\x7c\xb7\x47\x9d\x99\x21\xe6\x80\x95\x01\xf3\x2f\xb0\xfb\x58\x48\x52\xc9\xda\x95\x81\x2f\x01\x45\xb9\xb9\x84\xc0\x25\x65\x30\x5b\x27\x99\x88\x97\x11\x1c\xea\x86\x2c\x70\x87\x82\x24\xcd\x3e\x4a\x92\x84\x8e\xa2\x84\x60\x1b\xaa\xb0\x44\x86\x9f\x8b\xaf\x95\x61\xaa\x07\x68\xdb\x21\x36\xfb\x9b\xa1\xdc\x36\xa3\x9c\x31\xed\x1d\x66\xad\x7c\xc1\x60\xf0\xb6\xcc\x14\x57\x7b\x59\xf7\x10\xfc\x64\xd3\x92\x27\xaf\xde\x94\xf1\x8a\x14\x06\x70\xfc\x83\x26\xda\x34\x0e\x61\xa7\xf0\x1f\xe0\x95\x5b\xfa\x15\x3e\x1b\xfc\x21\xd9\x18\x03\xa0\x11\xa7\x19\x36\xdf\xb4\x33\x98\x58\xc7\x31\x7f\x56\x35\x29\x53\x4e\xeb\x85\x33\x6d\x8d\xdd\x04\xac\x79\x31\x97\x78\x0e\xbe\xf7\xbf\x25\x39\x56\x8b\xb4\x9a\x9f\x76\x86\x62\x16\x7d\x12\xc8\x57\x40\x26\x19\x9c\x15\x87\xee\x82\xac\x21\x48\x4c\x92\x6f\x52\x9c\xc7\x2f\xff\xec\x0e\x57\x0e\x45\x31\xfd\x8e\x14\x27\x85\xb2\x8a\x86\xd7\x11\x36\xc1\xb2\xc6\x09\xc3\xe3\x32\x2b\x12\x65\xc3\x19\x48\xfc\x3f\xdc\x5d\x60\x0a\x63\xb4\x94\xb6\xf5\xea\x08\xb7\x9b\x42\x18\xac\xb1\xda\x1f\x76\xe2\xb5\x7b\x90\x72\xe5\x47\xf6\xc1\xae\xfe\xac\x21\x62\x4e\xe2\x92\x25\xc5\x06\xb7\x4c\xc6\xc5\x71\xab\x07\x2b\x57\xff\xb1\x2c\xf2\xb2\xe8\x86\xe5\x54\xd3\x75\xee\xaa\x93\xb0\xde\x94\x4b\x59\xc3\x06\x52\x14\x10\x19\x3d\xdc\xf0\x39\x4a\x4b\x6d\x21\xda\x68\x6b\x3a\xa3\xc4\x83\xea\xe7\xf6\x00\x56\x24\xd9\x4c\xce\x6b\xa5\x31\xa1\xbc\x41\x65\x35\x77\x88\x45\xd9\x82\xa0\x67\x2b\x34\xf8\x1b\xea\x9f\x65\xc0\xa0\xf0\x89\xbc\xda\x84\x4a\x13\x80\xae\xcc\xe1\xa0\x0b\xba\xed\xd6\x04\x82\x66\xd2\x20\xce\x1b\xae\xcd\xd4\xb0\xb3\x9b\xb1\x0a\xed\x7b\x4c\x11\xc9\x54\xcd\x8a\xe1\x82\xf4\x05\x93\x30\xa0\xce\x97\x1d\xae\x5b\x80\xba\x03\xd3\x7f\x7a\x6d\x3f\x77\x30\xd0\xc5\x1b\x01\xce\xc7\x27\x17\xa8\xa0\x00\xf3\x84\xad\x12\xec\x58\x4e\x80\x0b\x98\x23\x61\x64\x36\xa4\xa5\x13\x1c\x0c\x86\x69\x63\xc6\x85\x49\x0d\xd4\x32\x5d\x12\x94\xc9\x57\x05\x53\x49\x06\xa6\x0c\xa7\x5d\x3a\x29\x99\x43\x14\x30\xae\x45\x28\xd8\x05\x43\x03\x80\x0a\x9e\x09\xad\x08\xc9\x11\x2b\xb3\x0c\x2c\x05\xd1\x0c\x6d\xe0\x14\xa1\x58\x67\x4f\x66\x37\xfb\xaa\xa7\xb6\x58\xa9\x09\xfc\x01\x06\x79\x62\x2c\x35\x60\xa5\x15\x89\x32\x4b\xb1\x16\x3e\xa7\x8b\x77\x8c\x96\xf9\xae\xd7\x6a\x9a\xea\xbd\xdd\x7c\x59\xee\xa1\x85\x33\x27\x90\xe9\x51\x40\xdd\x05\x23\xd1\xba\x4a\xd2\x83\x31\x0c\x4f\x20\x53\xab\x35\x7a\x6c\x8e\x58\xcb\x5e\xdc\x88\x49\x17\x5c\xfe\x54\x44\xfb\x6c\xc5\x38\xc5\xea\x0c\x3c\x5b\x47\x59\x32\x27\xbc\xb0\x0e\x01\x3c\x4e\xe6\xa8\xff\x3e\xe2\x57\xea\x3d\x73\x50\xdb\x4e\x4d\xd8\x62\xcf\x86\x93\x69\xc4\x57\xa7\x82\x8b\xa4\x08\x24\x06\x39\xf0\xca\x3f\xca\x18\xea\xc0\x84\x5e\x8d\x03\x65\x58\xba\x0e\x40\x7c\x45\x2e\x30\xbb\xbf\x86\x45\x6c\xa1\xa5\xe3\xfe\xd1\x7e\x90\x42\x2f\x3c\xa5\x2b\x92\x75\x46\xcd\xd6\x88\xa9\x21\x5f\x0b\xfc\xf0\x40\x07\x60\xb5\x78\x25\xdf\x90\x20\x41\xa8\xa5\x96\x21\x6e\x02\x11\x3b\xd3\xad\x27\xaa\x9e\x79\xa4\x5e\x8a\x5f\x93\xdb\xcf\xbd\x57\x6a\x88\x53\x9d\x32\xb2\xf1\x49\x84\xc4\x75\xf9\xc6\x0e\x3e\x44\x38\xf6\x5f\x0a\x18\x54\x61\x67\x27\x2c\x0c\xdb\x8b\xe5\xf5\x5b\x0c\xc5\xe2\x43\x19\x2a\xbc\x0f\xa6\xfa\x46\xc7\x52\x63\x91\x66\x9d\xda\xc8\xfb\x15\x55\x05\x75\xe5\xc2\x96\xb0\x7b\xee\xec\xfa\x28\x59\xb3\x39\xba\x0f\x98\x8d\xb4\x57\xf3\xbc\xc3\x72\xab\xdd\xfe\x4f\x98\xac\x53\xa5\x6b\xd6\xe4\x6c\x52\x3f\x14\xd5\xf4\x5d\x61\xeb\x47\x9e\x92\xa6\xeb\xd9\xc5\x66\xd3\x8f\xf8\x87\xae\x46\xd1\x35\x46\x32\x1a\xf7\x68\xcf\x69\x34\xab\x4c\x2d\x90\x25\x1a\x27\xda\xbf\xa2\xac\xb8\x88\xf2\x5c\x80\x2d\xdf\x74\x51\x53\x30\x03\x4f\x30\xf7\x32\xee\x80\xd8\xd4\x83\xfe\x90\x66\x45\x04\x91\x82\x85\x45\x19\x3e\x0b\xc8\x57\xd0\x25\x55\xb1\x76\xbf\xcc\xd0\x9e\xb2\x0b\x22\x04\xeb\xd7\x2e\x8c\xab\x77\x6f\xc7\xaa\x67\xd5\x8b\x4e\xb0\x32\xef\x84\xa5\xef\xa3\xd1\x6a\x92\xbe\x0e\x87\x5a\x78\xe2\x65\x21\x3c\xcb\xf3\x0c\xc5\xf9\x9c\x27\xb1\xc8\x05\x76\x17\xbb\x1f\x3b\xbb\x29\x92\x9b\x92\xa0\x48\x51\xc8\x43\x26\xfe\x0e\xbc\x2a\x66\x14\x9b\xff\x12\x80\xe3\xfa\x51\x7a\x0f\x43\xf7\xa7\xd4\xf9\x43\x36\x59\x7d\x7c\x50\x15\xd8\xd7\xc1\xbd\x2a\xd0\x4f\x60\x9c\xf7\x66\xf8\xfb\x73\xf8\x9e\xf2\xd0\x45\xc4\x5e\xb2\x4c\xb2\x19\xf9\x6a\x2d\x36\x86\x0c\x85\xae\xf9\x0f\x96\xb1\x36\xfb\x87\xec\xe1\x92\xee\x64\xcf\x1a\x93\xf5\x3b\x32\x93\xce\x56\xe7\xc3\xe2\x88\xf5\xe4\x1c\xb5\xc3\x7d\xcc\x71\x73\x53\xb1\x87\x9c\x37\x5c\x91\xd6\x52\xf4\x84\xe7\xe9\xda\x4e\xd3\x7c\xf0\x22\x64\xec\xc4\x34\x15\xb8\x4e\x2f\x27\x0a\x0d\x78\x37\x85\x3f\xf0\xa8\x37\x73\xcb\x47\xcd\xbd\x13\x25\xdf\x7f\xbe\x0a\x5d\x05\xf8\xb5\xd4\xd6\xb7\xc1\x8a\x9e\xf4\x09\x4c\xc8\xcf\x9a\x1f\x64\x44\x01\xcd\x4f\x74\x21\xce\xcd\x8c\xfd\xdc\x58\x5d\x7b\x39\xa4\xb5\x48\x5b\x70\x34\x96\x64\x6e\xa1\xa6\x81\xbf\xd0\x1e\xc0\xf4\xf0\xa6\xd6\xa7\x87\xa4\xb0\xc3\xd1\x28\x5b\x30\x71\x2d\xdb\xc8\x69\x76\x5a\xaf\xa6\xf2\x80\x22\x1e\x26\x33\x36\x12\xf2\xc0\x47\x7d\xf9\xe7\xc5\x51\xf3\x82\x61\x94\xc3\xde\x0b\x1a\x53\x71\xd7\x82\x8b\x38\x6f\x92\xbc\x65\x74\x2d\x16\x7e\x4a\xa3\x6e\x2c\x32\xa5\x4f\xbd\x84\xb3\xc2\xb6\x2b\x8b\xeb\xc6\xad\x76\xde\xf6\x39\x8f\x47\x33\x87\x59\x71\x8d\xe8\x17\x46\x7b\xad\x16\xdb\x6e\xa4\x69\xc4\x8b\x24\x36\xe7\x0f\x34\x2d\x0a\x3a\xe6\x38\x76\x1b\xad\x75\x0f\x6c\x12\x13\xfd\xcc\x16\x84\x4a\x95\xc9\xaf\xa8\x3f\x89\x97\x04\xf8\xc2\x49\xa6\xaf\x12\xbc\x0c\x57\x8d\x6b\x9d\x54\xd4\x4e\xec\x6c\x8a\x54\xb4\xa0\x64\x44\xde\xdb\x9c\x32\x48\x24\x60\x23\xea\x32\x4b\xf1\x75\x96\x45\x37\x29\x11\x32\x2c\x58\x49\x7a\xf6\x85\xc1\xeb\x23\xe7\x80\x98\x79\xec\x4a\x35\x58\xee\x2c\x25\xe6\xa5\x57\xaf\x8f\xbc\xd7\x18\xe5\xfc\xdf\x34\x23\xd5\x12\x66\xe8\x3d\x89\xd2\x62\x39\x5c\x92\x78\xe5\xa7\xcd\x6a\x68\x33\x5d\xc2\x31\x5c\xd2\x74\x26\xab\xb6\x6e\x56\x3f\x12\x42\xba\x95\x77\x93\x3f\x79\xc9\x25\x5b\x84\x2f\x98\x54\x8a\x86\xa7\xc3\x2b\xe7\x1a\xa8\x2d\x0e\x56\x76\xfd\x36\x61\xbc\x10\x5f\xaa\xd8\x18\xba\x82\xb2\x04\xf7\xca\x79\xfe\x29\x5b\x06\x37\x63\x92\x2f\x4b\x24\xa2\x3b\x80\x64\xcd\xcc\x74\x4f\xd7\xa3\x36\x3c\x9a\xab\xed\x3e\x49\xae\xe4\x7b\x88\xc0\xc5\xa7\xed\xb9\xa4\x6c\x9b\x24\xf6\xc9\xf9\xde\x3e\x4c\xda\x86\xa8\x94\xc7\x64\x0f\xce\x6a\xd2\xa7\xe0\x4a\x5b\x87\xb7\x4a\x83\x43\x4f\x4f\x8f\xc8\x0e\x9b\x1b\x6a\xea\xc7\xd3\xd0\x64\x72\x1e\x78\xed\x87\xeb\xa8\x45\x4b\xad\xdc\x7d\x0f\x3d\x05\x17\x02\x0e\x2c\xfb\xf7\xc2\xcb\xe3\x6b\x03\x8d\x25\x03\x5c\xfc\x9f\xeb\x30\x7c\xd2\x7e\xd7\x3a\xf4\x9e\x5c\xfb\x6d\x2c\x4f\x0d\x7c\xce\xdf\x0c\x29\x5d\x25\x64\x02\x20\x65\x25\x6e\xb5\x78\x1d\xd4\xbf\xdc\xf9\xbd\x2d\xd1\x5c\x16\x4e\xc5\x55\x81\x33\x87\x97\x5c\xa8\xe4\x23\x94\x73\xb4\xc1\xe4\x40\x35\x6a\x77\x4e\x60\x35\xae\x58\xd8\xac\x2b\x71\x09\x76\xb2\xaa\xfb\x3e\xd5\x13\xf2\x3e\xe2\x63\x4d\xd3\x51\x2f\x73\x1b\x49\x00\xee\x94\xfc\x90\x00\xd4\x3b\x3c\x86\x8c\xa0\xf5\x8e\x2e\xd4\x8e\x60\xd6\x17\x23\x81\xb6\xc3\xc0\xa5\xc2\xd8\x22\xd3\xa0\xb4\x6e\x10\x56\x17\x45\xfe\x6e\x34\x55\xf0\xe6\xa1\xed\xde\xf2\xb1\x37\x0e\x56\xe9\xbf\x2d\x95\x3a\xa8\x34\xd8\x2d\x32\xef\xea\xb8\xda\x99\x3a\x93\xf7\x92\x41\x23\xa1\x97\x6c\x9d\xc4\xb1\xb8\xbe\x80\xf9\xac\xeb\xd9\x5d\x6a\xb9\xf7\x6a\xbe\xf8\x02\x93\xf7\xec\xc6\x53\xbb\xf2\xd1\x2a\x1f\xaf\x69\xc5\xb9\xb1\x08\xdf\x29\xfb\xcd\x85\x2d\xea\xdf\xab\xa9\xb0\xb5\x57\xd0\xeb\xd6\x32\x8d\x7b\x7e\x9e\xe8\xb5\xf1\xb9\xde\xce\x6b\xcd\xda\xdd\x69\xe8\x76\x19\xfa\xeb\x58\x3d\x87\x4d\xec\x46\x62\xee\x35\x20\xfa\x7e\xd8\x4d\x3e\x0f\x42\x9f\xaf\xc3\x37\x7c\x56\x0b\x5f\xa3\xf2\xd3\xec\x3d\x0c\xf7\x1d\x3a\x29\x8d\xeb\x93\x6d\x7d\x37\x1b\x18\x77\xb4\x82\x3e\x7d\x97\x67\xab\x92\xe5\x28\x51\x99\x70\x0a\x51\xe1\xa6\xce\x84\x55\x29\xe6\x86\x3c\x0f\xc7\xf9\x96\x77\x94\x4f\x20\xac\x82\x01\x5c\x54\x34\x82\x39\x75\xf7\x6c\x63\x7f\xae\x9f\x93\x62\xb9\xc7\x5c\xf1\xcb\x4e\xe6\x81\xe4\xa4\x2c\x96\x94\x25\xdf\x48\xb0\x2a\xd4\x78\xeb\x3a\x20\x55\xab\x63\x33\x28\xd7\xe7\x81\x69\xfc\xbc\xe1\xa0\x6d\xd4\x8c\x54\x9f\xae\xbb\x5d\xb2\xdd\x02\x20\x62\xed\xae\x64\xb1\x5f\x87\x6f\x73\x0b\xae\x9d\x52\x65\xc1\x22\xd8\xbb\x77\xf3\x78\xb4\x8e\x16\xf5\x98\xfc\x62\x0d\x0e\xe9\x7a\x1d\x65\x33\x85\x32\x6e\x85\x7b\x15\x97\x9b\xf2\x99\xaa\xbe\xd7\x40\x03\x9b\xa6\xae\x40\x8e\xee\x36\x7e\xd5\xd5\x9d\xf0\x2f\x4c\x98\xfb\xdc\x15\xd9\xf4\xd0\x33\xb5\xae\xea\x74\xbb\x85\x34\xda\xa9\x94\x88\x62\x27\x90\xa9\xba\x90\xfc\xa6\xc8\xad\x3c\xcb\x47\x6e\xed\xf3\x9f\x27\xd9\xea\x73\xc4\x78\xfb\x0a\xf6\x02\x6d\xf3\xe3\x0f\xa3\xcb\xb3\xc9\x68\x82\xc3\xbd\x55\xb5\xfb\x39\xff\xf8\xee\x97\x77\xe3\x8f\x9f\xae\x70\x4b\x37\x95\x71\x54\xe3\x8f\xc3\xb3\xc9\xc4\xd7\xa0\x41\x63\xc2\x0d\xd2\x14\xbc\x8f\xed\xcb\x4c\xfd\xe1\x42\x44\x5b\x51\x33\xd2\x44\xfe\xfe\xfa\x3b\xc5\xa5\x58\x43\x2d\x28\x57\x9f\xa3\xca\x39\x3a\x0c\xec\xf7\xa6\x5d\x1d\x71\xd9\x6f\x74\x45\x75\x97\x54\xc2\xf5\xa3\x20\x66\x0f\x74\x2d\xec\x97\xb2\x34\xef\xf8\x4d\x60\xb2\x41\xd9\x03\x25\x09\xb1\xf5\x36\x49\xc9\x42\x56\xf8\xe4\x5a\xe6\x89\x5e\x4c\x41\xf0\xd6\xe9\xc0\xb3\xb4\xe1\x72\xbb\xb1\xb6\xd9\xbe\xea\xa2\x97\xc9\xab\xc1\x40\x77\x7e\x6b\xd6\x4e\x49\x4a\x44\xe0\xa9\x13\x17\xe0\x40\x48\xa1\x03\xde\xc4\x22\x51\x13\x02\x63\x2a\xd9\x14\xfb\xb1\xeb\x54\x78\x1a\x2d\xbc\x28\x5c\xf5\x4d\x61\xbe\x81\x90\xb1\x16\x68\xad\x82\x77\x55\xb3\xb9\x53\x8f\xad\xe9\xc5\xef\x89\xf4\x5a\x91\xa7\x0d\x88\x43\x7e\xd8\x92\xda\x7f\x03\x00\x00\xff\xff\xc5\x02\xcf\x98\x52\x38\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14418, mode: os.FileMode(420), modTime: time.Unix(1455318077, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x6d\x6f\xda\x3a\x14\xfe\xce\xaf\xb0\xfc\xe9\x5e\x89\xcb\xa5\x54\xaa\xb4\x68\x9a\x44\x81\x56\x91\xd6\x0e\x15\xd6\x49\x9b\xfa\xc1\x24\x07\x64\xcd\xd8\x9e\xed\x74\xa2\x15\xff\x7d\xc7\x21\x09\x31\x09\xf4\x45\x5a\x5f\x50\xc8\x39\xcf\x39\xcf\x79\xb5\x9f\x9f\x49\x0a\x4b\x2e\x81\x50\x0b\xe6\x91\x27\x40\xc9\x76\xdb\x21\xe4\x19\xff\x09\xa1\xc3\x6f\xb3\x39\xac\xb5\x60\x0e\xae\x94\x59\x33\x77\x0f\xc6\x72\x25\x29\x89\x08\x1d\xf4\xcf\xfa\xff\xf5\x3f\xe0\x1f\xed\xee\xd4\xa7\xcc\xb0\x35\x38\xd4\xa1\x51\x61\xc2\x1b\x11\x42\x25\x68\x21\x9d\x39\x65\xd8\x0a\x6a\x32\x94\xce\x37\x1a\x72\x73\xb7\xd9\x7a\x01\xa6\x30\x95\x8b\xc6\xb0\x64\x99\x70\xb9\xf4\xac\x1f\x4a\x6c\x62\xb8\x76\x25\x95\xca\x05\xb1\x3b\x1f\xc4\xf2\x27\x20\xff\x5c\x5f\xfe\x4b\x0b\xd4\xb6\x84\xd3\x31\x73\x6c\xc1\xec\x31\x1e\x33\x67\xb8\x5c\x1d\xe3\xc1\xb4\x3e\x45\xa4\x50\x25\x69\xe1\x83\x48\x4c\x48\x93\x42\x2c\xad\x63\x32\x81\xdc\xe9\x7b\x68\xa4\x8b\x9e\x1b\xf4\xd6\x3c\x31\xea\x14\x9d\xd2\x0f\x49\x04\xb3\x96\x2c\x95\xa9\x31\x53\x29\xd8\x26\xb5\x1b\x74\xc1\x87\xdf\xdf\xc5\x6a\xc9\x04\xa6\xf5\x04\x9f\xdc\xb8\x16\x40\xd8\x23\xe3\x82\x2d\xb8\xe0\x6e\x43\x9e\x94\x6c\xc9\xd1\x14\x19\xff\x56\x26\x7d\x03\x93\xd0\xd9\x0c\x3b\x1a\x0c\xd1\xa5\x9d\x86\x87\x59\xb6\x90\xe0\x6c\x8b\x03\x44\x7f\xe6\xd6\x7d\xc4\xfe\x8f\xa2\xc9\x68\x10\x45\x3b\xdd\x28\x8a\xd3\x4f\xc7\x7c\x22\xe8\x7e\x3a\x22\xb6\xb0\xda\x70\xf7\x15\x47\x2c\x6f\x87\xbf\xd0\x77\x45\xac\x59\xe9\xa2\xe1\xfc\x5e\x27\xed\x71\xee\x43\x44\xf2\x3e\xbe\xd3\xe1\x55\x96\x3b\x35\xfb\xf4\x4b\xe6\x74\x16\x64\x92\x4e\x95\x71\xe7\xe7\xfd\x8b\x79\xa2\x87\x69\x6a\xbc\x08\x0d\x30\x91\xc1\xee\xf1\x4a\x46\xd1\x35\xb8\xa1\x73\xf8\xfd\xc7\xbe\x55\x69\x97\xd0\x89\x4c\xb5\xe2\xd2\xf5\x3c\x12\xac\xa5\xe4\x81\x6c\xeb\xad\xb1\xb7\xed\x1f\xdf\x67\x3b\x47\x1e\x18\x9e\xc8\xc7\x9b\x8d\xfd\x25\xea\x2b\x22\xb0\x7c\x07\x4b\x9f\x88\x4a\xde\x8a\xae\x77\x6e\x1b\xba\x92\xb7\xa2\xeb\x6d\xd2\x86\xae\xe4\x1e\x1d\x54\xe1\x0e\xac\xca\x4c\x02\x41\x1d\x66\x90\x64\x06\xa7\xec\xda\xa8\x4c\xbf\xd4\x02\xa1\x72\xad\x11\xa6\x46\x69\x30\x8e\x43\x38\x2d\x28\xc9\x55\x0f\xfa\x64\xed\xe3\x20\xe5\x89\xd2\xad\xab\x07\x1e\x62\xb9\xca\xcb\x8b\x45\xaa\xe9\x10\x1f\x6c\xac\xd1\xa5\x53\x89\x12\xde\xa0\x4b\xb4\xaf\xdd\x95\x51\xeb\xa2\xe0\xd4\xd7\xdf\xbf\x9b\xab\xc3\x37\x23\x9e\x9a\xd8\x87\x8a\x87\x46\x2f\xff\xfd\xff\xec\x82\x16\xb9\xda\xfd\x3c\x04\x9c\x70\x36\xe2\x34\xc8\xb1\x9f\x96\x1a\x60\x7b\x64\x75\xbc\x94\xd3\xbb\x31\x7e\x8c\x2f\xeb\xca\xaf\xca\x69\x00\x79\x43\x6e\x73\x50\x9c\xda\x20\x96\x72\xcb\x9d\x8c\xa7\x9a\x90\x17\x83\xd9\xcf\xd2\x6b\x22\x69\x3b\xfb\x2b\x66\x0d\xe1\x9e\x50\x91\x86\xd2\xd9\xc8\x1f\x5f\x01\x36\x38\x41\x8f\xe2\xe2\x14\xa4\xe3\x4b\x0e\x26\x74\xec\xe3\x99\x39\x96\xfc\xbc\xdd\x0d\xd2\x01\xfc\xb6\x1a\xbf\xe6\xbc\x77\x8f\x16\xaa\x81\xaa\xd7\xfd\x00\x38\x91\x2b\xbc\x75\x55\xf5\x0c\xeb\x78\xc3\x2c\xde\xa1\xc2\x3d\xd0\x1c\xfe\x23\x90\x70\xf9\x34\x37\x4e\x08\xdb\x1f\xf6\x95\x6e\xf9\xee\x40\x35\x9c\xb2\x40\x92\x2d\x04\x4f\xc4\x66\x98\xe0\xea\xb1\x7c\x21\xf2\xb8\x0e\xef\x02\xbe\x3f\x77\x65\x2e\xbb\x6a\xa5\x07\xa1\x1c\x8f\x97\x60\x3d\xe4\x8b\xa1\x9e\xcf\x60\x3b\xe1\xfa\x7b\x68\x76\x74\xa7\xfc\xdc\x76\xf0\x72\x0b\x32\xf5\xf7\xd9\x3f\x01\x00\x00\xff\xff\x44\x3a\xa6\x8e\xe7\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2791, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x6d\x6f\xe2\x38\x10\xfe\xce\xaf\xb0\xfc\xe9\x4e\xe2\x38\xca\xbd\x48\x17\x9d\x56\xa2\x40\xab\x48\xbb\x5d\x54\xd8\xae\xb4\xab\x7e\x30\xf1\x80\xac\x0d\xb6\x65\x3b\x5d\xb5\x15\xff\x7d\xc7\x21\x09\x71\x42\xa0\xa5\x2f\x28\x64\x66\x9e\x79\xe6\xd5\x7e\x7d\x25\x1c\xd6\x42\x02\xa1\x16\xcc\x93\x48\x80\x92\xdd\xae\x47\xc8\x2b\xfe\x13\x42\xc7\x5f\x17\x4b\xd8\xea\x94\x39\xb8\x51\x66\xcb\xdc\x03\x18\x2b\x94\xa4\x24\x22\x74\x34\xbc\x1a\xfe\x31\xfc\x0f\xff\x68\x7f\xaf\x3e\x67\x86\x6d\xc1\xa1\x0e\x8d\x0a\x08\x0f\x92\xa6\x2a\x41\x04\xbe\x70\xca\xb0\x0d\xd4\x64\x28\x5d\x3e\x6b\xc8\xe1\xee\xb2\xed\x0a\x4c\x01\x95\x8b\xa6\xb0\x66\x59\xea\x72\xe9\xd5\x30\x94\xd8\xc4\x08\xed\x4a\x2a\x95\x0b\x62\xf7\x3e\x88\x15\x2f\x40\x7e\xbb\xbd\xfe\x9d\x16\x56\xbb\xd2\x9c\x4e\x99\x63\x2b\x66\xbb\x78\x2c\x9c\x11\x72\xd3\xc5\x83\x69\x7d\x8a\x48\xa1\x4a\x78\xe1\x83\x48\x4c\x48\x9b\x42\x2c\xad\x63\x32\x81\xdc\xe9\x25\x34\xf8\x6a\xe0\x46\x83\xad\x48\x8c\x3a\x45\xa7\xf4\x43\x92\x94\x59\x4b\xd6\xca\xd4\x98\x29\x0e\xb6\x4d\xed\x13\xba\x10\xe3\x6f\x17\xb1\x5a\xb3\x14\xd3\x7a\x82\x4f\x0e\xae\x53\x20\xec\x89\x89\x94\xad\x44\x2a\xdc\x33\x79\x51\xf2\x48\x8e\xe6\xc8\xf8\xa7\x32\xfc\x1d\x4c\x42\x67\x0b\xec\x68\x30\x44\x97\x38\x2d\x0f\x8b\x6c\x25\xc1\xd9\x23\x0e\xd0\xfa\xa3\xb0\xee\x7f\xec\xff\x28\x9a\x4d\x46\x51\xb4\xd7\x8d\xa2\x98\x7f\xe8\xf2\x89\x46\x0f\xf3\x09\xb1\x05\x6a\xcb\xdd\x17\x1c\xb1\xbc\x1d\x2e\x49\xad\x56\xd6\x6d\x0c\x16\xec\x7c\xc0\x59\xe9\xa7\xc5\xe0\x41\x27\xc7\x83\x3d\xc4\x89\x11\xf8\x20\x4f\xc7\x58\x21\xf7\x6a\xf8\xf4\x73\xe6\x74\x16\xa4\x93\xce\x95\x71\xff\xfc\xfd\xd7\x68\x99\xe8\x31\xe7\xc6\x8b\x10\x80\xa5\x19\xec\x1f\x6f\x64\x14\xdd\x82\x1b\x3b\x87\xdf\xbf\x1f\xfa\x95\xf6\x09\x9d\x49\xae\x95\x90\x6e\xe0\x2d\xc1\x5a\x4a\x1e\xc9\xae\xde\x1f\x07\x6c\xff\x78\x19\x76\x6e\xd9\x00\x9e\xc9\xa7\x79\x91\xed\xfa\xaa\x08\xc0\xef\x61\xed\x73\x51\xc9\xbb\x00\xea\x4d\x7c\x0c\xa0\x92\x77\x01\xd4\x9b\xe6\x18\x40\x25\xf7\x00\x41\x39\xee\xc1\xaa\xcc\x24\x10\x14\x64\x01\x49\x66\x70\xe6\x6e\x8d\xca\xf4\xb9\x5e\x08\x95\x6b\x1d\x31\x37\x4a\x83\x71\x02\xc2\xd9\x41\x49\xae\xda\x68\x98\xb2\x75\x49\x79\xc4\xf4\xeb\x16\x81\x93\x58\x6e\xf2\x52\x63\xc1\x6a\x3a\xc4\xc7\x1b\x6b\xf4\xea\x54\xa2\x52\x8f\xe9\x12\xed\xeb\x78\x63\xd4\xb6\x28\x3e\xf5\xbd\xe0\xdf\x2d\x55\xf3\xcd\x44\x70\x13\xfb\x68\xf1\x14\x19\xe4\xbf\x7f\x5e\xfd\x4b\x8b\x74\xed\x7f\x1e\x03\x4e\x38\x27\x31\x0f\xd2\xec\x27\xa7\x66\xb0\xeb\xd8\x25\xe7\xd2\x7a\x3f\xc5\x8f\xe9\x75\x5d\xf9\x4d\x69\x0d\x4c\xde\x97\xde\xdc\x2e\xe6\x36\x08\xa7\xdc\x7c\x27\x43\xaa\x06\xe6\x6c\x3c\x87\xd1\x7a\x4b\x30\xc7\xee\x03\x15\xb3\x96\xf0\x40\xa8\xc8\x44\xe9\x6c\xe2\x8f\xb4\xc0\x36\x38\x55\x3b\xed\x62\x0e\xd2\x89\xb5\x00\x13\x3a\xf6\xf1\x2c\x1c\x4b\x7e\xdc\xed\xc7\xa9\x61\x7e\x57\x0d\x61\x7b\xf6\xfb\x9d\xb5\x6a\x59\xd5\x4b\xdf\x30\x9c\xc9\x0d\xde\xc4\xe8\xf1\x65\xef\x4f\x66\x66\xf1\x6a\x15\x2e\x84\xf6\x16\xe8\x30\x09\x17\x51\x7b\xfb\x84\x66\x87\x3b\x40\xa5\x5b\xbe\x6b\xa8\x86\xb3\x16\x48\xb2\x55\x2a\x92\xf4\x79\x9c\xe0\x0e\xb2\x62\x95\xe6\xa1\x35\xaf\x08\xbe\x45\xf7\x95\x2e\x1b\x6b\xa3\x1b\x40\x78\xe0\x04\x4b\x22\x5f\x0f\xf5\x94\x06\x6b\x0a\xf7\xe0\x63\xbb\xa9\x7b\xe5\xe7\xae\x87\x77\x5e\x90\xdc\x5f\x73\x7f\x05\x00\x00\xff\xff\xa1\xdf\x66\x01\xfe\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2814, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1454625854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

