// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x7d\x6f\xdb\xbc\x11\xff\x3f\x9f\x82\x10\xfa\x57\xe1\x38\x2f\xc5\xd3\x6d\xc2\x36\x20\x75\xd2\xa7\x59\x93\x34\xb0\xdd\x3e\xd8\x8a\x60\x50\x64\x3a\xd6\x2c\x8b\x1a\x49\xe5\x69\x1a\xf8\xbb\xef\xf8\x22\x89\x6f\x92\xed\x24\x2d\xb6\xa1\xcf\x4b\x22\x1e\x8f\xc7\xbb\xe3\xdd\xef\x8e\xec\xe3\x23\x9a\xe1\x79\x56\x60\x14\x25\x65\x19\xa1\xf5\x7a\x0f\xa1\x47\xf8\x17\xa1\xe8\xe4\xb7\xc9\x14\xaf\xca\x3c\xe1\xf8\x3d\xa1\xab\x84\x7f\xc1\x94\x65\xa4\x88\x50\x8c\xa2\xe3\xc3\xa3\xc3\xfd\xc3\x3f\xc1\x3f\xd1\x40\x91\x8f\x48\x31\xcb\x38\x8c\xb3\x28\xd6\x2c\x80\xd5\x23\xe2\x9a\x07\x8a\x6e\x93\x3c\x29\x52\x4c\xf7\xd3\x96\x14\x0d\xd5\x9a\x1e\x71\x49\x49\x8a\x19\xeb\xa2\x8d\xde\x01\xaf\xe5\x28\xaf\x18\xc7\x54\x2c\x88\xa2\xf7\x45\x1c\x9f\xfd\xbb\x4a\x72\x21\xc0\x57\xf1\x65\x8c\xe7\xf0\x63\x54\x53\xa1\xf5\x00\x45\x11\xba\x41\x8a\xc9\x5a\x0b\x7e\x9d\xd0\x64\x85\x81\x80\x89\x9d\xf5\x4b\x5e\x0a\xda\x2d\xa4\xb6\xe8\x6a\x91\x0d\x69\xf5\x27\xf8\x38\x7d\x28\xb1\xd4\xe8\x84\xd3\xac\xb8\xd3\xda\x94\x43\xa7\x78\x9e\x54\x39\x97\xa3\xf6\x77\x96\xd2\xac\xe4\xb5\x2d\x22\x3d\xb4\x1e\x34\x2b\x95\x55\x60\x15\x20\xbd\xaa\x56\xb7\x20\x41\x60\x11\x69\xd3\xc3\xae\x65\x84\x16\xaf\x3f\x23\xb6\x48\x28\x66\x88\xcc\x11\x4e\xd2\x05\xd2\xbb\xf5\xd7\x3f\x2b\xee\x33\x4a\x8a\x15\x2e\x78\x58\x8e\xee\xcd\xf6\xec\x35\xb8\xd5\x8f\xf8\xe1\x47\x2f\x31\xc6\x39\x4e\x18\xfe\x09\x76\x1b\xe3\x92\xb0\x8c\x13\x1a\xda\xd3\xf3\x16\x9b\x90\x8a\xa6\x18\xa5\x64\x86\x11\x6d\x97\xf1\x44\x98\x54\xb7\x05\xe6\xac\x63\xfd\x8b\x8c\xf1\x3f\x43\x60\x80\x93\x36\x3a\x8e\x63\x45\x1c\xc7\xe7\xb3\xbf\x3e\x45\xa6\x2f\xd7\x23\xc4\xd4\x7a\x68\x4e\x28\xe2\x8b\x8c\x21\x11\x87\x3c\xa9\xea\xd0\x63\x49\x65\xd8\x53\x9c\x3e\xc6\xfb\xbc\x97\x14\xf7\xe4\x1b\xec\x5c\x9a\x12\xdd\x6b\x7e\x83\x4e\xbf\xf1\x45\xb8\x1e\x75\x28\xa5\xd5\x07\xd0\x08\x65\x3c\x55\x17\x41\x1d\x58\xb1\x6a\x8c\x99\xb4\xa3\x69\x9f\x68\x04\x61\x85\xac\xa6\xa4\xcc\xd2\x31\xc9\x43\x7e\x5a\x0b\x79\x7e\x72\x19\xc7\x92\xc6\x90\xe4\x9a\x92\x12\x53\x9e\x61\xdb\xe8\x22\x03\x30\x56\xad\xb0\xa0\xbf\x26\x79\x96\x3e\x9c\x92\xb4\xf2\xce\xb4\x63\x1f\x91\x19\x8e\xf7\x21\x39\x1c\xfd\xc1\x58\x44\xb9\x16\x07\x2b\xe9\xf9\x5f\xad\x21\xe4\xf0\x93\xe4\x67\xf3\x39\x4e\xa5\x75\x4f\xf2\x9c\xfc\xee\x70\xd3\xa2\x67\x45\x9a\x95\x49\xae\x32\xc0\x04\xd3\xfb\x2c\xc5\x32\xfc\x83\x4b\xac\x6e\x67\xc9\x30\x59\x25\xdf\x49\x91\xfc\xce\x86\x29\x59\xc9\xe0\x1f\xe0\x73\x92\x6a\x3f\x81\x79\x8c\xb3\xb8\xdd\x38\xcc\x70\xc8\xd7\xd6\xef\xe6\xa8\xc5\x19\xd2\x0a\x5f\x08\xe1\x0f\x22\xfb\xb3\xd0\xa4\xd2\xb5\xad\x03\x57\x03\x8a\xf2\xe1\x0a\x72\x93\xd4\xc1\x6c\x95\x15\x70\xfa\x68\x02\xe7\xd6\xd3\x45\xb4\xc1\x40\x92\x66\x1b\x23\x49\x42\xcb\x50\x42\xb1\x9e\x29\x0c\x95\x45\xaf\xc5\xaf\xb5\x63\xaa\x0f\x68\xbd\x41\x6d\xe6\x6f\x2d\xe5\xda\x4f\x64\xad\x6b\xf7\xb8\xf5\x85\x34\x75\x1c\xbf\xaf\x0a\x25\xd5\x56\xde\x3d\x82\x50\xe8\x7b\xf2\xe4\xcd\xbb\x2a\x5d\x62\xde\x62\x8a\xbf\x91\x4c\xbb\xc6\x3e\xec\x14\xfe\x97\xca\x58\x02\x3f\xb7\x10\x43\x8a\x31\xc6\x77\xf2\x34\xc3\xe6\x7d\x3f\x03\xc6\x3a\x55\xb9\x5c\x15\x53\x1d\x99\x0e\x2c\xb6\x0d\xe2\x12\xc8\xe5\x60\x2e\x51\x18\xfc\x3e\xfc\x9e\x95\x91\x5a\xa4\xd3\xfd\x3e\x24\xc5\x2c\x97\x60\xa3\x3e\x09\xf8\x1b\x80\x8f\x02\xce\x8a\x45\x77\x89\x57\x90\x07\x26\xd9\x77\xa9\xce\xa3\xe3\x3f\xda\xc3\x75\x40\x51\x42\xff\x8a\xf9\x09\x57\x5e\xe1\x45\x1d\xe1\x13\xb4\xf0\x4e\x58\x34\xae\x0a\x9e\x29\x1f\x2e\x40\xe3\xff\x62\xf6\x02\x53\x18\x23\x95\xf4\xad\x37\x87\x51\xb7\x2b\x84\xf1\x18\x6d\xe2\xe1\x46\x48\xb6\x03\x29\x53\x71\xc4\xc1\x6f\x16\x29\xc3\x69\x45\x33\xfe\x10\x75\xb0\x62\xe2\x08\x35\x83\x75\xf8\xfe\x54\xf1\xb2\xe2\x9b\x01\x32\xd1\x74\x1b\x25\xb5\x09\x9b\x1c\x8e\x39\x87\x1c\xe6\x24\xf1\x2f\x49\x5e\x69\x5b\x6a\xf7\x6a\xe8\x5a\x75\xef\xd5\xff\x5d\xef\xc1\x82\xb8\x98\x49\xbe\x46\x99\x10\xc2\xe5\xaa\x6a\x78\x44\x34\x29\xee\x30\x7a\xb5\x44\xf1\x5f\xd0\xf0\xac\xe0\x54\x46\x2f\x56\xef\x41\x61\x76\xa0\xab\x4a\x38\x92\x82\x6e\xbd\x6e\x43\x76\x1f\x82\x0f\xcf\x69\xf1\xfc\x40\xad\xaf\xc5\xed\x17\xbc\x86\xe6\x8e\xd0\x58\x0a\xdd\x88\xda\xae\x88\x87\x62\x13\x30\x30\x22\xab\x15\x1c\x2a\x33\xf3\x76\xe1\x32\x2b\xeb\x03\xab\x54\x4d\x15\xcc\x34\x17\xe0\x67\x52\x87\x80\x61\xed\x34\x01\x51\x60\x42\x46\xf1\x6c\x44\x2a\x2b\xd6\xb7\xf2\x38\x38\xdf\x92\xe7\xa8\x7b\xe1\xe9\x02\xa3\x42\x4e\x15\x18\x3f\x2b\xc0\x8b\xe1\xf0\xca\x98\x23\x51\x3f\x87\x71\xad\x47\xc4\x09\x02\x67\x04\x48\x29\x76\xb3\xc4\xb8\x44\xb4\x2a\x0a\xd0\x02\x22\x05\x7a\x80\xa3\x86\x52\x5d\xef\x6c\xda\xcd\xf9\x2a\xb9\xc3\x3b\xab\xf5\x19\xea\x53\x31\xcf\x5b\xb1\x47\x6f\x22\x65\xfe\xf2\x36\xbc\x24\x8c\x5d\xbe\x13\xda\x19\x9f\x5c\x0a\xad\x40\xa0\x01\x07\xc5\x1b\xa5\x30\x5c\xff\xe5\x37\xbe\xed\x69\x68\x02\x88\x74\xfc\xe8\x23\x0c\xb2\xac\x0d\x1c\x81\xa0\x51\x93\xa8\x28\x31\xd8\xc0\xdf\x88\xba\x1d\x2b\x58\x99\x5c\x8f\x42\x65\xc1\x29\x4e\x56\x75\x6f\x21\x98\xc4\xa3\x09\x54\xa3\xcd\x19\x38\x6a\x23\x97\xde\x7f\x36\x47\xc3\x0f\x09\xbb\x56\x92\x18\x61\xe8\x82\xdc\xb1\xcf\xcc\x2a\xc4\x03\x30\x59\x52\x34\xaa\xee\x80\x11\x2d\xca\x53\xa0\xe0\xc0\x82\x1e\x61\xa8\xe7\x00\x0e\x1b\xe6\x09\xd9\x1c\x80\x6e\x50\xf5\xe0\xbb\x2d\xd1\x5d\x2f\x08\x0f\xc1\xf0\xad\x80\xb8\x03\xa1\x97\xda\x8a\xd7\x15\x1f\xe3\x94\xd0\x19\x58\xff\x26\x38\xcb\x80\x8d\x5f\xbb\x90\x51\x42\x8b\x18\xf0\x7b\x5c\x73\x7d\x0d\x7f\x98\x74\x8f\x03\x1f\x83\xc1\xf6\xd2\xa5\x54\xa6\xcc\x0e\xfb\xaf\x35\x4e\xf2\xf0\xa8\x8b\x48\x91\x43\x61\x21\xab\x3d\x97\xc6\x4e\xeb\xc2\x68\x27\xa9\x6c\x85\xf4\xba\x94\xa2\x11\x30\x70\xa3\x5f\x41\x70\xc8\x64\x59\x63\x84\x6b\x6d\xbd\x8a\x49\xae\xa0\xef\x7b\xab\x8e\x13\x0e\xab\xdd\xa8\x55\x4a\xe3\xeb\x6e\x8a\xdf\x25\x48\xb4\x78\xa8\x4e\x9a\xaf\x20\x87\x65\x73\x28\xb9\x8d\xac\xd9\x73\xe4\xba\xd2\x6c\x38\x30\x9e\x8d\x26\xd3\x84\x2d\x4f\x85\x14\x19\x0f\x94\xfd\x25\xc8\xca\x3e\x49\x27\xb1\x2a\x84\x41\x53\x02\xca\x23\x74\x13\xa8\xee\x15\xb9\x28\xd7\xdd\x35\x0c\x62\xe3\x28\x1d\x0d\x0f\xb7\xab\x26\xf4\xc2\x53\xb2\xc4\xc5\x46\xc0\xdc\x09\x96\x5b\xfb\x85\x2a\x8f\x7e\x5f\x17\x66\x69\x74\x18\xf9\x35\x88\xd9\xc7\x6a\x18\xd5\xdf\x1c\x52\xa7\x81\xd7\x90\x9b\xdf\x9d\x29\x4d\x75\x53\xe7\x09\xfc\xe0\x92\x08\x8d\x6b\x68\x67\x82\x59\x2c\x90\xe2\x3f\x39\x0c\x1e\x2b\x20\xdb\x5b\x12\x86\x1d\xc6\x4f\xa6\x8e\xa7\xd8\xea\xef\x75\x8c\x9a\xd7\x7f\x85\x47\x58\x2d\x6e\xbf\xa1\x6d\x92\xba\xa8\x30\x00\x9f\xc3\x08\xf2\x67\x3a\xa1\x7f\xb2\xfb\xc4\xf4\x8f\xa9\xeb\xd3\x4d\x7d\xda\xd4\x34\x6d\x00\x70\x68\x2f\x48\x32\x7b\xa7\x4b\xac\x40\xff\xa5\x8d\x51\x00\xd2\x0b\x9e\x40\x08\xa4\xd7\x84\x72\xd6\x46\xab\x86\xd6\x55\x4d\xec\xa8\xc6\x0c\x91\xc3\x7a\xcd\x3a\xd9\xc9\xbd\x99\x5a\xf2\x15\xa7\x3e\x0c\xc3\x3a\x34\x03\xb7\x23\x95\x69\x99\x2b\xa2\xc0\xdb\x76\xcd\x16\x93\xe5\xa6\xbc\x10\xbc\xc8\xb1\xeb\xa9\x66\xd3\x66\x0e\x78\x55\x4f\xb4\x92\x40\x3b\xe7\x4c\x77\x28\x1c\xad\xbb\x75\x63\xcd\x65\xa8\xf3\x8c\x56\x9a\x98\xa5\x95\x36\x12\x27\x72\x9e\xa5\xa2\x06\xdf\xb6\xb2\xdc\x8d\xab\x5d\x7b\xea\xf3\x9e\x56\x14\xef\xc2\xf0\x05\x65\x53\x8b\x2b\xb1\xfe\x2e\x32\xf5\xcd\xb3\x0c\xbb\x55\x91\xdc\x1a\xee\xbc\x08\x1b\x2e\x70\xa2\x0d\x99\x3f\x10\x16\xba\x1e\xda\x7c\xcf\x21\x90\x46\x31\xc3\xdf\x04\xdb\x31\x94\x9f\x64\xc5\x94\x3e\xb7\xbf\x6c\x09\x6b\xe5\x47\x39\xf0\x2e\x96\xac\xd7\x7d\xaa\x66\x76\x54\xc4\x8e\xd2\x39\x27\x6b\x67\x01\x7f\x9c\x64\x2f\xe0\x4d\xcd\x22\x4f\x74\xaa\x1d\x25\xd6\x67\xf6\x29\x32\x5f\x91\x5e\xb1\x8c\x31\x59\xb2\xe1\x99\x4c\x05\x2a\xc0\xc8\xf8\x30\x90\x3c\xda\x7a\xe6\x19\xb1\xc2\x6e\x21\x3c\xe5\x00\x45\x35\x69\xa3\x3d\x47\x69\x8e\x6d\xcd\xae\x84\x8b\xa9\x84\x6e\xad\x44\xab\xb2\xe9\xe9\xd5\x44\x81\x14\xe7\xf6\xff\x67\x9c\x5d\xbf\x87\xf2\x24\x9e\x2f\x92\xb1\xdd\x7e\xcc\x93\xcc\x15\xd0\xf1\x44\xf7\xc3\x7f\xa5\xa4\x2a\x3b\xab\x60\x75\x69\x6c\x91\x6e\xac\x84\x25\x99\xdd\x6f\xf3\xe0\x17\xda\x02\x99\xee\xdf\x36\x8a\x74\x10\x55\x64\x49\x74\x5e\xdc\x51\x55\xc9\x5b\x4d\x9b\x4d\x7e\xa2\xc9\xdc\x76\xcb\x28\x9b\xd1\x73\xa1\x90\xe8\x70\x28\xff\x1c\x1c\xfa\x3d\x99\xf3\x12\x36\xcf\x49\x4a\x64\xc1\xcf\xd3\xd2\x27\x79\x4f\xc9\x4a\xac\xf8\x12\x6e\xe4\x31\x9f\x92\x97\x62\x6d\xb7\x50\x06\xb6\x02\x3d\xc8\xba\x19\xb0\x9a\x25\xfc\x97\x32\x3d\x9f\x59\x42\x8a\x2b\xf9\x50\x5f\x23\xec\xa2\xdd\x5e\x99\x27\x8c\x67\x69\x5b\x1e\x40\xe0\x8d\x63\xb3\x5a\xd8\xa2\x5f\xd3\x3e\x9b\x68\x4b\x11\xfd\xcd\xf2\x35\x28\x2d\x0a\x2c\x7b\x65\xa7\x14\x4a\x0c\x58\x4a\xb5\xf6\xd4\xcc\xb3\x22\xb9\xcd\xb1\xd8\x25\xa7\x15\x1e\x98\xd7\x63\x6f\x0f\x3b\xf8\x98\xb7\x3d\xe0\x4b\xb3\x1c\xb7\x93\xde\xbc\x3d\x74\xa6\x51\xc2\xd8\x3f\x48\x81\xeb\x25\xda\xa1\x0f\x38\xc9\xf9\x62\xb4\xc0\xe9\xd2\x2d\x65\xd5\xd0\xc3\x74\x01\x27\x63\x41\xf2\x99\x6c\x32\xda\xf7\x78\x12\x02\xde\xcb\x96\xd5\x2f\x4e\xc1\x47\xef\xc2\xd7\xa9\xaa\x68\x8a\xa6\xa3\x6b\xab\x8f\xd7\x95\x04\x6a\x8f\x7b\x9f\x51\xc6\xc5\x2f\x75\x62\x08\x5d\xb8\x1a\x8a\x7b\x63\x7d\xff\x5c\x2c\x82\x9b\xd9\x0b\x78\xad\x7c\xee\x82\x0b\xbf\x5a\xdc\x36\x1a\xa8\x1d\x9f\xcf\xd5\x7e\x9f\x55\xc6\xb8\x87\x36\x70\xbf\x6f\x06\x11\xa9\x54\x9f\xc4\x74\xea\x1f\x15\x4e\xa4\x33\x88\x9b\xa3\x14\x6f\x21\x51\x43\xfa\x1c\x69\xb4\x1b\x38\xdc\x3d\xc9\x1c\x7b\x3c\xa1\x60\xf3\x37\x10\xec\x98\x9b\xfb\x9e\x4c\x2e\xc2\x1d\xf3\x9f\x63\x8b\x0e\x6b\x74\x4a\xf5\x92\xf6\x08\x2e\x00\x2b\x1b\x7e\xed\x44\xf4\xa7\x97\xe3\xde\x52\x81\xd5\xff\x47\x6d\x15\x3e\x39\xff\x57\xb6\x72\xbe\xdc\xb8\xaf\xac\x5e\x1a\x4b\x5c\xbc\x1b\x11\xb2\xcc\xf0\x04\xf2\xbe\xbc\x57\x62\x4d\x16\xfe\xfa\xe8\xde\xc9\x25\x73\xd9\x7d\x14\xed\x6c\x8b\x87\xe1\x13\x75\xcb\x14\x76\xeb\x7e\x06\x31\xbb\xa0\x66\xa0\xe1\xd3\x8f\xab\x8d\x7b\xac\x1d\xae\x71\x9c\xb7\x2a\x56\x8b\x34\x7c\x0d\xeb\xbe\x13\xec\xb8\x80\xdd\xea\x7d\x60\xe7\x8d\xa3\x73\x0f\xda\x5e\x20\xba\xf0\xd4\x79\x91\x67\x7b\x86\x73\x4f\xda\x7f\x57\x69\x3f\x18\x74\xd7\x31\x9e\x0f\xfa\x79\x0a\xa7\xcc\x79\x4b\xe8\xfa\xac\x8d\x7d\xf7\x42\x3f\xdf\x84\xaf\x14\x8c\xfb\x5a\xaf\xa1\xe0\x3f\x23\x0c\xdf\x2b\x5b\x78\xcd\xf6\x5f\xd3\xde\xfe\x5b\xc4\x9e\x57\x9d\x2f\xff\x60\xb3\xd3\xc8\x72\x14\x2b\x20\x9e\xc3\x09\xba\x6d\x80\xb8\x2a\xfd\x6e\xf1\xeb\x70\x0c\xec\x98\x43\xf1\x9d\xc0\x6e\xb4\x0e\x91\x4c\x14\x50\x41\x48\xbf\x99\xdb\xd8\xe5\xf5\x5b\xc6\x17\x5b\xf0\x4a\x8f\x37\x0a\x0f\x24\x27\x15\x5f\x10\x9a\x7d\xc7\xc1\x2a\xd4\x9b\x15\xb8\x47\xb7\x6e\xd1\x43\xcb\xbc\x0e\xb0\x71\xb1\xd2\x5e\xd7\x68\x3b\x52\xff\xa4\x46\x7b\x9f\x7f\x58\x57\x7a\x22\x30\xf5\x21\x61\xf7\x41\x8c\x8c\x69\x2a\xee\xd4\x2e\x2c\x22\x63\xd3\xcd\x51\x43\xcd\xab\xa1\x40\xe1\x60\x3d\x2c\x6a\x6a\x42\xe3\x01\x57\xf7\x9c\x9a\xa8\x99\xd5\x3e\x16\xea\x9e\xa4\x69\x9a\x39\xe1\xbf\xff\xd0\xf6\xd1\x97\xf8\x61\x80\x5e\xdd\x8b\x0c\xa5\xdf\xca\xdd\x5f\x26\xa5\x99\xd0\xe4\x7d\x10\x90\xa9\xba\x55\xfe\xa6\xc8\x0d\x10\xea\xa6\xc1\xe8\xe3\xf9\xd5\xd9\xe4\x7c\x12\x85\x9f\xeb\xb4\xf1\x63\xfc\x69\x74\x36\x99\xb8\x7a\xb5\xea\xe7\x2f\x24\x87\xa0\x60\x86\x98\xb6\xe6\xb9\x14\x97\x86\xa2\x4e\xd5\x44\xae\xdc\xc3\x3e\x21\xb5\x64\xa8\x23\x51\x6b\xf7\xae\x63\x56\x58\x80\x8b\xac\x58\x5a\xab\xf6\xbb\x97\xe3\x5a\xc6\xa4\x0e\x49\x1c\xaa\x9e\xab\x3e\x64\x79\x03\x72\xde\x26\xda\x57\x78\x6d\x16\x58\x3f\x53\x39\x02\x58\x81\xbf\x94\xba\xea\x37\x14\xe4\xbd\xaf\x68\x95\x66\x4e\x0a\xe8\xce\xd9\x60\x10\x59\xf5\x5c\xe7\xd4\xa1\x30\x0c\x28\xa5\x26\x9a\x4b\xd5\xc6\xd9\xe4\x9e\x4c\x70\xb7\xab\x3e\xf6\x6a\x04\xd4\x49\x07\x34\x9d\xb0\xc8\x78\xa2\xeb\x3f\x99\xb5\x01\xd1\xe4\x4d\x1c\xeb\x77\xe1\xda\x06\xa7\x38\xc7\x22\x97\x35\xb8\x11\x24\x10\xdb\xdb\x80\x98\xe4\x0b\x20\xa1\x09\xaa\xb0\x3d\x00\x92\x7b\xb3\xbc\x8f\xa6\xc9\x9d\x93\xd8\xeb\xa7\x15\x11\x7b\x80\x2c\xb4\x12\xdd\xec\xba\xa3\x5c\x3f\x45\x37\xb5\xdd\xd2\x8b\xbf\x45\x32\x08\xb5\x9f\xbd\xf6\x68\x28\xb4\x1b\x5a\xfb\x4f\x00\x00\x00\xff\xff\xf9\xa1\xf7\xba\x26\x38\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14374, mode: os.FileMode(420), modTime: time.Unix(1449871892, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5b\x6f\xda\x30\x14\x7e\xe7\x57\x58\x7e\xda\x24\xc6\x28\x95\x2a\x2d\x9a\x26\x51\xa0\x55\xa4\xb5\x43\x85\x75\x0f\x53\x1f\x8c\x7d\x40\xd6\x82\xed\xd9\x4e\x27\x56\xf1\xdf\x67\x87\x24\xd8\x84\xd0\x8b\xb4\x5e\x50\xc8\x39\xdf\xf9\xce\xdd\x7e\x7a\x42\x0c\x96\x5c\x00\xc2\x06\xf4\x23\xa7\x80\xd1\x76\xdb\x41\xe8\xc9\xfd\x23\x84\x87\x3f\x66\x73\x58\xab\x8c\x58\xb8\x92\x7a\x4d\xec\x3d\x68\xc3\xa5\xc0\x28\x41\x78\xd0\x3f\xeb\x7f\xe8\x7f\x72\x7f\xb8\xbb\x53\x9f\x12\x4d\xd6\x60\x9d\x0e\x4e\x4a\x13\xde\x48\x96\x49\xea\x2c\xb0\x99\x95\x9a\xac\x20\x90\x39\xe9\x7c\xa3\xa0\x30\x77\x9b\xaf\x17\xa0\x4b\x53\x85\x68\x0c\x4b\x92\x67\xb6\x90\x9e\xf5\x63\x89\xa1\x9a\x2b\x5b\xb9\x52\x53\x20\xb3\xe3\x40\x86\xff\x05\xf4\xee\xfa\xf2\x3d\x2e\x51\xdb\x0a\x8e\xc7\xc4\x92\x05\x31\x6d\x7e\xcc\xac\xe6\x62\xd5\xe6\x07\x51\xea\x94\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xb7\xb8\xc1\x16\x3d\x3b\xe8\xad\x39\xd5\xf2\x94\x3b\x15\x0f\xa2\x19\x31\x06\x2d\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xa9\x53\xfc\x23\x35\x7b\x85\x5b\x31\xe7\xcc\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x59\xbe\x10\x60\xcd\x11\x02\x87\xfe\xca\x8d\xfd\xec\xda\x2e\x49\x26\xa3\x41\x92\xec\x74\x93\x24\x65\x5f\xda\x38\x1d\xe8\x7e\x3a\x42\xa6\xb4\xda\xa0\xfb\xee\x3a\xbb\xa8\xc2\x7f\x28\x77\x19\x6b\x5e\x51\x34\xc8\xef\x15\x3d\x1e\xe7\x3e\x44\xe7\xbc\x8f\xef\x74\x78\xb5\xe5\x4e\x60\x1f\x7f\xcb\xad\xca\xa3\x4c\xe2\xa9\xd4\xf6\xfc\xbc\x7f\x31\xa7\x6a\xc8\x98\xf6\x22\x67\x80\x64\x39\xec\x1e\xaf\x44\x92\x5c\x83\x1d\x5a\xeb\xbe\xff\xdc\x77\x08\xee\x22\x3c\x11\x4c\x49\x2e\x6c\xcf\x23\xc1\x18\x8c\x1e\xd0\x36\x6c\x8d\xbd\x6d\xff\xf8\x36\xdb\x05\xf2\xc0\xf0\x44\x3c\xde\x6c\xcc\xef\x2c\x9c\xcc\xc8\xf2\x1d\x2c\x7d\x22\x6a\xf9\x51\x74\xd8\xb9\xc7\xd0\xb5\xfc\x28\x3a\x6c\x93\x63\xe8\x5a\xee\xd1\x51\x15\xee\xc0\xc8\x5c\x53\x88\xea\x30\x03\x9a\x6b\x6e\x37\xd7\x5a\xe6\xea\xb9\x16\x88\x95\x83\x46\x98\x6a\xa9\x40\x5b\x0e\xf1\xb4\x38\x49\xa1\x7a\xd0\x27\x6b\x1f\x07\xaa\x16\x79\x37\x54\x8f\x18\x52\xb1\x2a\xca\xeb\x8a\x14\xe8\x20\x1f\x6c\xaa\x1c\xa5\x95\x54\x66\xde\xa0\xa5\xca\xd7\xee\x4a\xcb\x75\x59\x70\xec\xeb\xef\xdf\xcd\xe5\xe1\x9b\x11\x67\x3a\xf5\xa1\xba\x5d\xdd\x2b\x7e\x3f\x9e\x5d\xe0\x32\x57\xbb\x9f\x87\xc8\x27\x37\x1b\x29\x8b\x72\xec\xa7\x25\x00\x6c\x5b\x56\xc7\x73\x39\xbd\x1b\xbb\x8f\xf1\x65\xa8\xfc\xa2\x9c\x46\x90\x57\xe4\xb6\x00\xa5\xcc\x44\xb1\x54\x5b\xee\x64\x3c\xf5\x84\x3c\x1b\xcc\x7e\x96\x5e\x12\xc9\xb1\x23\xb7\xf6\xac\x21\xdc\x3b\x54\xa6\xa1\x22\x1b\xf9\x53\x23\xc2\x46\x07\x57\x2b\x2e\x65\x20\x2c\x5f\x72\xd0\x31\xb1\x8f\x67\x66\x09\xfd\x75\xbb\x1b\xa4\x03\xf8\x6d\x3d\x7e\xcd\x79\xef\xb6\x16\xaa\x81\x0a\xeb\x7e\x00\x9c\x88\x95\xbb\xec\xd4\xf5\x8c\xeb\x78\x43\x8c\xbb\xba\xc4\x7b\xa0\x39\xfc\x2d\x90\x78\xf9\x34\x37\x4e\x04\x8b\x47\x27\x92\xe4\x8b\x8c\xd3\x6c\x33\xa4\x6e\x9f\x18\xbe\xc8\x0a\x67\x97\x24\x33\x87\x4d\xb7\xab\x5d\xd5\x2a\x2b\x35\x88\xe5\xee\xcc\x88\x66\xbe\x98\xf6\x30\x49\xd1\xca\x71\x3b\xed\xa1\xd9\xa6\x9d\xea\x73\xdb\x71\x17\x45\x10\xcc\xdf\x0d\xff\x05\x00\x00\xff\xff\xc3\x37\xc1\xe6\x33\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1446238118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1447373411, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x5b\x6f\xe2\x38\x14\x7e\xe7\x57\x58\x7e\xda\x95\x58\x96\xb2\x17\x69\xa3\xd5\x48\x14\x68\x15\x69\xa6\x83\x0a\xd3\x79\x18\xf5\xc1\xd8\x07\x64\x4d\xb0\x2d\xdb\xe9\xa8\x53\xf1\xdf\xe7\x38\x24\x21\x26\x04\x7a\x47\x21\xe7\x7c\xdf\xb9\x1f\xfb\xe5\x85\x08\x58\x4b\x05\x84\x3a\xb0\x4f\x92\x03\x25\xbb\x5d\x8f\x90\x17\xfc\x27\x84\x8e\xbf\x2e\x96\xb0\x35\x19\xf3\x70\xa3\xed\x96\xf9\x07\xb0\x4e\x6a\x45\x49\x42\xe8\x68\x78\x35\xfc\x63\xf8\x1f\xfe\xd1\xfe\x5e\x7d\xce\x2c\xdb\x82\x47\x1d\x9a\x94\x14\x81\x24\xcb\x34\x47\x06\xb1\xf0\xda\xb2\x0d\x34\x64\x28\x5d\x3e\x1b\x28\xe8\xee\xf2\xed\x0a\x6c\x49\x55\x88\xa6\xb0\x66\x79\xe6\x0b\xe9\xd5\x30\x96\x38\x6e\xa5\xf1\x95\x2b\xb5\x09\xe2\xf6\x36\x88\x93\x3f\x81\xfc\x76\x7b\xfd\x3b\x2d\x51\xbb\x0a\x4e\xa7\xcc\xb3\x15\x73\x5d\x7e\x2c\xbc\x95\x6a\xd3\xe5\x07\x33\xe6\x9c\x23\xa5\x2a\x11\xa5\x0d\xa2\x30\x21\x6d\x17\x52\xe5\x3c\x53\x1c\x0a\xa3\xef\x71\x43\xac\x06\x7e\x34\xd8\x4a\x6e\xf5\x39\x77\x2a\x3b\x84\x67\xcc\x39\xb2\xd6\xb6\xe1\x99\x16\xe0\xda\xae\xcd\x51\xf1\x87\xb6\xe2\x0d\x6e\xc5\x36\x17\xd8\x48\x60\x89\xa9\x78\x5a\x16\x16\xf9\x4a\x81\x77\x27\x0c\x20\xfa\xa3\x74\xfe\x7f\x6c\xbb\x24\x99\x4d\x46\x49\xb2\xd7\x4d\x92\x54\x7c\xe8\xb2\x89\xa0\x87\xf9\x84\xb8\x92\xb5\x65\xee\x0b\x76\x76\x51\x85\xf7\xe4\xd9\x68\xe7\x37\x16\xf3\x74\x39\xe0\xbc\xb2\xd3\xf2\xe0\xc1\xf0\xd3\xc1\x1e\xe2\xc4\x08\x42\x90\xe7\x63\xac\x99\x7b\x0d\x7e\xfa\x39\xf7\x26\x8f\xd2\x49\xe7\xda\xfa\x7f\xfe\xfe\x6b\xb4\xe4\x66\x2c\x84\x0d\x22\x24\x60\x59\x0e\xfb\xc7\x1b\x95\x24\xb7\xe0\xc7\xde\xe3\xf7\x6f\x87\x36\xa1\x7d\x42\x67\x4a\x18\x2d\x95\x1f\x04\x24\x38\x47\xc9\x23\xd9\x35\xfb\xe3\xc0\x1d\x1e\xdf\xc7\x5d\x20\x8f\x88\x67\xea\x69\x5e\x66\xbb\x39\xa1\x11\xf9\x3d\xac\x43\x2e\x6a\x79\x17\x41\xb3\x89\x4f\x11\xd4\xf2\x2e\x82\x66\xd3\x9c\x22\xa8\xe5\x81\x20\x2a\xc7\x3d\x38\x9d\x5b\x0e\x51\x41\x16\xc0\x73\x2b\xfd\xf3\xad\xd5\xb9\xb9\xd4\x0b\xb1\x72\xa3\x23\xe6\x56\x1b\xb0\x5e\x42\x3c\x3b\x28\x29\x54\x8f\x1a\xa6\x6a\x5d\x52\x6d\xf6\x7e\x13\x11\x19\x49\xd5\xa6\x28\x35\x16\xac\xa1\x43\x42\xbc\xa9\x41\xab\x5e\x73\x9d\x05\x4e\xcf\x4d\xa8\xe3\x8d\xd5\xdb\xb2\xf8\x34\xf4\x42\x78\xb7\xd4\xc7\x6f\x26\x52\xd8\x34\x44\x8b\xcb\x7b\x50\xfc\xfe\x79\xf5\x2f\x2d\xd3\xb5\xff\x79\x8c\x7c\xc2\x39\x49\x45\x94\xe6\x30\x39\x0d\xc0\xae\x63\x97\x5c\x4a\xeb\xfd\x14\x3f\xa6\xd7\x4d\xe5\x57\xa5\x35\x82\xbc\x2d\xbd\x05\x2e\x15\x2e\x0a\xa7\xda\x7c\x67\x43\xaa\x07\xe6\x62\x3c\x87\xd1\x7a\x4d\x30\xa7\x8e\xe1\xda\xb3\x96\xf0\xe0\x50\x99\x89\xca\xd8\x24\x9c\x24\x11\x36\x3a\xcc\x3a\x71\xa9\x00\xe5\xe5\x5a\x82\x8d\x0d\x87\x78\x16\x9e\xf1\xef\x77\xfb\x71\x3a\x82\xdf\xd5\x43\xd8\x9e\xfd\x7e\x67\xad\x5a\xa8\x66\xe9\x8f\x80\x33\xb5\xc1\x0b\x10\x3d\xbd\xec\x51\xfe\x89\x39\xbc\xd1\xc4\x0b\xa1\xbd\x05\x3a\x20\xf1\x22\x6a\x6f\x9f\x08\x16\x0f\x50\x24\xc9\x57\x99\xe4\xd9\xf3\x98\xe3\x62\x71\x72\x95\x15\xfe\xae\x59\xe6\x8e\xfb\x6e\x5f\xbe\xaa\x5b\x36\xe6\x88\x08\x4f\x91\x68\xf2\x8b\x99\x6f\xe6\x29\xda\x3d\xb8\xdc\x1e\xdb\x9d\xda\xab\x3e\x77\x3d\xbc\x3f\x82\x12\xe1\xca\xf8\x2b\x00\x00\xff\xff\xa1\x5a\xfe\x19\x4a\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1446238118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1446238118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1446238118, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

