// Code generated by go-bindata.
// sources:
// models/templates/app.tmpl
// models/templates/service/mysql.tmpl
// models/templates/service/papertrail.tmpl
// models/templates/service/postgres.tmpl
// models/templates/service/redis.tmpl
// models/templates/service/webhook.tmpl
// DO NOT EDIT!

package models

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesAppTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x5b\x7b\x6f\x1b\xb9\x11\xff\xdf\x9f\x82\x20\xf2\x47\x1b\xd8\x8a\x9d\xe0\xd2\x56\x68\x0b\x38\xb2\x93\xa8\xb1\x1d\x57\x52\x72\x68\x03\xe3\xb0\x5e\x51\xd6\x56\xab\xe5\xde\x92\xeb\x8b\x62\xe8\xbb\x77\xf8\xd8\xe5\x73\x25\xf9\x91\xa0\x3d\x24\x71\xa4\xe5\x2c\x39\x9c\x19\xce\xfc\x66\x38\xbe\xbb\x43\x53\x32\xcb\x0a\x82\x70\x52\x96\x18\xad\xd7\x7b\x08\xdd\xc1\x3f\x84\xf0\xf1\xcf\xe3\x09\x59\x96\x79\xc2\xc9\x5b\x5a\x2d\x13\xfe\x99\x54\x2c\xa3\x05\x46\x7d\x84\x5f\x1e\x1e\x1d\x1e\x1c\xfe\x05\xfe\xe2\x7d\x45\x3e\xa0\xc5\x34\xe3\x30\xce\x70\x5f\x4f\x01\x53\xdd\x21\xae\xe7\x40\xf8\x3a\xc9\x93\x22\x25\xd5\x41\x6a\x48\x51\x4f\xad\x19\x10\x97\x15\x4d\x09\x63\x3b\xd1\x56\xe4\x26\x63\xbc\x5a\x75\x11\xe3\x37\xb0\xf0\x62\x90\xd7\x8c\x93\x4a\x70\x87\xf0\xdb\xa2\xdf\x3f\xfd\xb5\x4e\x72\xc1\xed\x17\xf1\x64\x44\x66\xf0\x11\x37\x54\x68\xbd\x8f\x30\x46\x57\x48\x4d\xb2\xd6\xbb\xbc\x4c\xaa\x64\x49\x80\x80\x09\x31\x6c\xde\x66\x29\x68\x77\xd8\xa2\x43\xd7\xb0\x6c\x71\xab\x1f\xc1\xc3\xc9\xaa\x24\x52\xfc\x63\x5e\x65\xc5\x8d\x16\xbd\x1c\x3a\x21\xb3\xa4\xce\xb9\x1c\x75\x9f\xb3\xb4\xca\x4a\xde\x28\x0e\xeb\xa1\xf5\x7e\xbb\x52\x59\x47\x56\x01\xd2\x8b\x7a\x79\x0d\x1c\x44\x16\x91\x06\x70\xd8\xb5\x8c\x90\xe2\xe5\x27\xc4\xe6\x49\x45\x18\xa2\x33\x44\x92\x74\x8e\xf4\x6e\xc3\xf5\x4f\x8b\xdb\xac\xa2\xc5\x92\x14\x3c\xce\x47\xf7\x66\x37\xec\x35\xba\xd5\x0f\x64\xf5\xbd\x97\x18\x91\x9c\x24\x8c\xfc\x00\xbd\x8d\x48\x49\x59\xc6\x69\x15\xdb\xd3\xe3\x16\x1b\xd3\xba\x4a\x09\x4a\xe9\x94\xa0\xca\x2c\x13\xb0\x30\xae\xaf\x0b\xc2\x59\xc7\xfa\x67\x70\x28\xff\x0a\x5e\x04\x4e\xda\xe0\x65\xbf\xaf\x88\xfb\xfd\xe1\xf4\xef\x0f\xe1\xe9\xf3\xe5\x00\x31\xb5\x1e\x9a\xd1\x0a\xf1\x79\xc6\x90\x70\x5a\x01\x57\x8d\x9f\x72\xb8\xf2\x14\xf7\x87\xd1\xe9\x3f\x3f\x0d\x47\xa7\x27\x7f\x44\x67\xc9\xf2\x7a\x9a\xa0\x01\x9c\x37\xba\x9c\xd0\x32\x4b\xd1\xfb\xa4\x98\xe6\xa4\x42\x5a\x99\xa8\x99\xd1\x62\xef\x3c\x2b\xce\x48\x71\xc3\xe7\x92\xb9\x23\x7b\xc8\x33\xaa\x90\xbf\xcb\x41\x87\xc4\x8c\xb0\x80\x46\x48\xea\xa1\x82\x8a\x0a\xc8\x71\x64\x23\xc2\xa4\x92\x6d\xe5\x61\x4b\x06\x23\x9a\xc7\x8c\xb8\x61\x72\x78\x7c\xde\xef\x4b\x1a\x8b\x93\xcb\x8a\x96\xa4\xe2\x19\x71\x2d\x42\xc4\x12\xc6\xea\x25\x11\xf4\x97\x34\xcf\xd2\xd5\x09\x4d\xeb\xe0\xc0\x7b\xca\x13\x31\xe6\xe5\x01\x84\x99\xa3\x3f\x59\x8b\x28\xbb\xe3\xe0\x40\xf5\xfb\x5f\x9c\x21\xe4\xcd\x27\xc9\x4f\x67\x33\x92\xca\xa3\x7c\x9c\xe7\xf4\x37\x6f\x36\xcd\x7a\x56\xa4\x59\x99\xe4\x2a\x3c\x8c\x49\x75\x9b\xa5\x44\xc6\x06\x9c\x4b\x03\xe9\x25\xcb\xe4\x1b\x2d\x92\xdf\x58\x2f\xa5\x4b\x19\x19\x22\xf3\x1c\xa7\xda\xc2\xe0\x3d\xc6\x59\xdf\x6c\x1c\xde\xf0\xc8\xd7\xce\x77\x7b\xd4\x99\x19\x62\x0e\x58\x19\x30\xff\x02\xbb\x8f\x85\x24\x95\xac\x5d\x19\xf8\x12\x50\x94\xab\x0b\x08\x5c\x52\x06\xd3\x65\x56\x88\x78\x99\xc0\xa1\x0e\x64\x81\xb7\x28\x48\xd2\xec\xa2\x24\x49\xe8\x28\x4a\x08\x36\x50\x85\x25\x32\xfc\x5c\x7c\x6d\x0c\x53\x3d\x40\xeb\x2d\x62\xb3\xbf\x19\xca\x75\x18\xe5\x8c\x69\x6f\x30\x6b\xe5\x0b\xfa\xfd\xb7\x75\xa1\xb8\xda\xc9\xba\x07\xe0\x27\x43\x4b\x1e\xbf\x7a\x53\xa7\x0b\xc2\x0d\xe0\xf8\x07\xcd\xb4\x69\x1c\xc0\x4e\xe1\x3f\xc0\x2b\xb7\xf4\x2b\x7c\x36\xf8\x43\xb2\x31\x02\x40\x23\x4e\x33\x6c\x3e\xb4\x33\x98\x58\xc7\x31\x7f\x56\x35\x69\xa5\x9c\xd6\x0b\x67\xda\x16\xbb\x09\x58\xf3\x62\x26\xf1\x1c\x7c\xef\x7d\xcb\x4a\xac\x16\xe9\x34\x3f\xed\x0c\xc5\x2c\xfa\x24\x90\xaf\x80\x4c\x0a\x38\x2b\x0e\xdd\x39\x59\x42\x90\x18\x67\xdf\xa4\x38\x8f\x5e\xfe\xd9\x1d\x6e\x1c\x8a\x62\xfa\x1d\xe1\xc7\x5c\x59\x45\xe0\x75\x84\x4d\x54\x45\x70\xc2\xf0\xa8\x2e\x78\xa6\x6c\xb8\x00\x89\xff\x87\xb9\x0b\x4c\x60\x8c\xd6\xd2\xb6\x5e\x1d\xe2\x6e\x53\x88\x83\xb5\xaa\xf5\x87\x5b\xf1\xda\x3d\x48\x99\xf2\x23\xbb\x60\x57\x7f\xd6\x18\x31\x23\x69\x5d\x65\x7c\x85\x3b\x26\x63\xe2\xb8\xb5\x83\x8d\xab\xff\x58\xf3\xb2\xe6\xdb\x61\x39\xd5\x74\x5b\x77\xb5\x95\xb0\xdd\x94\x4b\xd9\xc2\x06\xc2\x39\x44\x46\x0f\x37\x7c\x4e\xf2\x5a\x5b\x88\x36\xda\x96\xce\x28\x71\xaf\xf9\xb9\xde\x83\x15\x49\x31\x95\xf3\x5a\x69\x4c\x2c\x6f\x50\x59\xcd\x1d\xaa\x92\xe2\x86\xa0\x67\x0b\xd4\xff\x1b\xea\x9d\x16\xc0\xa0\xf0\x89\xac\xd9\x84\x4a\x13\x80\xae\x2e\xe1\xa0\x0b\xba\xf5\xda\x04\x82\x30\x69\x10\xe7\x0d\xb7\x66\x6a\xd8\xd9\xcc\x58\x83\xf6\x3d\xa6\x88\x64\xaa\x65\xc5\x70\x41\x7a\x82\x49\x18\x50\xe7\xcb\x0e\xd7\x1d\x40\xdd\x81\xe9\x3f\xbd\xb6\x9f\x3b\x18\xe8\xfc\x8d\x00\xe7\xa3\xe3\x73\xc4\x29\xc0\x3c\x61\xab\x04\x3b\x96\x13\xe1\x02\xe6\xc8\x2a\x32\x1d\xd0\xda\x09\x0e\x06\xc3\x74\x31\xe3\xc2\xa4\x00\xb5\x4c\xe6\x04\x15\xf2\x55\xc1\x54\x56\x80\x29\xc3\x69\x97\x4e\x4a\xe6\x10\x1c\xc6\xb5\x08\x05\xbb\x60\x68\x00\x50\xc1\x33\xa1\x05\x21\x25\xaa\xea\xa2\x00\x4b\x41\xb4\x40\x2b\x38\x45\x28\xd5\xd9\x93\xd9\xcd\xae\xea\x69\x2d\x56\x6a\x02\x7f\x80\x41\x96\x19\x4b\x8d\x58\x69\x43\xa2\xcc\x52\xac\x85\xcf\xe8\xcd\xbb\x8a\xd6\xe5\xa6\xd7\x5a\x9a\xe6\xbd\xcd\x7c\x59\xee\xa1\x83\x33\x27\x90\xe9\x51\x40\xdd\xbc\x22\xc9\xb2\x49\xd2\xa3\x31\x0c\x8f\x21\x53\x6b\x35\x7a\x64\x8e\x58\xc7\x5e\xdc\x88\x49\x6f\x98\xfc\xa9\x88\x76\xd9\x8a\x71\x8a\xcd\x19\x78\xb6\x4c\x8a\x6c\x46\x18\xb7\x0e\x01\x3c\xce\x66\xa8\xf7\x3e\x61\x97\xea\x3d\x73\x50\xbb\x4e\x4d\xdc\x62\x4f\x07\xe3\x49\xc2\x16\x27\x82\x8b\x8c\x47\x12\x83\x12\x78\x65\x1f\x65\x0c\x75\x60\xc2\x7e\x8b\x03\x65\x58\xba\x8a\x40\x7c\x45\x2e\x30\xbb\xbf\x86\x45\x6c\xa1\xa5\xa3\xde\xe1\x6e\x90\x42\x2f\x3c\xa1\x0b\x52\x6c\x8d\x9a\x9d\x11\x53\x43\xbe\x0e\xf8\xe1\x81\x0e\xc0\x6a\xe9\x42\xbe\x21\x41\x82\x50\x4b\x2b\x43\x1c\x02\x11\x3b\xd3\x6d\x27\x6a\x9e\x79\xa4\x5e\x8a\xdf\x92\xdb\xcf\xbd\x57\x5a\x88\xd3\x9c\x32\xb2\xf2\x49\x84\xc4\x75\xf9\xc6\x0e\x3e\x44\x38\xf6\x5f\x38\x0c\xaa\xb0\xb3\x11\x16\xc6\xed\xc5\xf2\xfa\x1d\x86\x62\xf1\xa1\x0c\x15\xde\x07\x53\x7d\xa3\x63\xa9\xb1\x48\xb3\x4e\x6b\xe4\xbd\x86\xaa\x81\xba\x72\x61\x4b\xd8\xfb\xee\xec\xfa\x28\x59\xb3\xd9\xba\x37\xcf\xb7\x18\x68\xb3\xa9\xff\x09\xcb\x74\x8a\x71\x61\xe9\xcd\x26\xf5\x23\x4e\x4b\xbf\x2d\x3a\xfd\xc8\xc3\x10\x7a\x98\x4d\x6c\x86\xee\xc2\x3f\x5b\x2d\x58\x6e\xa1\x90\x71\x44\x1e\xed\x19\x4d\xa6\x8d\x45\x45\x92\x41\xe3\x2b\x7b\x97\xb4\xe2\xe7\x49\x59\x0a\x4c\xe5\x5b\x28\x0a\x05\xd3\xf7\x04\x73\x2f\x1b\x8e\x88\x4d\x3d\xe8\x0d\x68\xc1\x13\x08\x08\x55\x5c\x94\x71\x93\x47\xbe\x82\x2e\xa8\x0a\xa9\xbb\x25\x80\xf6\x94\xdb\x90\x40\xb4\x4c\xed\xa2\xb5\x76\xf7\x76\x48\x7a\xd6\xbc\xe8\xc4\x24\xf3\x4e\x5c\xfa\x3e\xe8\x6c\x26\xe9\xe9\xa8\xa7\x85\x27\x5e\x16\xc2\xb3\x1c\xcc\x40\x9c\xcf\x59\x96\x0a\xc8\xbf\xb9\xa6\xfd\xd8\xd9\x4d\x2d\xdc\x54\xfe\x44\x26\x42\x1e\x32\xf1\x77\xe0\x55\x31\xa3\xd8\xfc\x97\xc0\x15\x57\x8f\xd2\x7b\x1c\xa1\x3f\xa5\xce\x1f\xb2\xc9\xe6\xe3\x83\x8a\xbd\xbe\x0e\xee\x55\x68\x7e\x02\xe3\xbc\x37\xc3\xdf\x9f\xc3\xf7\x94\xc5\xee\x1b\x76\x92\x65\x56\x4c\xc9\x57\x6b\xb1\x11\x24\x22\x74\xc9\x7e\xb0\x8c\xb5\xd9\x3f\x64\x0f\x17\x74\x23\x7b\xd6\x98\x2c\xd3\x91\xa9\x74\xb6\x3a\xed\x15\x47\x6c\x5f\xce\xd1\x3a\xdc\xc7\x1c\x37\x37\xe3\x7a\xc8\x79\xc3\x0d\x69\x2b\x45\x4f\x78\x9e\xae\xed\x6c\xcc\x07\x2f\x42\xc6\x4e\x4c\x53\x81\xeb\xe4\x62\xac\xd0\x80\x77\x21\xf8\x03\x8f\x7a\x98\x42\x3e\x6a\xee\x8d\x60\xf8\xfe\xf3\x35\xe8\x2a\xc2\xaf\xa5\xb6\x9e\x0d\x56\xf4\xa4\x4f\x60\x42\x7e\x72\xfc\x20\x23\x8a\x68\x7e\xac\xeb\x6d\x6e\x02\xec\xa7\xc0\xea\x76\xcb\x21\x6d\x45\xda\x81\xa3\xb1\x24\x73\xeb\x31\x01\xfe\x42\x3b\x00\xd3\x83\xeb\x56\x9f\x1e\x92\xc2\x0e\x47\xc3\xe2\xa6\x12\xb7\xaf\x41\xea\xb2\xd1\x7a\x35\x95\x07\x14\xf1\x20\x9b\x56\x43\x21\x0f\x7c\xd8\x93\x7f\x5e\x1c\x86\xf7\x08\xc3\x12\xf6\xce\x69\x4a\xc5\x95\x0a\xe6\x69\x19\x92\xbc\xad\xe8\x52\x2c\xfc\x94\x46\x1d\x2c\x32\xa1\x4f\xbd\x84\xb3\xc2\x7a\x5b\xb2\xb6\x1d\xb7\xda\x79\xdb\xe7\x32\x1d\x4e\x1d\x66\xc5\x6d\xa1\x5f\xff\xdc\xef\xb4\xd8\x6e\x23\xcd\x13\xc6\xb3\xd4\x9c\x3f\xd0\xb4\xa8\xdb\x98\xe3\xb8\xdd\x68\xad\xeb\x5e\x93\x98\xe8\x67\xb6\x20\x54\x46\x4c\x7e\x45\xbd\x71\x3a\x27\xc0\x17\xce\x0a\x7d\x63\xe0\x25\xb2\x6a\x5c\xeb\xa4\xa1\x76\x62\x67\x28\x52\xd1\x69\x52\x10\x79\x3d\x73\x52\x41\x22\x01\x1b\x51\x77\x56\x8a\xaf\xd3\x22\xb9\xce\x89\x90\x21\xaf\x6a\xb2\x6f\xdf\x0b\xbc\x3e\x74\x0e\x88\x99\xc7\x2e\x48\x83\xe5\x4e\x73\x62\x5e\x7a\xf5\xfa\xd0\x7b\xad\xa2\x8c\xfd\x9b\x16\xa4\x59\xc2\x0c\xbd\x27\x49\xce\xe7\x83\x39\x49\x17\x7e\xda\xac\x86\x56\x93\x39\x1c\xc3\x39\xcd\xa7\xb2\x38\xeb\x5e\x60\x0c\x85\x90\x6e\xe5\x15\xe4\x4f\x5e\x72\x59\xdd\xc4\xef\x91\x54\x8a\x86\x27\x83\x4b\xe7\xb6\xa7\x2b\x0e\x36\x76\xfd\x36\xab\x18\x17\x5f\x9a\xd8\x18\xbb\x69\xb2\x04\xf7\xca\x79\xfe\xa9\x98\x47\x37\x63\x92\x2f\x4b\x24\xa2\x09\x80\x14\x61\x66\xba\xa3\xeb\x51\x1b\x1e\xce\xd4\x76\x9f\x24\x57\xf2\x3d\x44\xe4\x7e\xd3\xf6\x5c\x52\xb6\x21\x89\x7d\x72\xbe\xb7\x0f\x93\xb6\x21\x0a\xe2\x29\xd9\x81\xb3\x96\xf4\x29\xb8\xd2\xd6\xe1\xad\x12\x70\xe8\xe9\xe9\x11\xd9\x61\xb8\xa1\x50\x3f\x9e\x86\xc6\xe3\xb3\xc8\x6b\x3f\x5c\x47\x1d\x5a\xea\xe4\xee\x7b\xe8\x29\xba\x10\x70\x60\xd9\xbf\x17\x5e\x1e\x5f\x1b\x08\x96\x8c\x70\xf1\x7f\xae\xc3\xf8\x49\xfb\x5d\xeb\xd0\x7b\x72\xe5\x77\xab\x3c\x35\xf0\x39\x7b\x33\xa0\x74\x91\x91\x31\x80\x94\x85\xb8\xbc\x62\x6d\x50\xff\x72\xe7\xb7\xb0\x24\x33\x59\x38\x15\x37\x02\xce\x1c\x5e\x72\xa1\x92\x8f\x58\xce\xd1\x05\x93\x23\xd5\xa8\xcd\x39\x81\xd5\x9f\x62\x61\xb3\x6d\x89\x4b\xb4\x61\x55\x5d\xeb\xa9\xd6\x8f\xf7\x09\x1b\x69\x9a\x2d\xf5\x32\xb7\x5f\x04\xe0\x4e\xcd\x0e\x08\x40\xbd\x83\x23\xc8\x08\x3a\xaf\xe2\x62\x5d\x07\x66\x7d\x31\x12\xe9\x2e\x8c\x5c\x2a\x8c\x2c\x32\x0d\x4a\xdb\x3e\x60\x75\x1f\xe4\xef\x46\x53\x45\x6f\x1e\xba\xae\x27\x1f\x7b\xe3\x60\x95\xfe\xbb\x52\xa9\xbd\x46\x83\xdb\x45\xe6\xdd\x10\x37\x3b\x53\x67\xf2\x5e\x32\x08\x12\x7a\xc9\xd6\x71\x9a\x8a\xeb\x0b\x98\xcf\xba\x85\xdd\xa4\x96\x7b\xaf\xe6\x8b\x2f\x32\xf9\xbe\xdd\x5f\x6a\x57\x3e\x3a\xe5\xe3\xf5\xa6\x38\x37\x16\xf1\xab\x63\xbf\x87\xb0\x43\xfd\x3b\xf5\x0e\x76\xb6\x04\x7a\x4d\x59\xa6\x3f\xcf\xcf\x13\xbd\x6e\x3d\xd7\xdb\x79\x1d\x58\x9b\x1b\x0a\xdd\x66\x42\x7f\x1d\xab\xb5\x30\xc4\x6e\x24\x65\x5e\x9f\xa1\xef\x87\xdd\xe4\x73\x2f\xf6\xf9\x2a\x7e\xc3\x67\x75\xea\x05\x95\x9f\xb0\xc5\x30\xde\x5e\xe8\xa4\x34\xae\x4f\xb6\xf5\x1d\xf6\x29\x6e\xe8\xf8\x7c\xfa\x66\xce\x4e\x25\xcb\x51\xa2\x32\xe1\x1c\xa2\xc2\x75\x9b\x09\xab\x52\xcc\x35\x79\x1e\x8f\xf3\x1d\xef\x28\x9f\x40\xaa\x06\x06\x30\x51\xd1\x88\xe6\xd4\xdb\x67\x1b\xf9\x73\xfd\x9c\xf1\xf9\x0e\x73\xa5\x2f\xb7\x32\x0f\x24\xc7\x35\x9f\xd3\x2a\xfb\x46\xa2\x55\xa1\xe0\xad\xab\x88\x54\xad\xc6\xcc\xa8\x5c\x9f\x47\xa6\xf1\xf3\x86\xbd\xae\x51\x33\xd2\x7c\xba\xda\xee\x92\xed\x9b\x7e\x11\x6b\x37\x25\x8b\xbd\x36\x7c\x9b\x5b\x70\xed\x94\x1a\x0b\x16\xc1\xde\xbd\x82\xc7\xc3\x65\x72\xd3\x8e\xc9\x2f\xd6\xe0\x80\x2e\x97\x49\x31\x55\x28\xe3\x56\xb8\x57\x71\xb9\x29\x9f\xa9\xea\x7b\x0b\x34\xb0\xe9\xdd\x8a\xe4\xe8\x6e\x7f\x57\x5b\xdd\x89\xff\x5e\x84\xb9\xcf\x5d\x90\xd5\x3e\x7a\xa6\xd6\x55\x0d\x6d\xb7\x90\x46\x3b\x95\x12\x51\xec\x04\x32\x55\x17\x92\xdf\x14\xb9\x95\x67\xf9\xc8\x0d\x7f\x18\x5e\x9c\x8e\x87\x63\x1c\x6f\x71\x6a\xdd\xc3\xd9\xc7\x77\xbf\xbc\x1b\x7d\xfc\x74\x89\x3b\x9a\x9a\x8c\x23\x19\x7d\x1c\x9c\x8e\xc7\xbe\x84\x9d\x4a\xd6\x67\x9a\x83\x77\xb0\x7d\x8d\xa9\x0f\x9c\x8b\x68\x28\x6a\x3a\x9a\xc8\xdf\x61\x6f\xd3\x76\x34\x6b\xa8\x03\x85\x6a\x3b\x6f\x9c\x97\xc3\xc0\x6e\x6f\xda\xd5\x0b\x97\xfd\xa0\x39\x69\x7b\xc9\x23\x5e\xdf\x89\x62\xea\x48\x57\xc1\x6e\x29\x45\x78\x07\x6f\x02\x87\x0d\x9a\xee\x2b\xc9\x06\xaa\x74\xd3\x01\x4d\x17\x20\xb6\x1b\x57\xc3\xf6\x50\x17\x36\x8c\x5f\xf5\xfb\xba\xb3\x5a\xeb\xe0\x84\xe4\x44\x78\xfc\x36\x63\x00\x0e\xc4\xf6\xb6\xe0\x8a\x54\x64\x48\x42\x12\x95\xca\xf2\x20\x6c\xdf\xda\x05\x22\x3c\x49\x6e\xbc\xf0\xd7\xf4\x25\x61\xb6\x02\x5f\xbd\x14\x30\xa9\xc1\x55\x4d\x33\xb7\x53\x08\x6d\xe9\xc5\xef\x61\xec\x77\x42\x3e\x1b\x89\xc6\x1c\xa0\x25\xb5\xff\x06\x00\x00\xff\xff\x9e\xcd\x12\xaa\xb2\x37\x00\x00")

func templatesAppTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesAppTmpl,
		"templates/app.tmpl",
	)
}

func templatesAppTmpl() (*asset, error) {
	bytes, err := templatesAppTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/app.tmpl", size: 14258, mode: os.FileMode(420), modTime: time.Unix(1453405723, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceMysqlTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\x5b\x6f\xda\x30\x14\x7e\xe7\x57\x58\x7e\xda\x24\xc6\x28\x95\x2a\x2d\x9a\x26\x51\xa0\x55\xa4\xb5\x43\x85\x75\x0f\x53\x1f\x8c\x7d\x40\xd6\x82\xed\xd9\x4e\x27\x56\xf1\xdf\x67\x87\x24\xd8\x84\xd0\x8b\xb4\x5e\x50\xc8\x39\xdf\xf9\xce\xdd\x7e\x7a\x42\x0c\x96\x5c\x00\xc2\x06\xf4\x23\xa7\x80\xd1\x76\xdb\x41\xe8\xc9\xfd\x23\x84\x87\x3f\x66\x73\x58\xab\x8c\x58\xb8\x92\x7a\x4d\xec\x3d\x68\xc3\xa5\xc0\x28\x41\x78\xd0\x3f\xeb\x7f\xe8\x7f\x72\x7f\xb8\xbb\x53\x9f\x12\x4d\xd6\x60\x9d\x0e\x4e\x4a\x13\xde\x48\x96\x49\xea\x2c\xb0\x99\x95\x9a\xac\x20\x90\x39\xe9\x7c\xa3\xa0\x30\x77\x9b\xaf\x17\xa0\x4b\x53\x85\x68\x0c\x4b\x92\x67\xb6\x90\x9e\xf5\x63\x89\xa1\x9a\x2b\x5b\xb9\x52\x53\x20\xb3\xe3\x40\x86\xff\x05\xf4\xee\xfa\xf2\x3d\x2e\x51\xdb\x0a\x8e\xc7\xc4\x92\x05\x31\x6d\x7e\xcc\xac\xe6\x62\xd5\xe6\x07\x51\xea\x94\x23\xa5\x2a\x62\x25\x07\x12\x2e\x21\x4d\x17\x52\x61\x2c\x11\x14\x0a\xd2\xb7\xb8\xc1\x16\x3d\x3b\xe8\xad\x39\xd5\xf2\x94\x3b\x15\x0f\xa2\x19\x31\x06\x2d\xa5\x0e\x3c\x93\x0c\x4c\xd3\xb5\xa9\x53\xfc\x23\x35\x7b\x85\x5b\x31\xe7\xcc\x35\x12\x68\xa4\x2a\x3b\x0d\x86\x59\xbe\x10\x60\xcd\x11\x02\x87\xfe\xca\x8d\xfd\xec\xda\x2e\x49\x26\xa3\x41\x92\xec\x74\x93\x24\x65\x5f\xda\x38\x1d\xe8\x7e\x3a\x42\xa6\xb4\xda\xa0\xfb\xee\x3a\xbb\xa8\xc2\x7f\x28\x77\x19\x6b\x5e\x51\x34\xc8\xef\x15\x3d\x1e\xe7\x3e\x44\xe7\xbc\x8f\xef\x74\x78\xb5\xe5\x4e\x60\x1f\x7f\xcb\xad\xca\xa3\x4c\xe2\xa9\xd4\xf6\xfc\xbc\x7f\x31\xa7\x6a\xc8\x98\xf6\x22\x67\x80\x64\x39\xec\x1e\xaf\x44\x92\x5c\x83\x1d\x5a\xeb\xbe\xff\xdc\x77\x08\xee\x22\x3c\x11\x4c\x49\x2e\x6c\xcf\x23\xc1\x18\x8c\x1e\xd0\x36\x6c\x8d\xbd\x6d\xff\xf8\x36\xdb\x05\xf2\xc0\xf0\x44\x3c\xde\x6c\xcc\xef\x2c\x9c\xcc\xc8\xf2\x1d\x2c\x7d\x22\x6a\xf9\x51\x74\xd8\xb9\xc7\xd0\xb5\xfc\x28\x3a\x6c\x93\x63\xe8\x5a\xee\xd1\x51\x15\xee\xc0\xc8\x5c\x53\x88\xea\x30\x03\x9a\x6b\x6e\x37\xd7\x5a\xe6\xea\xb9\x16\x88\x95\x83\x46\x98\x6a\xa9\x40\x5b\x0e\xf1\xb4\x38\x49\xa1\x7a\xd0\x27\x6b\x1f\x07\xaa\x16\x79\x37\x54\x8f\x18\x52\xb1\x2a\xca\xeb\x8a\x14\xe8\x20\x1f\x6c\xaa\x1c\xa5\x95\x54\x66\xde\xa0\xa5\xca\xd7\xee\x4a\xcb\x75\x59\x70\xec\xeb\xef\xdf\xcd\xe5\xe1\x9b\x11\x67\x3a\xf5\xa1\xba\x5d\xdd\x2b\x7e\x3f\x9e\x5d\xe0\x32\x57\xbb\x9f\x87\xc8\x27\x37\x1b\x29\x8b\x72\xec\xa7\x25\x00\x6c\x5b\x56\xc7\x73\x39\xbd\x1b\xbb\x8f\xf1\x65\xa8\xfc\xa2\x9c\x46\x90\x57\xe4\xb6\x00\xa5\xcc\x44\xb1\x54\x5b\xee\x64\x3c\xf5\x84\x3c\x1b\xcc\x7e\x96\x5e\x12\xc9\xb1\x23\xb7\xf6\xac\x21\xdc\x3b\x54\xa6\xa1\x22\x1b\xf9\x53\x23\xc2\x46\x07\x57\x2b\x2e\x65\x20\x2c\x5f\x72\xd0\x31\xb1\x8f\x67\x66\x09\xfd\x75\xbb\x1b\xa4\x03\xf8\x6d\x3d\x7e\xcd\x79\xef\xb6\x16\xaa\x81\x0a\xeb\x7e\x00\x9c\x88\x95\xbb\xec\xd4\xf5\x8c\xeb\x78\x43\x8c\xbb\xba\xc4\x7b\xa0\x39\xfc\x2d\x90\x78\xf9\x34\x37\x4e\x04\x8b\x47\x27\x92\xe4\x8b\x8c\xd3\x6c\x33\xa4\x6e\x9f\x18\xbe\xc8\x0a\x67\x97\x24\x33\x87\x4d\xb7\xab\x5d\xd5\x2a\x2b\x35\x88\xe5\xee\xcc\x88\x66\xbe\x98\xf6\x30\x49\xd1\xca\x71\x3b\xed\xa1\xd9\xa6\x9d\xea\x73\xdb\x71\x17\x45\x10\xcc\xdf\x0d\xff\x05\x00\x00\xff\xff\xc3\x37\xc1\xe6\x33\x0a\x00\x00")

func templatesServiceMysqlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceMysqlTmpl,
		"templates/service/mysql.tmpl",
	)
}

func templatesServiceMysqlTmpl() (*asset, error) {
	bytes, err := templatesServiceMysqlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/mysql.tmpl", size: 2611, mode: os.FileMode(420), modTime: time.Unix(1453229528, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePapertrailTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x7f\x6b\x1b\x39\x10\xfd\xbf\x9f\x42\x88\x42\xa1\x38\x4e\x9c\x50\x8e\x13\xdc\x1f\xbe\x34\x69\x7d\x75\x12\xb3\x4e\x7b\x70\x25\x1c\xca\xee\xd8\xd1\x79\x2d\x2d\x92\x36\x4d\x1a\xfc\xdd\x6f\x24\xed\x7a\x7f\xc6\x0e\x81\xe3\xa0\x6e\x58\xe9\x69\x34\x7a\x33\xf3\x66\x9e\x9e\x48\x02\x0b\x21\x81\x50\x03\xfa\x5e\xc4\x40\xc9\x66\xf3\x86\x90\x27\xfc\x11\x42\xc7\x7f\xce\xaf\x61\x9d\xa5\xdc\xc2\xb9\xd2\x6b\x6e\xbf\x81\x36\x42\x49\x4a\x18\xa1\xc7\x47\xa3\xa3\x83\xa3\x5f\xf1\x1f\x1d\x04\xf8\x8c\x6b\xbe\x06\x8b\x18\xca\x0a\x13\xb8\xfa\x55\xa7\xb5\x4f\x5c\xb8\x7e\xcc\xc0\x5b\x98\x5b\x2d\xe4\xb2\x38\xed\xb7\x3e\x82\x89\xb5\xc8\x6c\x79\xc7\x8c\x67\xa0\xad\xe6\x22\x25\x5f\xa3\xe9\x80\xc0\x70\x39\x24\xef\x52\xb5\x34\xa3\x61\xb6\xdd\xe3\x59\x36\x8c\xd5\x9a\x8d\x46\xc7\x27\x1f\xde\xd1\xc2\xdc\xc6\xff\xdd\x14\xbe\x45\x60\x54\xae\x63\x68\xb8\x36\xe5\xeb\xdb\x84\x9f\x3d\x40\x9c\xbb\x2b\x23\x95\x42\x8f\xab\xcc\x13\xc1\xd8\x64\x7c\xc1\x98\xc7\xd4\x3c\x9e\x69\xe5\xdc\x10\x0d\xc3\x81\x3c\x63\xf2\x35\x38\xfc\x4c\xa5\x22\x7e\xfc\xa8\x62\xfc\x96\xb6\x85\x43\x64\xc9\x6a\x20\xf5\xf8\x00\x79\x1d\xfd\x52\xbb\xc4\x83\xe6\x16\xa3\x50\x9c\xff\xde\xd8\x22\x2d\x7b\x1e\x7e\xb6\x58\x40\x6c\xbd\xef\x69\xaa\x7e\xb4\xac\x15\xae\x0b\x19\x8b\x8c\xfb\xf0\xe0\x05\x45\x06\xa0\x79\x42\x53\xcf\xcc\x90\xaf\xf9\x4f\x25\xf9\x0f\xe3\xf8\xa5\xe4\xa6\xa4\xb3\x61\x67\x1c\xdb\xe0\x3d\x9e\x33\xd6\xb0\xea\xe1\x78\xa2\x05\xdf\x34\xbe\xeb\xbb\x0d\xcb\x18\x78\x7b\xe7\x9c\x3f\xa4\xcd\x65\xc7\x64\xe0\xba\xc9\x41\x9b\x81\x80\x7c\xbc\xc4\x7c\x74\x66\x42\xa0\x4f\x53\x95\x27\x21\x91\xd1\xe1\x2f\x98\xf7\x46\x98\x0e\x33\x74\x4f\xb8\x3c\xe6\x25\x21\xf3\xc0\x5d\x61\xeb\x73\xbc\x38\xb6\x3f\x7c\x1e\x56\x51\xdf\xbb\x4f\xca\x40\xb2\x89\xbc\x57\x2b\x38\xcf\x65\x38\xd0\x8b\xbe\x79\xe6\x92\xb2\x74\x76\x5d\xf3\xfe\x19\x93\x3d\xab\x3d\x29\xf4\xdf\xd3\xb0\x0a\xc1\x66\x9f\xc0\x46\x10\x2b\x9d\x74\xe3\xde\x87\x9d\xdf\x71\x9d\x4c\x50\xd1\xb8\x55\x7a\xff\x89\x20\x5f\xb7\x80\xc2\x06\x7c\xbd\x1f\x3f\x15\xc6\x06\xec\x0e\x77\x9c\xda\xb1\x53\x04\x59\x98\xaa\xe5\x27\xad\xf2\xec\xa5\xe0\x7d\x7e\x78\xf4\x2c\xb7\x08\x3d\xbb\xc7\x1c\x35\xaf\x4e\x8c\xfe\x04\xf8\x5f\x42\x1d\xbb\x2a\x5f\x94\x55\x5e\x8b\x09\x8f\x57\xaf\x7f\x20\x0a\xe4\xb9\x64\xec\x0f\x25\x0a\xa5\xa3\x03\xf7\x3f\xd7\x92\xa1\x3c\xb2\xd6\xa5\xb8\xf9\xe4\x8e\x2f\xb6\xcd\x23\x82\xa5\x6f\x6a\x9b\x01\xa1\x3d\xdb\xe3\x38\x56\xb9\xb4\x93\xa4\x40\x18\xe7\xed\xa1\xc3\x79\x18\x29\x71\xfe\x15\x5e\xd5\x1c\xec\xf0\xbd\xd3\xe4\x9b\x96\xaa\x16\xdc\x77\xd6\x76\x6b\x71\xfd\xab\x42\x96\xab\xdb\x48\xe2\xc8\xa0\xb9\x5c\x02\x79\xbb\x1a\x90\xb7\xf7\x84\xfd\x46\x86\xe3\xe8\xd2\x84\xb9\xa1\xe0\x0d\x41\x79\x86\x6d\x11\x41\xb8\x7e\x81\xfd\xd9\xf5\xf9\x56\x7f\xdc\x8e\x01\xfe\x61\x41\xa1\x19\xf3\x79\x38\xf7\xac\x97\xe7\x9a\x1d\xa0\xea\xb7\xa4\xd3\x48\xcf\x24\xbf\x4d\x21\x71\x3b\x56\xe7\xd0\xea\xa0\x35\xd3\x63\x1d\xe6\x0b\x74\x14\xdf\xb0\xd9\xb4\x9b\x6d\x29\x94\x9e\x69\xb2\x8d\x3e\x2a\xc2\xd8\x5a\xb7\xf0\xbd\x36\x9a\x60\xf5\x2c\x01\xd5\x01\x5f\x82\x66\x3b\x3d\xd2\xb5\x00\x74\x58\x2e\x67\xca\x88\xed\x64\x73\x1d\x4d\x2e\xfe\xfe\x7c\x15\x4d\xfe\xba\xba\xac\x27\x65\xc5\x62\x9d\x72\x90\x49\x45\x70\xf7\xea\xe7\x67\x96\x92\xd6\xad\xf2\xbf\x68\x74\xf9\xcc\x65\x92\x7a\xbb\x54\xc8\x04\x1e\x86\x77\xc5\x42\x23\x14\xe5\xb8\xd4\xe5\xa6\x6f\xae\xea\xa7\x87\x9e\xaa\x04\xba\x13\xd1\xfc\xe4\xf7\x3c\x5e\x81\xed\x2b\xbc\x83\x50\x79\xb1\xc2\x96\xf6\xb0\xa3\xd0\x42\x65\xb4\x63\x71\xf2\x05\x1e\x1d\x36\xf4\xc5\xc3\x6a\x88\x1c\xfe\x14\x19\x7d\x76\x1e\x89\xb0\x38\x45\x98\x25\x24\x7a\xfc\x4f\x53\xaf\xe9\x35\xee\xa9\xdc\xab\xd7\xf1\x07\xda\xad\x9e\xc6\x28\x7a\x95\xdb\x2c\xb7\x75\xd2\x5f\x51\x54\x53\x21\x57\xed\xb0\x7d\xe3\x69\xee\x5d\xdc\xa6\xf5\x0b\x92\xa9\x33\x9e\x97\x56\x2a\x5e\x1d\xa4\xfd\x96\x37\xee\x57\x19\xfb\x37\x00\x00\xff\xff\xcd\x2b\x5b\x59\x4a\x0c\x00\x00")

func templatesServicePapertrailTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePapertrailTmpl,
		"templates/service/papertrail.tmpl",
	)
}

func templatesServicePapertrailTmpl() (*asset, error) {
	bytes, err := templatesServicePapertrailTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/papertrail.tmpl", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1453229528, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServicePostgresTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x56\x5b\x6f\xe2\x38\x14\x7e\xe7\x57\x58\x7e\xda\x95\x58\x96\xb2\x17\x69\xa3\xd5\x48\x14\x68\x15\x69\xa6\x83\x0a\xd3\x79\x18\xf5\xc1\xd8\x07\x64\x4d\xb0\x2d\xdb\xe9\xa8\x53\xf1\xdf\xe7\x38\x24\x21\x26\x04\x7a\x47\x21\xe7\x7c\xdf\xb9\x1f\xfb\xe5\x85\x08\x58\x4b\x05\x84\x3a\xb0\x4f\x92\x03\x25\xbb\x5d\x8f\x90\x17\xfc\x27\x84\x8e\xbf\x2e\x96\xb0\x35\x19\xf3\x70\xa3\xed\x96\xf9\x07\xb0\x4e\x6a\x45\x49\x42\xe8\x68\x78\x35\xfc\x63\xf8\x1f\xfe\xd1\xfe\x5e\x7d\xce\x2c\xdb\x82\x47\x1d\x9a\x94\x14\x81\x24\xcb\x34\x47\x06\xb1\xf0\xda\xb2\x0d\x34\x64\x28\x5d\x3e\x1b\x28\xe8\xee\xf2\xed\x0a\x6c\x49\x55\x88\xa6\xb0\x66\x79\xe6\x0b\xe9\xd5\x30\x96\x38\x6e\xa5\xf1\x95\x2b\xb5\x09\xe2\xf6\x36\x88\x93\x3f\x81\xfc\x76\x7b\xfd\x3b\x2d\x51\xbb\x0a\x4e\xa7\xcc\xb3\x15\x73\x5d\x7e\x2c\xbc\x95\x6a\xd3\xe5\x07\x33\xe6\x9c\x23\xa5\x2a\x11\xa5\x0d\xa2\x30\x21\x6d\x17\x52\xe5\x3c\x53\x1c\x0a\xa3\xef\x71\x43\xac\x06\x7e\x34\xd8\x4a\x6e\xf5\x39\x77\x2a\x3b\x84\x67\xcc\x39\xb2\xd6\xb6\xe1\x99\x16\xe0\xda\xae\xcd\x51\xf1\x87\xb6\xe2\x0d\x6e\xc5\x36\x17\xd8\x48\x60\x89\xa9\x78\x5a\x16\x16\xf9\x4a\x81\x77\x27\x0c\x20\xfa\xa3\x74\xfe\x7f\x6c\xbb\x24\x99\x4d\x46\x49\xb2\xd7\x4d\x92\x54\x7c\xe8\xb2\x89\xa0\x87\xf9\x84\xb8\x92\xb5\x65\xee\x0b\x76\x76\x51\x85\xf7\xe4\xd9\x68\xe7\x37\x16\xf3\x74\x39\xe0\xbc\xb2\xd3\xf2\xe0\xc1\xf0\xd3\xc1\x1e\xe2\xc4\x08\x42\x90\xe7\x63\xac\x99\x7b\x0d\x7e\xfa\x39\xf7\x26\x8f\xd2\x49\xe7\xda\xfa\x7f\xfe\xfe\x6b\xb4\xe4\x66\x2c\x84\x0d\x22\x24\x60\x59\x0e\xfb\xc7\x1b\x95\x24\xb7\xe0\xc7\xde\xe3\xf7\x6f\x87\x36\xa1\x7d\x42\x67\x4a\x18\x2d\x95\x1f\x04\x24\x38\x47\xc9\x23\xd9\x35\xfb\xe3\xc0\x1d\x1e\xdf\xc7\x5d\x20\x8f\x88\x67\xea\x69\x5e\x66\xbb\x39\xa1\x11\xf9\x3d\xac\x43\x2e\x6a\x79\x17\x41\xb3\x89\x4f\x11\xd4\xf2\x2e\x82\x66\xd3\x9c\x22\xa8\xe5\x81\x20\x2a\xc7\x3d\x38\x9d\x5b\x0e\x51\x41\x16\xc0\x73\x2b\xfd\xf3\xad\xd5\xb9\xb9\xd4\x0b\xb1\x72\xa3\x23\xe6\x56\x1b\xb0\x5e\x42\x3c\x3b\x28\x29\x54\x8f\x1a\xa6\x6a\x5d\x52\x6d\xf6\x7e\x13\x11\x19\x49\xd5\xa6\x28\x35\x16\xac\xa1\x43\x42\xbc\xa9\x41\xab\x5e\x73\x9d\x05\x4e\xcf\x4d\xa8\xe3\x8d\xd5\xdb\xb2\xf8\x34\xf4\x42\x78\xb7\xd4\xc7\x6f\x26\x52\xd8\x34\x44\x8b\xcb\x7b\x50\xfc\xfe\x79\xf5\x2f\x2d\xd3\xb5\xff\x79\x8c\x7c\xc2\x39\x49\x45\x94\xe6\x30\x39\x0d\xc0\xae\x63\x97\x5c\x4a\xeb\xfd\x14\x3f\xa6\xd7\x4d\xe5\x57\xa5\x35\x82\xbc\x2d\xbd\x05\x2e\x15\x2e\x0a\xa7\xda\x7c\x67\x43\xaa\x07\xe6\x62\x3c\x87\xd1\x7a\x4d\x30\xa7\x8e\xe1\xda\xb3\x96\xf0\xe0\x50\x99\x89\xca\xd8\x24\x9c\x24\x11\x36\x3a\xcc\x3a\x71\xa9\x00\xe5\xe5\x5a\x82\x8d\x0d\x87\x78\x16\x9e\xf1\xef\x77\xfb\x71\x3a\x82\xdf\xd5\x43\xd8\x9e\xfd\x7e\x67\xad\x5a\xa8\x66\xe9\x8f\x80\x33\xb5\xc1\x0b\x10\x3d\xbd\xec\x51\xfe\x89\x39\xbc\xd1\xc4\x0b\xa1\xbd\x05\x3a\x20\xf1\x22\x6a\x6f\x9f\x08\x16\x0f\x50\x24\xc9\x57\x99\xe4\xd9\xf3\x98\xe3\x62\x71\x72\x95\x15\xfe\xae\x59\xe6\x8e\xfb\x6e\x5f\xbe\xaa\x5b\x36\xe6\x88\x08\x4f\x91\x68\xf2\x8b\x99\x6f\xe6\x29\xda\x3d\xb8\xdc\x1e\xdb\x9d\xda\xab\x3e\x77\x3d\xbc\x3f\x82\x12\xe1\xca\xf8\x2b\x00\x00\xff\xff\xa1\x5a\xfe\x19\x4a\x0a\x00\x00")

func templatesServicePostgresTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServicePostgresTmpl,
		"templates/service/postgres.tmpl",
	)
}

func templatesServicePostgresTmpl() (*asset, error) {
	bytes, err := templatesServicePostgresTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/postgres.tmpl", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1453229528, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceRedisTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\xd1\x6f\xda\x3e\x10\x7e\xe7\xaf\xb0\xfc\xf4\xfb\x49\x8c\x41\x27\x75\x6a\x34\x4d\x42\x0c\xaa\x48\x5b\x87\x80\x76\x0f\x55\x1f\x8c\x7d\x50\x6b\x89\x1d\xd9\x4e\xb7\xaa\xe2\x7f\xdf\xd9\x09\x10\x27\x1d\x6d\xa5\xb5\x80\x22\xdf\xdd\xf7\xdd\x7d\x77\xb6\xf3\xf4\x44\x04\x6c\xa4\x02\x42\x2d\x98\x07\xc9\x81\x92\xdd\xae\x47\xc8\x13\x7e\x09\xa1\xe3\x1f\xcb\x15\xe4\x45\xc6\x1c\xcc\xb4\xc9\x99\xbb\x01\x63\xa5\x56\x94\x24\x84\x9e\x0d\x47\xc3\x77\xc3\x0b\xfc\xd0\x7e\xe5\x3e\x67\x86\xe5\xe0\xd0\x87\x26\x35\x04\xae\x7e\x61\x8e\xad\x99\x85\xc6\x1a\xae\xae\x1e\x0b\x08\x30\x4b\x67\xa4\xda\xd6\x10\x55\x00\x6c\x58\x99\xb9\x60\x1d\xc6\x06\xcb\x8d\x2c\xdc\x3e\x83\xda\x91\x88\x9a\x81\x48\x25\xe0\x37\xad\x03\x76\xfb\x48\x9a\x2a\xeb\x98\xe2\x10\x38\xbb\x59\x9c\x4c\x02\x8d\x9c\xf1\x7b\x18\xb8\xb3\x41\x2e\xb9\xd1\x7f\x4b\x08\x1d\x57\xf7\x40\x1c\x22\x12\xbd\xc1\x54\x2a\x4e\xe2\x34\x29\xb1\xf8\x4e\x52\x73\x66\xed\x2f\x6d\xc4\x1b\x64\x89\xab\xbf\x56\x88\x2b\xc8\x7f\x48\xb0\x06\x62\x20\xd7\x0f\x20\xfe\xef\x12\x2d\xcb\xb5\x02\x67\x9f\x2f\xfc\xab\xb4\xee\x13\xb6\x39\x49\xa6\x93\xb3\x24\xa9\x7c\x93\x24\x15\x9f\x4f\xd4\x79\x33\x9f\x10\x5b\xa3\x76\xe8\x6e\x0a\xfe\x3c\xd5\x91\x05\xe3\x3d\xc5\x69\x86\x03\x72\xaf\x81\x4f\xbf\x97\xae\x28\xa3\x62\xe8\x5c\x1b\x77\xfe\xe1\xe3\xc5\x8a\x17\x63\x21\x8c\x37\x21\x00\xcb\x4a\xa8\x1e\x67\x2a\x49\x2e\xc1\x8d\x9d\x6f\xe6\x2d\xa1\x0b\x28\x32\xc9\x99\xa7\xba\x34\xba\x2c\x68\x1f\x31\x8c\xcc\x99\x79\x9c\x2a\x31\xd7\x52\xb9\x81\x07\x02\x6b\x29\xb9\x23\xbb\x66\xcf\x8e\x54\xfe\xf1\x9f\x50\x05\xa0\x16\xcf\x54\x3d\x2c\x40\x48\xdb\xdc\x3a\x11\xd1\x02\x36\x5e\xa6\x83\xdd\x47\x47\x3a\x2d\xc0\xea\xd2\x70\x88\x94\x5a\x02\x2f\x8d\x74\x8f\x55\x2e\x2f\x34\x29\x76\x6e\xb4\x6a\x6e\x74\x01\xc6\x49\x88\x47\x0a\x2d\xc1\xb5\xd5\x49\xe3\xeb\x20\xfb\xd3\xa5\xdf\x74\x8f\x18\x52\xb5\x0d\x8a\xa3\x6e\x0d\x1f\xe2\x8b\x4d\x0b\xa4\x74\x9a\xeb\xcc\x03\x3a\x1e\x64\x9c\x19\x9d\xd7\x3d\xa0\xbe\x25\x7e\x6d\xa5\xdb\x2b\x13\x29\x4c\xea\x4b\xa5\xa3\xe1\x20\xfc\xbf\x1f\x9d\xd3\x5a\xab\xea\xef\x2e\xca\x09\xa7\x37\x15\x91\xc6\x7e\x9e\x1b\x01\xbb\xce\xc0\x4f\xfc\xf1\x50\x6d\x9c\x17\x85\xcd\x98\x75\x32\x04\xec\xf7\xda\x1b\xe4\x6d\x29\xbb\xa8\x94\x0d\x28\x64\xdb\x82\x39\xec\xfb\x54\xd8\xa8\x9c\xfd\x69\x70\xb2\xa4\xce\xdc\xbe\xb2\xa4\xee\xbc\xbf\xa6\xae\x71\xe9\x34\xde\x2d\x92\xcf\x98\xcc\xf0\x10\x33\x53\xc5\xd6\x19\xf8\x36\x6c\x58\x66\xa1\xdf\x76\xfe\x26\x95\x36\xf5\x55\x74\x5d\x6c\x0d\x13\x3e\x1f\x67\xca\xd8\x35\x24\x75\xa5\xc5\xe1\xdc\x3f\x88\x10\x5d\x08\xc7\xba\x9f\x6d\xe7\x15\x5e\x69\x51\x70\xa7\xdf\x2d\x80\xa9\xda\xe2\x8d\x7a\x98\xfd\xb8\x29\x57\x65\x1e\xe2\x27\x59\x69\xeb\x8b\x92\x8e\x62\x97\x78\x86\x9b\x96\xb6\xbc\xf1\x40\x1c\x33\x0c\x8d\x59\x3a\xc6\x7f\x86\xe4\x5b\xf9\xc5\xdb\x2e\x8c\xc7\x6d\x73\x40\xa2\x7d\x8f\x07\xcb\x5d\x77\x50\x7a\xfb\xdf\x5d\x0f\x5f\x21\x40\x09\xff\xd6\xf0\x27\x00\x00\xff\xff\x64\xe5\x91\xd9\x4d\x08\x00\x00")

func templatesServiceRedisTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceRedisTmpl,
		"templates/service/redis.tmpl",
	)
}

func templatesServiceRedisTmpl() (*asset, error) {
	bytes, err := templatesServiceRedisTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/redis.tmpl", size: 2125, mode: os.FileMode(420), modTime: time.Unix(1453229528, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templatesServiceWebhookTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x4d\x6f\xb2\x40\x10\xc7\xef\x7c\x8a\xcd\x5e\xbc\x28\xa0\xcf\x73\x29\x37\xd3\x97\x53\x63\x8d\xa0\x9e\x71\x19\x75\x23\x30\x9b\x65\x30\x6d\x88\xdf\xbd\xbb\x4b\x51\x48\xeb\xa5\x4d\x48\xc8\xce\xcb\x6f\x66\xfe\x33\x4d\xc3\x32\xd8\xcb\x12\x18\xaf\x40\x9f\xa5\x00\xce\x2e\x17\xaf\xf1\x18\xe3\xf3\x6d\x9c\x40\xa1\xf2\x94\xe0\x05\x75\x91\xd2\x06\x74\x25\xb1\xe4\x2c\x62\x7c\x16\x4e\xc3\x49\xf8\x60\x3e\x3e\xb6\xc1\xcb\x54\xa7\x05\x90\x89\xe0\x11\xb3\xe9\xc6\xb6\xd6\xf9\xf5\x61\x9e\xc9\x87\x02\x97\x1b\x93\x96\xe5\xc1\xe5\x39\xc7\x13\x54\x42\x4b\x45\x1d\x7b\x0b\xbb\x23\xe2\x89\xad\x57\xaf\x63\x06\xfe\xc1\x67\xa3\x23\x91\xaa\xa2\x20\x38\x68\x99\xf9\x02\xcb\x33\xbe\x9b\x5f\x11\xe8\x54\x9c\x26\x36\x38\x98\xce\xfe\xfd\x1f\x71\x87\xbc\xb4\x64\xfe\x58\x57\x84\x45\x82\x4a\x8a\x5f\xf5\x31\xa4\x2d\x90\xe4\x5e\x8a\xd4\xba\xff\xcc\xf4\xbe\xb8\x7c\x05\x15\xd6\x5a\x40\x4f\xb6\x7e\xa1\xea\xc7\x22\xed\x60\x51\x14\x2f\xe2\xb8\xde\xdd\x0a\x5c\xab\x76\x9b\x32\xb1\x53\x3f\xbc\xd9\x97\x1a\x15\x68\x92\xd0\xe7\x1a\x7b\xdc\xee\x3e\xc1\x13\xd8\xa4\xc6\xf6\xb5\xe7\xd1\x50\xc2\x4e\x89\xb6\x17\x6b\x9a\x6b\x37\xd4\x2d\xfc\xbb\x46\x83\x24\x53\x9e\x50\x60\xee\x86\xb0\x2b\xe5\x3d\xe7\x73\x99\x29\x94\x25\x0d\x89\xf6\x86\x9c\x5c\x9d\x6c\x7d\xf1\xde\x6a\x52\x35\xdd\xbf\xb8\x4d\x9a\xd7\xc0\xef\xe0\x1c\xc6\x33\xb7\xde\x30\x28\x33\x7b\xf5\x9f\x01\x00\x00\xff\xff\x54\xf9\xe1\x63\x0d\x03\x00\x00")

func templatesServiceWebhookTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceWebhookTmpl,
		"templates/service/webhook.tmpl",
	)
}

func templatesServiceWebhookTmpl() (*asset, error) {
	bytes, err := templatesServiceWebhookTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service/webhook.tmpl", size: 781, mode: os.FileMode(420), modTime: time.Unix(1453229528, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/app.tmpl": templatesAppTmpl,
	"templates/service/mysql.tmpl": templatesServiceMysqlTmpl,
	"templates/service/papertrail.tmpl": templatesServicePapertrailTmpl,
	"templates/service/postgres.tmpl": templatesServicePostgresTmpl,
	"templates/service/redis.tmpl": templatesServiceRedisTmpl,
	"templates/service/webhook.tmpl": templatesServiceWebhookTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"app.tmpl": &bintree{templatesAppTmpl, map[string]*bintree{
		}},
		"service": &bintree{nil, map[string]*bintree{
			"mysql.tmpl": &bintree{templatesServiceMysqlTmpl, map[string]*bintree{
			}},
			"papertrail.tmpl": &bintree{templatesServicePapertrailTmpl, map[string]*bintree{
			}},
			"postgres.tmpl": &bintree{templatesServicePostgresTmpl, map[string]*bintree{
			}},
			"redis.tmpl": &bintree{templatesServiceRedisTmpl, map[string]*bintree{
			}},
			"webhook.tmpl": &bintree{templatesServiceWebhookTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

