{{ define "service" }}
  {
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters": {
      "AllowSSHFrom": {
        "Type" : "String",
        "Default" : "0.0.0.0/0",
        "Description" : "Allow SSH From (CIDR notation)"
      },
      "AvailabilityZones": {
        "Type" : "CommaDelimitedList",
        "Default" : "",
        "Description" : "Availability Zones (specify 3)"
      },
      "Password": {
        "Type" : "String",
        "Default" : "",
        "Description" : "Server password"
      }
    },
    "Outputs": {
      "Addr": { "Value": { "Fn::GetAtt": [ "Balancer", "DNSName" ] } },
      "Port": { "Value": "6379" },
      "Password": { "Value": { "Ref": "Password" } }
    },
    "Resources": {
      "Vpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "10.0.0.0/16",
          "InstanceTenancy": "default",
          "Tags": [
            { "Key": "Name", "Value": { "Ref": "AWS::StackName" } }
          ]
        }
      },
      "Gateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
        }
      },
      "GatewayAttachment": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "InternetGatewayId": { "Ref": "Gateway" },
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "Subnet0": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": { "Fn::Select": [ "0", { "Ref": "AvailabilityZones" } ] },
          "CidrBlock": "10.0.1.0/24",
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "Subnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": { "Fn::Select": [ "1", { "Ref": "AvailabilityZones" } ] },
          "CidrBlock": "10.0.2.0/24",
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "Subnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": { "Fn::Select": [ "2", { "Ref": "AvailabilityZones" } ] },
          "CidrBlock": "10.0.3.0/24",
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "Routes": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "RouteDefault": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "Gateway" },
          "RouteTableId": { "Ref": "Routes" }
        }
      },
      "Subnet0Routes": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "Subnet0" },
          "RouteTableId": { "Ref": "Routes" }
        }
      },
      "Subnet1Routes": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "Subnet1" },
          "RouteTableId": { "Ref": "Routes" }
        }
      },
      "Subnet2Routes": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "Subnet2" },
          "RouteTableId": { "Ref": "Routes" }
        }
      },
      "SecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Instances",
          "SecurityGroupIngress": [
            { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": { "Ref": "AllowSSHFrom" } },
            { "IpProtocol": "tcp", "FromPort": "6379", "ToPort": "6379", "CidrIp": "0.0.0.0/0" }
          ],
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "BalancerSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "redis balancer",
          "SecurityGroupIngress": [
            { "IpProtocol": "tcp", "FromPort": "6379", "ToPort": "6379", "CidrIp": "0.0.0.0/0" }
          ],
          "VpcId": { "Ref": "Vpc" }
        }
      },
      "Balancer": {
        "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties": {
          "Subnets": [
            { "Ref": "Subnet0" },
            { "Ref": "Subnet1" },
            { "Ref": "Subnet2" }
          ],
          "ConnectionDrainingPolicy": { "Enabled": true, "Timeout": 60 },
          "ConnectionSettings": { "IdleTimeout": 60 },
          "CrossZone": true,
          "HealthCheck": {
            "HealthyThreshold": "2",
            "Interval": 5,
            "Target": "TCP:6379",
            "Timeout": 3,
            "UnhealthyThreshold": "2"
          },
          "LBCookieStickinessPolicy": [{ "PolicyName": "affinity" }],
          "Listeners": [
            { "Protocol": "TCP", "LoadBalancerPort": "6379", "InstanceProtocol": "TCP", "InstancePort": "6379" }
          ],
          "Scheme": "internet-facing",
          "SecurityGroups": [ { "Ref": "BalancerSecurityGroup" } ]
        }
      },
      "LaunchConfiguration": {
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Properties": {
          "AssociatePublicIpAddress": true,
          "BlockDeviceMappings": [ 
            { "DeviceName": "/dev/sda1", "Ebs": { "VolumeSize": "10", "VolumeType": "standard" } }
          ],
          "EbsOptimized": false,
          "ImageId": "ami-8ce49ee4",
          "InstanceMonitoring": true,
          "InstanceType": "t2.micro",
          "KeyName": "production",
          "SecurityGroups": [ { "Ref": "SecurityGroup" } ],
          "UserData": ""
        }
      },
      "Instances": {
        "Type": "AWS::AutoScaling::AutoScalingGroup",
        "Properties" : {
          "LaunchConfigurationName" : { "Ref": "LaunchConfiguration" },
          "AvailabilityZones": { "Ref": "AvailabilityZones" },
          "VPCZoneIdentifier": [ 
            { "Ref": "Subnet0" },
            { "Ref": "Subnet1" },
            { "Ref": "Subnet2" }
          ],
          "Cooldown": 5,
          "DesiredCapacity": "1",
          "MinSize" : "1",
          "MaxSize" : "2",
          "LoadBalancerNames": [ { "Ref": "Balancer" } ],
          "HealthCheckType": "EC2",
          "HealthCheckGracePeriod": 30
        },
        "UpdatePolicy": {
          "AutoScalingRollingUpdate": {
            "MaxBatchSize": 1,
            "MinInstancesInService": 1
          }
        }
      }
    }
  }
{{ end }}
