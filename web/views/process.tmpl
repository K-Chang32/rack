{{ define "title" }} Convox {{ end }}

{{ define "body" }}

  {{ $app := . }}

	<div id="alert" class="alert alert-danger  alert-dismissible" role="alert" style="display:none;">
		<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
		<strong>Error:</strong><span class="message"></span>
	</div>

	<ol class="breadcrumb">
		<li><a href="/apps">Apps</a></li>
		<li><a href="/apps/{{ .App }}">{{ .App }}</a></li>
		<li class="active">{{ .Name }}</li>
	</ol>

	<div class="panel panel-default">
		<div class="panel-heading">
			<h3 class="panel-title">{{ .Name }}</h3>
		</div>
		<div class="panel-body">
		</div>
	</div>

	<div class="table-title">
		<table class="table table-striped table-bordered">
			<thead>
				<tr class="title">
					<th colspan="6">
						Instances
					</th>
				</tr>
				<tr>
					<th>ID</th>
					<th class="expand">State</th>
					<th>CPU</th>
					<th>Memory</th>
					<th>Disk</th>
				</tr>
			</thead>
			<tbody>
				{{ range .Instances }}
					<tr>
						<td class="id">{{ .Id }}</td>
						<td>{{ .State }}</td>
						{{ $metrics := .Metrics }}
						<td>{{ meter "cpu"    $metrics.Cpu    100 }}</td>
						<td>{{ meter "memory" $metrics.Memory 100 }}</td>
						<td>{{ meter "disk"   $metrics.Disk   100 }}</td>
					</tr>
				{{ end }}
			</tbody>
		</table>
	</div>

	<ul class="nav nav-tabs">
		<li role="presentation" class="active"><a href="#tab-logs" aria-controls="logs" role="tab" data-toggle="tab">Logs</a></li>
	</ul>

	<div class="tab-content">
		<div role="tabpanel" class="tab-pane active" id="tab-logs">
			<pre id="process-logs">Connecting...</pre>
		</div>
	</div>

	<script>
		$(window).ready(function() {
			connect_log_socket();
		});

		var logs;

		function connect_log_socket() {
			logs = new WebSocket('ws://' + location.host + '/apps/{{ .App }}/processes/{{ .Name }}/logs');

			logs.onopen = function(e) {
				$('#process-logs').text('');
			}

			logs.onclose = function(e) {
				console.log('onclose', e);
				//setTimeout(connect_log_socket, 1000);
			}

			logs.onmessage = function(e) {
				var div = $('#process-logs');
				div.append(e.data);
				div[0].scrollTop = div[0].scrollHeight;
			}
		}
	</script>

{{ end }}
