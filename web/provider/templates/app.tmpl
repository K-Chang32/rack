{{ define "app" }}
  {{ $app := . }}
  {
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters" : {
      "Release" : {
        "Type" : "String",
        "Default" : "",
        "Description" : "Release"
      },
      "Repository" : {
        "Type" : "String",
        "Default" : "",
        "Description" : "Repository"
      }
    },
    "Resources": {
      {{ range .Subnets }}
        {{ template "subnet" . }}
      {{ end }}
      {{ safe .ProcessFormation }}
      {{ safe .ResourceFormation }}
      "Security": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "{{ .Cluster }}-{{ .Name }}",
          "SecurityGroupIngress": [
            { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "24.98.26.131/32" },
            { "IpProtocol": "tcp", "FromPort": "5000", "ToPort": "5000", "CidrIp": "0.0.0.0/0" }
          ],
          "VpcId": "{{ .Vpc }}"
        }
      },
      "DynamoBuilds": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "TableName": "{{ .Cluster }}-{{ .Name }}-builds",
          "AttributeDefinitions": [
            { "AttributeName": "id", "AttributeType": "S" },
            { "AttributeName": "app", "AttributeType": "S" },
            { "AttributeName": "created", "AttributeType": "S" }
          ],
          "KeySchema": [
            { "AttributeName": "id", "KeyType": "HASH" }
          ],
          "GlobalSecondaryIndexes": [{
            "IndexName": "app.created",
            "KeySchema": [
              { "AttributeName": "app", "KeyType": "HASH" },
              { "AttributeName": "created", "KeyType": "RANGE" }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": "5",
              "WriteCapacityUnits": "5"
            }
          }],
          "ProvisionedThroughput": {
            "ReadCapacityUnits": "5",
            "WriteCapacityUnits": "5"
          }
        }
      },
      "DynamoProcesses": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "TableName": "{{ .Cluster }}-{{ .Name }}-processes",
          "AttributeDefinitions": [
            { "AttributeName": "name", "AttributeType": "S" }
          ],
          "KeySchema": [
            { "AttributeName": "name", "KeyType": "HASH" }
          ],
          "ProvisionedThroughput": {
            "ReadCapacityUnits": "5",
            "WriteCapacityUnits": "5"
          }
        }
      },
      "DynamoReleases": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "TableName": "{{ .Cluster }}-{{ .Name }}-releases",
          "AttributeDefinitions": [
            { "AttributeName": "id", "AttributeType": "S" },
            { "AttributeName": "app", "AttributeType": "S" },
            { "AttributeName": "created", "AttributeType": "S" }
          ],
          "KeySchema": [
            { "AttributeName": "id", "KeyType": "HASH" }
          ],
          "GlobalSecondaryIndexes": [{
            "IndexName": "app.created",
            "KeySchema": [
              { "AttributeName": "app", "KeyType": "HASH" },
              { "AttributeName": "created", "KeyType": "RANGE" }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": "5",
              "WriteCapacityUnits": "5"
            }
          }],
          "ProvisionedThroughput": {
            "ReadCapacityUnits": "5",
            "WriteCapacityUnits": "5"
          }
        }
      }
    },
    "Outputs": {
      {{ range .Subnets }}
        "{{ upper .Name }}": {
          "Value": { "Ref": "{{ upper .Name }}" }
        },
      {{ end }}
      {{ range .Processes }}
        {{ if .Balancer }}
          "{{ upper .Name }}BalancerId": {
            "Value": { "Ref": "{{ upper .Name }}Balancer" }
          },
          "{{ upper .Name }}BalancerHost": {
            "Value": { "Fn::GetAtt": [ "{{ upper .Name }}Balancer", "DNSName" ] }
          },
        {{ end }}
      {{ end }}
      "Security": {
        "Value": { "Ref": "Security" }
      }
    }
  }
{{ end }}

{{ define "subnet" }}
  "{{ upper .Name }}": {
    "Type": "AWS::EC2::Subnet",
    "Properties": {
      "AvailabilityZone": "{{ .AvailabilityZone }}",
      "CidrBlock": "{{ .Cidr }}",
      "VpcId": "{{ .Vpc }}"
    }
  },
  "{{ upper .Name }}Routes": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "SubnetId": { "Ref": "{{ upper .Name }}" },
      "RouteTableId": "{{ .RouteTable }}"
    }
  },
{{ end }}
